!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AES_CTR_IV_SIZE	libavutil/aes_ctr.h	31;"	d
AES_CTR_KEY_SIZE	libavutil/aes_ctr.h	30;"	d
AVABufferSinkParams	libavfilter/buffersink.h	/^typedef struct AVABufferSinkParams {$/;"	s
AVABufferSinkParams	libavfilter/buffersink.h	/^} AVABufferSinkParams;$/;"	t	typeref:struct:AVABufferSinkParams
AVActiveFormatDescription	libavutil/frame.h	/^enum AVActiveFormatDescription {$/;"	g
AVAppToDevMessageType	libavdevice/avdevice.h	/^enum AVAppToDevMessageType {$/;"	g
AVAudioFifo	libavutil/audio_fifo.h	/^typedef struct AVAudioFifo AVAudioFifo;$/;"	t	typeref:struct:AVAudioFifo
AVAudioResampleContext	libavresample/avresample.h	/^typedef struct AVAudioResampleContext AVAudioResampleContext;$/;"	t	typeref:struct:AVAudioResampleContext
AVAudioServiceType	libavcodec/avcodec.h	/^enum AVAudioServiceType {$/;"	g
AVBSFContext	libavcodec/avcodec.h	/^typedef struct AVBSFContext {$/;"	s
AVBSFContext	libavcodec/avcodec.h	/^} AVBSFContext;$/;"	t	typeref:struct:AVBSFContext
AVBSFInternal	libavcodec/avcodec.h	/^typedef struct AVBSFInternal AVBSFInternal;$/;"	t	typeref:struct:AVBSFInternal
AVBSFList	libavcodec/avcodec.h	/^typedef struct AVBSFList AVBSFList;$/;"	t	typeref:struct:AVBSFList
AVBitStreamFilter	libavcodec/avcodec.h	/^typedef struct AVBitStreamFilter {$/;"	s
AVBitStreamFilter	libavcodec/avcodec.h	/^} AVBitStreamFilter;$/;"	t	typeref:struct:AVBitStreamFilter
AVBitStreamFilterContext	libavcodec/avcodec.h	/^typedef struct AVBitStreamFilterContext {$/;"	s
AVBitStreamFilterContext	libavcodec/avcodec.h	/^} AVBitStreamFilterContext;$/;"	t	typeref:struct:AVBitStreamFilterContext
AVBlowfish	libavutil/blowfish.h	/^typedef struct AVBlowfish {$/;"	s
AVBlowfish	libavutil/blowfish.h	/^} AVBlowfish;$/;"	t	typeref:struct:AVBlowfish
AVBuffer	libavutil/buffer.h	/^typedef struct AVBuffer AVBuffer;$/;"	t	typeref:struct:AVBuffer
AVBufferPool	libavutil/buffer.h	/^typedef struct AVBufferPool AVBufferPool;$/;"	t	typeref:struct:AVBufferPool
AVBufferRef	libavutil/buffer.h	/^typedef struct AVBufferRef {$/;"	s
AVBufferRef	libavutil/buffer.h	/^} AVBufferRef;$/;"	t	typeref:struct:AVBufferRef
AVBufferSinkParams	libavfilter/buffersink.h	/^typedef struct AVBufferSinkParams {$/;"	s
AVBufferSinkParams	libavfilter/buffersink.h	/^} AVBufferSinkParams;$/;"	t	typeref:struct:AVBufferSinkParams
AVBufferSrcParameters	libavfilter/buffersrc.h	/^typedef struct AVBufferSrcParameters {$/;"	s
AVBufferSrcParameters	libavfilter/buffersrc.h	/^} AVBufferSrcParameters;$/;"	t	typeref:struct:AVBufferSrcParameters
AVCHROMA_LOC_BOTTOM	libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOM      = 6,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_BOTTOMLEFT	libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOMLEFT  = 5,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_CENTER	libavutil/pixfmt.h	/^    AVCHROMA_LOC_CENTER      = 2, \/\/\/< MPEG-1 4:2:0, JPEG 4:2:0, H.263 4:2:0$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_LEFT	libavutil/pixfmt.h	/^    AVCHROMA_LOC_LEFT        = 1, \/\/\/< MPEG-2\/4 4:2:0, H.264 default for 4:2:0$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_NB	libavutil/pixfmt.h	/^    AVCHROMA_LOC_NB               \/\/\/< Not part of ABI$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOP	libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOP         = 4,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOPLEFT	libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOPLEFT     = 3, \/\/\/< ITU-R 601, SMPTE 274M 296M S314M(DV 4:1:1), mpeg2 4:2:2$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_UNSPECIFIED	libavutil/pixfmt.h	/^    AVCHROMA_LOC_UNSPECIFIED = 0,$/;"	e	enum:AVChromaLocation
AVCODEC_AVCODEC_H	libavcodec/avcodec.h	22;"	d
AVCODEC_AVDCT_H	libavcodec/avdct.h	20;"	d
AVCODEC_AVFFT_H	libavcodec/avfft.h	20;"	d
AVCODEC_D3D11VA_H	libavcodec/d3d11va.h	25;"	d
AVCODEC_DIRAC_H	libavcodec/dirac.h	24;"	d
AVCODEC_DV_PROFILE_H	libavcodec/dv_profile.h	20;"	d
AVCODEC_DXVA2_H	libavcodec/dxva2.h	24;"	d
AVCODEC_JNI_H	libavcodec/jni.h	24;"	d
AVCODEC_MEDIACODEC_H	libavcodec/mediacodec.h	24;"	d
AVCODEC_QSV_H	libavcodec/qsv.h	22;"	d
AVCODEC_VAAPI_H	libavcodec/vaapi.h	25;"	d
AVCODEC_VDA_H	libavcodec/vda.h	24;"	d
AVCODEC_VDPAU_H	libavcodec/vdpau.h	25;"	d
AVCODEC_VERSION_H	libavcodec/version.h	20;"	d
AVCODEC_VIDEOTOOLBOX_H	libavcodec/videotoolbox.h	24;"	d
AVCODEC_VORBIS_PARSER_H	libavcodec/vorbis_parser.h	27;"	d
AVCODEC_XVMC_H	libavcodec/xvmc.h	22;"	d
AVCOL_PRI_BT2020	libavutil/pixfmt.h	/^    AVCOL_PRI_BT2020      = 9,  \/\/\/< ITU-R BT2020$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470BG	libavutil/pixfmt.h	/^    AVCOL_PRI_BT470BG     = 5,  \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470M	libavutil/pixfmt.h	/^    AVCOL_PRI_BT470M      = 4,  \/\/\/< also FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT709	libavutil/pixfmt.h	/^    AVCOL_PRI_BT709       = 1,  \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_FILM	libavutil/pixfmt.h	/^    AVCOL_PRI_FILM        = 8,  \/\/\/< colour filters using Illuminant C$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_JEDEC_P22	libavutil/pixfmt.h	/^    AVCOL_PRI_JEDEC_P22   = 22, \/\/\/< JEDEC P22 phosphors$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_NB	libavutil/pixfmt.h	/^    AVCOL_PRI_NB                \/\/\/< Not part of ABI$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED	libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED    = 3,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED0	libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED0   = 0,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE170M	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE170M   = 6,  \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE240M	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE240M   = 7,  \/\/\/< functionally identical to above$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE428	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE428    = 10, \/\/\/< SMPTE ST 428-1 (CIE 1931 XYZ)$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE431	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE431    = 11, \/\/\/< SMPTE ST 431-2 (2011) \/ DCI P3$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE432	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE432    = 12, \/\/\/< SMPTE ST 432-1 (2010) \/ P3 D65 \/ Display P3$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTEST428_1	libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTEST428_1 = AVCOL_PRI_SMPTE428,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_UNSPECIFIED	libavutil/pixfmt.h	/^    AVCOL_PRI_UNSPECIFIED = 2,$/;"	e	enum:AVColorPrimaries
AVCOL_RANGE_JPEG	libavutil/pixfmt.h	/^    AVCOL_RANGE_JPEG        = 2, \/\/\/< the normal     2^n-1   "JPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_MPEG	libavutil/pixfmt.h	/^    AVCOL_RANGE_MPEG        = 1, \/\/\/< the normal 219*2^(n-8) "MPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_NB	libavutil/pixfmt.h	/^    AVCOL_RANGE_NB               \/\/\/< Not part of ABI$/;"	e	enum:AVColorRange
AVCOL_RANGE_UNSPECIFIED	libavutil/pixfmt.h	/^    AVCOL_RANGE_UNSPECIFIED = 0,$/;"	e	enum:AVColorRange
AVCOL_SPC_BT2020_CL	libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_CL   = 10, \/\/\/< ITU-R BT2020 constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT2020_NCL	libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_NCL  = 9,  \/\/\/< ITU-R BT2020 non-constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT470BG	libavutil/pixfmt.h	/^    AVCOL_SPC_BT470BG     = 5,  \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM \/ IEC 61966-2-4 xvYCC601$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT709	libavutil/pixfmt.h	/^    AVCOL_SPC_BT709       = 1,  \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 xvYCC709 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorSpace
AVCOL_SPC_CHROMA_DERIVED_CL	libavutil/pixfmt.h	/^    AVCOL_SPC_CHROMA_DERIVED_CL = 13, \/\/\/< Chromaticity-derived constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_CHROMA_DERIVED_NCL	libavutil/pixfmt.h	/^    AVCOL_SPC_CHROMA_DERIVED_NCL = 12, \/\/\/< Chromaticity-derived non-constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_FCC	libavutil/pixfmt.h	/^    AVCOL_SPC_FCC         = 4,  \/\/\/< FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorSpace
AVCOL_SPC_ICTCP	libavutil/pixfmt.h	/^    AVCOL_SPC_ICTCP       = 14, \/\/\/< ITU-R BT.2100-0, ICtCp$/;"	e	enum:AVColorSpace
AVCOL_SPC_NB	libavutil/pixfmt.h	/^    AVCOL_SPC_NB                \/\/\/< Not part of ABI$/;"	e	enum:AVColorSpace
AVCOL_SPC_RESERVED	libavutil/pixfmt.h	/^    AVCOL_SPC_RESERVED    = 3,$/;"	e	enum:AVColorSpace
AVCOL_SPC_RGB	libavutil/pixfmt.h	/^    AVCOL_SPC_RGB         = 0,  \/\/\/< order of coefficients is actually GBR, also IEC 61966-2-1 (sRGB)$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE170M	libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE170M   = 6,  \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE2085	libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE2085   = 11, \/\/\/< SMPTE 2085, Y'D'zD'x$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE240M	libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE240M   = 7,  \/\/\/< functionally identical to above$/;"	e	enum:AVColorSpace
AVCOL_SPC_UNSPECIFIED	libavutil/pixfmt.h	/^    AVCOL_SPC_UNSPECIFIED = 2,$/;"	e	enum:AVColorSpace
AVCOL_SPC_YCGCO	libavutil/pixfmt.h	/^    AVCOL_SPC_YCGCO       = 8,  \/\/\/< Used by Dirac \/ VC-2 and H.264 FRext, see ITU-T SG16$/;"	e	enum:AVColorSpace
AVCOL_SPC_YCOCG	libavutil/pixfmt.h	/^    AVCOL_SPC_YCOCG       = AVCOL_SPC_YCGCO,$/;"	e	enum:AVColorSpace
AVCOL_TRC_ARIB_STD_B67	libavutil/pixfmt.h	/^    AVCOL_TRC_ARIB_STD_B67 = 18, \/\/\/< ARIB STD-B67, known as "Hybrid log-gamma"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT1361_ECG	libavutil/pixfmt.h	/^    AVCOL_TRC_BT1361_ECG   = 12, \/\/\/< ITU-R BT1361 Extended Colour Gamut$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_10	libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_10    = 14, \/\/\/< ITU-R BT2020 for 10-bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_12	libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_12    = 15, \/\/\/< ITU-R BT2020 for 12-bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT709	libavutil/pixfmt.h	/^    AVCOL_TRC_BT709        = 1,  \/\/\/< also ITU-R BT1361$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA22	libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA22      = 4,  \/\/\/< also ITU-R BT470M \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA28	libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA28      = 5,  \/\/\/< also ITU-R BT470BG$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_1	libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_1 = 13, \/\/\/< IEC 61966-2-1 (sRGB or sYCC)$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_4	libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_4 = 11, \/\/\/< IEC 61966-2-4$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LINEAR	libavutil/pixfmt.h	/^    AVCOL_TRC_LINEAR       = 8,  \/\/\/< "Linear transfer characteristics"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG	libavutil/pixfmt.h	/^    AVCOL_TRC_LOG          = 9,  \/\/\/< "Logarithmic transfer characteristic (100:1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG_SQRT	libavutil/pixfmt.h	/^    AVCOL_TRC_LOG_SQRT     = 10, \/\/\/< "Logarithmic transfer characteristic (100 * Sqrt(10) : 1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_NB	libavutil/pixfmt.h	/^    AVCOL_TRC_NB                 \/\/\/< Not part of ABI$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED	libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED     = 3,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED0	libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED0    = 0,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE170M	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE170M    = 6,  \/\/\/< also ITU-R BT601-6 525 or 625 \/ ITU-R BT1358 525 or 625 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE2084	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE2084    = 16, \/\/\/< SMPTE ST 2084 for 10-, 12-, 14- and 16-bit systems$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE240M	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE240M    = 7,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE428	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE428     = 17, \/\/\/< SMPTE ST 428-1$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTEST2084	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTEST2084  = AVCOL_TRC_SMPTE2084,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTEST428_1	libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTEST428_1 = AVCOL_TRC_SMPTE428,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_UNSPECIFIED	libavutil/pixfmt.h	/^    AVCOL_TRC_UNSPECIFIED  = 2,$/;"	e	enum:AVColorTransferCharacteristic
AVCPBProperties	libavcodec/avcodec.h	/^typedef struct AVCPBProperties {$/;"	s
AVCPBProperties	libavcodec/avcodec.h	/^} AVCPBProperties;$/;"	t	typeref:struct:AVCPBProperties
AVCRC	libavutil/crc.h	/^typedef uint32_t AVCRC;$/;"	t
AVCRCId	libavutil/crc.h	/^}AVCRCId;$/;"	t	typeref:enum:__anon7
AVCUDADeviceContext	libavutil/hwcontext_cuda.h	/^typedef struct AVCUDADeviceContext {$/;"	s
AVCUDADeviceContext	libavutil/hwcontext_cuda.h	/^} AVCUDADeviceContext;$/;"	t	typeref:struct:AVCUDADeviceContext
AVCUDADeviceContextInternal	libavutil/hwcontext_cuda.h	/^typedef struct AVCUDADeviceContextInternal AVCUDADeviceContextInternal;$/;"	t	typeref:struct:AVCUDADeviceContextInternal
AVChapter	libavformat/avformat.h	/^typedef struct AVChapter {$/;"	s
AVChapter	libavformat/avformat.h	/^} AVChapter;$/;"	t	typeref:struct:AVChapter
AVChromaLocation	libavutil/pixfmt.h	/^enum AVChromaLocation {$/;"	g
AVClass	libavutil/log.h	/^typedef struct AVClass {$/;"	s
AVClass	libavutil/log.h	/^} AVClass;$/;"	t	typeref:struct:AVClass
AVClassCategory	libavutil/log.h	/^}AVClassCategory;$/;"	t	typeref:enum:__anon14
AVCodec	libavcodec/avcodec.h	/^typedef struct AVCodec {$/;"	s
AVCodec	libavcodec/avcodec.h	/^} AVCodec;$/;"	t	typeref:struct:AVCodec
AVCodecContext	libavcodec/avcodec.h	/^typedef struct AVCodecContext {$/;"	s
AVCodecContext	libavcodec/avcodec.h	/^} AVCodecContext;$/;"	t	typeref:struct:AVCodecContext
AVCodecDefault	libavcodec/avcodec.h	/^typedef struct AVCodecDefault AVCodecDefault;$/;"	t	typeref:struct:AVCodecDefault
AVCodecDescriptor	libavcodec/avcodec.h	/^typedef struct AVCodecDescriptor {$/;"	s
AVCodecDescriptor	libavcodec/avcodec.h	/^} AVCodecDescriptor;$/;"	t	typeref:struct:AVCodecDescriptor
AVCodecID	libavcodec/avcodec.h	/^enum AVCodecID {$/;"	g
AVCodecParameters	libavcodec/avcodec.h	/^typedef struct AVCodecParameters {$/;"	s
AVCodecParameters	libavcodec/avcodec.h	/^} AVCodecParameters;$/;"	t	typeref:struct:AVCodecParameters
AVCodecParser	libavcodec/avcodec.h	/^typedef struct AVCodecParser {$/;"	s
AVCodecParser	libavcodec/avcodec.h	/^} AVCodecParser;$/;"	t	typeref:struct:AVCodecParser
AVCodecParserContext	libavcodec/avcodec.h	/^typedef struct AVCodecParserContext {$/;"	s
AVCodecParserContext	libavcodec/avcodec.h	/^} AVCodecParserContext;$/;"	t	typeref:struct:AVCodecParserContext
AVColorPrimaries	libavutil/pixfmt.h	/^enum AVColorPrimaries {$/;"	g
AVColorRange	libavutil/pixfmt.h	/^enum AVColorRange {$/;"	g
AVColorSpace	libavutil/pixfmt.h	/^enum AVColorSpace {$/;"	g
AVColorTransferCharacteristic	libavutil/pixfmt.h	/^enum AVColorTransferCharacteristic {$/;"	g
AVComponentDescriptor	libavutil/pixdesc.h	/^typedef struct AVComponentDescriptor {$/;"	s
AVComponentDescriptor	libavutil/pixdesc.h	/^} AVComponentDescriptor;$/;"	t	typeref:struct:AVComponentDescriptor
AVContentLightMetadata	libavutil/mastering_display_metadata.h	/^typedef struct AVContentLightMetadata {$/;"	s
AVContentLightMetadata	libavutil/mastering_display_metadata.h	/^} AVContentLightMetadata;$/;"	t	typeref:struct:AVContentLightMetadata
AVD3D11FrameDescriptor	libavutil/hwcontext_d3d11va.h	/^typedef struct AVD3D11FrameDescriptor {$/;"	s
AVD3D11FrameDescriptor	libavutil/hwcontext_d3d11va.h	/^} AVD3D11FrameDescriptor;$/;"	t	typeref:struct:AVD3D11FrameDescriptor
AVD3D11VAContext	libavcodec/d3d11va.h	/^typedef struct AVD3D11VAContext {$/;"	s
AVD3D11VAContext	libavcodec/d3d11va.h	/^} AVD3D11VAContext;$/;"	t	typeref:struct:AVD3D11VAContext
AVD3D11VADeviceContext	libavutil/hwcontext_d3d11va.h	/^typedef struct AVD3D11VADeviceContext {$/;"	s
AVD3D11VADeviceContext	libavutil/hwcontext_d3d11va.h	/^} AVD3D11VADeviceContext;$/;"	t	typeref:struct:AVD3D11VADeviceContext
AVD3D11VAFramesContext	libavutil/hwcontext_d3d11va.h	/^typedef struct AVD3D11VAFramesContext {$/;"	s
AVD3D11VAFramesContext	libavutil/hwcontext_d3d11va.h	/^} AVD3D11VAFramesContext;$/;"	t	typeref:struct:AVD3D11VAFramesContext
AVDCT	libavcodec/avdct.h	/^typedef struct AVDCT {$/;"	s
AVDCT	libavcodec/avdct.h	/^} AVDCT;$/;"	t	typeref:struct:AVDCT
AVDES	libavutil/des.h	/^typedef struct AVDES {$/;"	s
AVDES	libavutil/des.h	/^} AVDES;$/;"	t	typeref:struct:AVDES
AVDEVICE_AVDEVICE_H	libavdevice/avdevice.h	20;"	d
AVDEVICE_VERSION_H	libavdevice/version.h	20;"	d
AVDISCARD_ALL	libavcodec/avcodec.h	/^    AVDISCARD_ALL     = 48, \/\/\/< discard all$/;"	e	enum:AVDiscard
AVDISCARD_BIDIR	libavcodec/avcodec.h	/^    AVDISCARD_BIDIR   = 16, \/\/\/< discard all bidirectional frames$/;"	e	enum:AVDiscard
AVDISCARD_DEFAULT	libavcodec/avcodec.h	/^    AVDISCARD_DEFAULT =  0, \/\/\/< discard useless packets like 0 size packets in avi$/;"	e	enum:AVDiscard
AVDISCARD_NONE	libavcodec/avcodec.h	/^    AVDISCARD_NONE    =-16, \/\/\/< discard nothing$/;"	e	enum:AVDiscard
AVDISCARD_NONINTRA	libavcodec/avcodec.h	/^    AVDISCARD_NONINTRA= 24, \/\/\/< discard all non intra frames$/;"	e	enum:AVDiscard
AVDISCARD_NONKEY	libavcodec/avcodec.h	/^    AVDISCARD_NONKEY  = 32, \/\/\/< discard all frames except keyframes$/;"	e	enum:AVDiscard
AVDISCARD_NONREF	libavcodec/avcodec.h	/^    AVDISCARD_NONREF  =  8, \/\/\/< discard all non reference$/;"	e	enum:AVDiscard
AVDRMDeviceContext	libavutil/hwcontext_drm.h	/^typedef struct AVDRMDeviceContext {$/;"	s
AVDRMDeviceContext	libavutil/hwcontext_drm.h	/^} AVDRMDeviceContext;$/;"	t	typeref:struct:AVDRMDeviceContext
AVDRMFrameDescriptor	libavutil/hwcontext_drm.h	/^typedef struct AVDRMFrameDescriptor {$/;"	s
AVDRMFrameDescriptor	libavutil/hwcontext_drm.h	/^} AVDRMFrameDescriptor;$/;"	t	typeref:struct:AVDRMFrameDescriptor
AVDRMLayerDescriptor	libavutil/hwcontext_drm.h	/^typedef struct AVDRMLayerDescriptor {$/;"	s
AVDRMLayerDescriptor	libavutil/hwcontext_drm.h	/^} AVDRMLayerDescriptor;$/;"	t	typeref:struct:AVDRMLayerDescriptor
AVDRMObjectDescriptor	libavutil/hwcontext_drm.h	/^typedef struct AVDRMObjectDescriptor {$/;"	s
AVDRMObjectDescriptor	libavutil/hwcontext_drm.h	/^} AVDRMObjectDescriptor;$/;"	t	typeref:struct:AVDRMObjectDescriptor
AVDRMPlaneDescriptor	libavutil/hwcontext_drm.h	/^typedef struct AVDRMPlaneDescriptor {$/;"	s
AVDRMPlaneDescriptor	libavutil/hwcontext_drm.h	/^} AVDRMPlaneDescriptor;$/;"	t	typeref:struct:AVDRMPlaneDescriptor
AVDVProfile	libavcodec/dv_profile.h	/^typedef struct AVDVProfile {$/;"	s
AVDVProfile	libavcodec/dv_profile.h	/^} AVDVProfile;$/;"	t	typeref:struct:AVDVProfile
AVDXVA2DeviceContext	libavutil/hwcontext_dxva2.h	/^typedef struct AVDXVA2DeviceContext {$/;"	s
AVDXVA2DeviceContext	libavutil/hwcontext_dxva2.h	/^} AVDXVA2DeviceContext;$/;"	t	typeref:struct:AVDXVA2DeviceContext
AVDXVA2FramesContext	libavutil/hwcontext_dxva2.h	/^typedef struct AVDXVA2FramesContext {$/;"	s
AVDXVA2FramesContext	libavutil/hwcontext_dxva2.h	/^} AVDXVA2FramesContext;$/;"	t	typeref:struct:AVDXVA2FramesContext
AVDevToAppMessageType	libavdevice/avdevice.h	/^enum AVDevToAppMessageType {$/;"	g
AVDeviceCapabilitiesQuery	libavdevice/avdevice.h	/^typedef struct AVDeviceCapabilitiesQuery {$/;"	s
AVDeviceCapabilitiesQuery	libavdevice/avdevice.h	/^} AVDeviceCapabilitiesQuery;$/;"	t	typeref:struct:AVDeviceCapabilitiesQuery
AVDeviceInfo	libavdevice/avdevice.h	/^typedef struct AVDeviceInfo {$/;"	s
AVDeviceInfo	libavdevice/avdevice.h	/^} AVDeviceInfo;$/;"	t	typeref:struct:AVDeviceInfo
AVDeviceInfoList	libavdevice/avdevice.h	/^typedef struct AVDeviceInfoList {$/;"	s
AVDeviceInfoList	libavdevice/avdevice.h	/^} AVDeviceInfoList;$/;"	t	typeref:struct:AVDeviceInfoList
AVDeviceRect	libavdevice/avdevice.h	/^typedef struct AVDeviceRect {$/;"	s
AVDeviceRect	libavdevice/avdevice.h	/^} AVDeviceRect;$/;"	t	typeref:struct:AVDeviceRect
AVDictionary	libavutil/dict.h	/^typedef struct AVDictionary AVDictionary;$/;"	t	typeref:struct:AVDictionary
AVDictionaryEntry	libavutil/dict.h	/^typedef struct AVDictionaryEntry {$/;"	s
AVDictionaryEntry	libavutil/dict.h	/^} AVDictionaryEntry;$/;"	t	typeref:struct:AVDictionaryEntry
AVDiracSeqHeader	libavcodec/dirac.h	/^typedef struct AVDiracSeqHeader {$/;"	s
AVDiracSeqHeader	libavcodec/dirac.h	/^} AVDiracSeqHeader;$/;"	t	typeref:struct:AVDiracSeqHeader
AVDiscard	libavcodec/avcodec.h	/^enum AVDiscard{$/;"	g
AVDownmixInfo	libavutil/downmix_info.h	/^typedef struct AVDownmixInfo {$/;"	s
AVDownmixInfo	libavutil/downmix_info.h	/^} AVDownmixInfo;$/;"	t	typeref:struct:AVDownmixInfo
AVDownmixType	libavutil/downmix_info.h	/^enum AVDownmixType {$/;"	g
AVDurationEstimationMethod	libavformat/avformat.h	/^enum AVDurationEstimationMethod {$/;"	g
AVERROR	libavutil/error.h	39;"	d
AVERROR	libavutil/error.h	43;"	d
AVERROR_BSF_NOT_FOUND	libavutil/error.h	49;"	d
AVERROR_BUFFER_TOO_SMALL	libavutil/error.h	51;"	d
AVERROR_BUG	libavutil/error.h	50;"	d
AVERROR_BUG2	libavutil/error.h	70;"	d
AVERROR_DECODER_NOT_FOUND	libavutil/error.h	52;"	d
AVERROR_DEMUXER_NOT_FOUND	libavutil/error.h	53;"	d
AVERROR_ENCODER_NOT_FOUND	libavutil/error.h	54;"	d
AVERROR_EOF	libavutil/error.h	55;"	d
AVERROR_EXIT	libavutil/error.h	56;"	d
AVERROR_EXPERIMENTAL	libavutil/error.h	72;"	d
AVERROR_EXTERNAL	libavutil/error.h	57;"	d
AVERROR_FILTER_NOT_FOUND	libavutil/error.h	58;"	d
AVERROR_HTTP_BAD_REQUEST	libavutil/error.h	76;"	d
AVERROR_HTTP_FORBIDDEN	libavutil/error.h	78;"	d
AVERROR_HTTP_NOT_FOUND	libavutil/error.h	79;"	d
AVERROR_HTTP_OTHER_4XX	libavutil/error.h	80;"	d
AVERROR_HTTP_SERVER_ERROR	libavutil/error.h	81;"	d
AVERROR_HTTP_UNAUTHORIZED	libavutil/error.h	77;"	d
AVERROR_INPUT_CHANGED	libavutil/error.h	73;"	d
AVERROR_INVALIDDATA	libavutil/error.h	59;"	d
AVERROR_MUXER_NOT_FOUND	libavutil/error.h	60;"	d
AVERROR_OPTION_NOT_FOUND	libavutil/error.h	61;"	d
AVERROR_OUTPUT_CHANGED	libavutil/error.h	74;"	d
AVERROR_PATCHWELCOME	libavutil/error.h	62;"	d
AVERROR_PROTOCOL_NOT_FOUND	libavutil/error.h	63;"	d
AVERROR_STREAM_NOT_FOUND	libavutil/error.h	65;"	d
AVERROR_UNKNOWN	libavutil/error.h	71;"	d
AVEscapeMode	libavutil/avstring.h	/^enum AVEscapeMode {$/;"	g
AVExpr	libavutil/eval.h	/^typedef struct AVExpr AVExpr;$/;"	t	typeref:struct:AVExpr
AVFILTER_AUTO_CONVERT_ALL	libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_ALL  =  0, \/**< all automatic conversions enabled *\/$/;"	e	enum:__anon3
AVFILTER_AUTO_CONVERT_NONE	libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_NONE = -1, \/**< all automatic conversions disabled *\/$/;"	e	enum:__anon3
AVFILTER_AVFILTERGRAPH_H	libavfilter/avfiltergraph.h	23;"	d
AVFILTER_AVFILTER_H	libavfilter/avfilter.h	23;"	d
AVFILTER_BUFFERSINK_H	libavfilter/buffersink.h	20;"	d
AVFILTER_BUFFERSRC_H	libavfilter/buffersrc.h	20;"	d
AVFILTER_CMD_FLAG_FAST	libavfilter/avfilter.h	672;"	d
AVFILTER_CMD_FLAG_ONE	libavfilter/avfilter.h	671;"	d
AVFILTER_FLAG_DYNAMIC_INPUTS	libavfilter/avfilter.h	105;"	d
AVFILTER_FLAG_DYNAMIC_OUTPUTS	libavfilter/avfilter.h	111;"	d
AVFILTER_FLAG_SLICE_THREADS	libavfilter/avfilter.h	116;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE	libavfilter/avfilter.h	138;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC	libavfilter/avfilter.h	125;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL	libavfilter/avfilter.h	133;"	d
AVFILTER_THREAD_SLICE	libavfilter/avfilter.h	333;"	d
AVFILTER_VERSION_H	libavfilter/version.h	22;"	d
AVFMTCTX_NOHEADER	libavformat/avformat.h	1293;"	d
AVFMT_ALLOW_FLUSH	libavformat/avformat.h	495;"	d
AVFMT_AVOID_NEG_TS_AUTO	libavformat/avformat.h	1649;"	d
AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE	libavformat/avformat.h	1650;"	d
AVFMT_AVOID_NEG_TS_MAKE_ZERO	libavformat/avformat.h	1651;"	d
AVFMT_DURATION_FROM_BITRATE	libavformat/avformat.h	/^    AVFMT_DURATION_FROM_BITRATE \/\/\/< Duration estimated from bitrate (less accurate)$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_PTS	libavformat/avformat.h	/^    AVFMT_DURATION_FROM_PTS,    \/\/\/< Duration accurately estimated from PTSes$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_STREAM	libavformat/avformat.h	/^    AVFMT_DURATION_FROM_STREAM, \/\/\/< Duration estimated from a stream with a known duration$/;"	e	enum:AVDurationEstimationMethod
AVFMT_EVENT_FLAG_METADATA_UPDATED	libavformat/avformat.h	1633;"	d
AVFMT_FLAG_AUTO_BSF	libavformat/avformat.h	1476;"	d
AVFMT_FLAG_BITEXACT	libavformat/avformat.h	1467;"	d
AVFMT_FLAG_CUSTOM_IO	libavformat/avformat.h	1458;"	d
AVFMT_FLAG_DISCARD_CORRUPT	libavformat/avformat.h	1459;"	d
AVFMT_FLAG_FAST_SEEK	libavformat/avformat.h	1474;"	d
AVFMT_FLAG_FLUSH_PACKETS	libavformat/avformat.h	1460;"	d
AVFMT_FLAG_GENPTS	libavformat/avformat.h	1451;"	d
AVFMT_FLAG_IGNDTS	libavformat/avformat.h	1454;"	d
AVFMT_FLAG_IGNIDX	libavformat/avformat.h	1452;"	d
AVFMT_FLAG_KEEP_SIDE_DATA	libavformat/avformat.h	1472;"	d
AVFMT_FLAG_MP4A_LATM	libavformat/avformat.h	1468;"	d
AVFMT_FLAG_NOBUFFER	libavformat/avformat.h	1457;"	d
AVFMT_FLAG_NOFILLIN	libavformat/avformat.h	1455;"	d
AVFMT_FLAG_NONBLOCK	libavformat/avformat.h	1453;"	d
AVFMT_FLAG_NOPARSE	libavformat/avformat.h	1456;"	d
AVFMT_FLAG_PRIV_OPT	libavformat/avformat.h	1470;"	d
AVFMT_FLAG_SHORTEST	libavformat/avformat.h	1475;"	d
AVFMT_FLAG_SORT_DTS	libavformat/avformat.h	1469;"	d
AVFMT_GENERIC_INDEX	libavformat/avformat.h	487;"	d
AVFMT_GLOBALHEADER	libavformat/avformat.h	485;"	d
AVFMT_NEEDNUMBER	libavformat/avformat.h	479;"	d
AVFMT_NOBINSEARCH	libavformat/avformat.h	492;"	d
AVFMT_NODIMENSIONS	libavformat/avformat.h	490;"	d
AVFMT_NOFILE	libavformat/avformat.h	478;"	d
AVFMT_NOGENSEARCH	libavformat/avformat.h	493;"	d
AVFMT_NOSTREAMS	libavformat/avformat.h	491;"	d
AVFMT_NOTIMESTAMPS	libavformat/avformat.h	486;"	d
AVFMT_NO_BYTE_SEEK	libavformat/avformat.h	494;"	d
AVFMT_RAWPICTURE	libavformat/avformat.h	482;"	d
AVFMT_SEEK_TO_PTS	libavformat/avformat.h	508;"	d
AVFMT_SHOW_IDS	libavformat/avformat.h	480;"	d
AVFMT_TBCF_AUTO	libavformat/avformat.h	/^    AVFMT_TBCF_AUTO = -1,$/;"	e	enum:AVTimebaseSource
AVFMT_TBCF_DECODER	libavformat/avformat.h	/^    AVFMT_TBCF_DECODER,$/;"	e	enum:AVTimebaseSource
AVFMT_TBCF_DEMUXER	libavformat/avformat.h	/^    AVFMT_TBCF_DEMUXER,$/;"	e	enum:AVTimebaseSource
AVFMT_TBCF_R_FRAMERATE	libavformat/avformat.h	/^    AVFMT_TBCF_R_FRAMERATE,$/;"	e	enum:AVTimebaseSource
AVFMT_TS_DISCONT	libavformat/avformat.h	488;"	d
AVFMT_TS_NEGATIVE	libavformat/avformat.h	499;"	d
AVFMT_TS_NONSTRICT	libavformat/avformat.h	496;"	d
AVFMT_VARIABLE_FPS	libavformat/avformat.h	489;"	d
AVFORMAT_AVFORMAT_H	libavformat/avformat.h	22;"	d
AVFORMAT_AVIO_H	libavformat/avio.h	21;"	d
AVFORMAT_VERSION_H	libavformat/version.h	22;"	d
AVFieldOrder	libavcodec/avcodec.h	/^enum AVFieldOrder {$/;"	g
AVFifoBuffer	libavutil/fifo.h	/^typedef struct AVFifoBuffer {$/;"	s
AVFifoBuffer	libavutil/fifo.h	/^} AVFifoBuffer;$/;"	t	typeref:struct:AVFifoBuffer
AVFilter	libavfilter/avfilter.h	/^typedef struct AVFilter {$/;"	s
AVFilter	libavfilter/avfilter.h	/^} AVFilter;$/;"	t	typeref:struct:AVFilter
AVFilterContext	libavfilter/avfilter.h	/^struct AVFilterContext {$/;"	s
AVFilterContext	libavfilter/avfilter.h	/^typedef struct AVFilterContext AVFilterContext;$/;"	t	typeref:struct:AVFilterContext
AVFilterFormats	libavfilter/avfilter.h	/^typedef struct AVFilterFormats AVFilterFormats;$/;"	t	typeref:struct:AVFilterFormats
AVFilterGraph	libavfilter/avfilter.h	/^typedef struct AVFilterGraph {$/;"	s
AVFilterGraph	libavfilter/avfilter.h	/^} AVFilterGraph;$/;"	t	typeref:struct:AVFilterGraph
AVFilterGraphInternal	libavfilter/avfilter.h	/^typedef struct AVFilterGraphInternal AVFilterGraphInternal;$/;"	t	typeref:struct:AVFilterGraphInternal
AVFilterInOut	libavfilter/avfilter.h	/^typedef struct AVFilterInOut {$/;"	s
AVFilterInOut	libavfilter/avfilter.h	/^} AVFilterInOut;$/;"	t	typeref:struct:AVFilterInOut
AVFilterInternal	libavfilter/avfilter.h	/^typedef struct AVFilterInternal AVFilterInternal;$/;"	t	typeref:struct:AVFilterInternal
AVFilterLink	libavfilter/avfilter.h	/^struct AVFilterLink {$/;"	s
AVFilterLink	libavfilter/avfilter.h	/^typedef struct AVFilterLink    AVFilterLink;$/;"	t	typeref:struct:AVFilterLink
AVFilterPad	libavfilter/avfilter.h	/^typedef struct AVFilterPad     AVFilterPad;$/;"	t	typeref:struct:AVFilterPad
AVFormatContext	libavformat/avformat.h	/^typedef struct AVFormatContext {$/;"	s
AVFormatContext	libavformat/avformat.h	/^} AVFormatContext;$/;"	t	typeref:struct:AVFormatContext
AVFormatInternal	libavformat/avformat.h	/^typedef struct AVFormatInternal AVFormatInternal;$/;"	t	typeref:struct:AVFormatInternal
AVFrac	libavformat/avformat.h	/^typedef struct AVFrac {$/;"	s
AVFrac	libavformat/avformat.h	/^} AVFrac;$/;"	t	typeref:struct:AVFrac
AVFrame	libavutil/frame.h	/^typedef struct AVFrame {$/;"	s
AVFrame	libavutil/frame.h	/^} AVFrame;$/;"	t	typeref:struct:AVFrame
AVFrameSideData	libavutil/frame.h	/^typedef struct AVFrameSideData {$/;"	s
AVFrameSideData	libavutil/frame.h	/^} AVFrameSideData;$/;"	t	typeref:struct:AVFrameSideData
AVFrameSideDataType	libavutil/frame.h	/^enum AVFrameSideDataType {$/;"	g
AVHMAC	libavutil/hmac.h	/^typedef struct AVHMAC AVHMAC;$/;"	t	typeref:struct:AVHMAC
AVHMACType	libavutil/hmac.h	/^enum AVHMACType {$/;"	g
AVHWAccel	libavcodec/avcodec.h	/^typedef struct AVHWAccel {$/;"	s
AVHWAccel	libavcodec/avcodec.h	/^} AVHWAccel;$/;"	t	typeref:struct:AVHWAccel
AVHWDeviceContext	libavutil/hwcontext.h	/^typedef struct AVHWDeviceContext {$/;"	s
AVHWDeviceContext	libavutil/hwcontext.h	/^} AVHWDeviceContext;$/;"	t	typeref:struct:AVHWDeviceContext
AVHWDeviceInternal	libavutil/hwcontext.h	/^typedef struct AVHWDeviceInternal AVHWDeviceInternal;$/;"	t	typeref:struct:AVHWDeviceInternal
AVHWDeviceType	libavutil/hwcontext.h	/^enum AVHWDeviceType {$/;"	g
AVHWFrameTransferDirection	libavutil/hwcontext.h	/^enum AVHWFrameTransferDirection {$/;"	g
AVHWFramesConstraints	libavutil/hwcontext.h	/^typedef struct AVHWFramesConstraints {$/;"	s
AVHWFramesConstraints	libavutil/hwcontext.h	/^} AVHWFramesConstraints;$/;"	t	typeref:struct:AVHWFramesConstraints
AVHWFramesContext	libavutil/hwcontext.h	/^typedef struct AVHWFramesContext {$/;"	s
AVHWFramesContext	libavutil/hwcontext.h	/^} AVHWFramesContext;$/;"	t	typeref:struct:AVHWFramesContext
AVHWFramesInternal	libavutil/hwcontext.h	/^typedef struct AVHWFramesInternal AVHWFramesInternal;$/;"	t	typeref:struct:AVHWFramesInternal
AVINDEX_DISCARD_FRAME	libavformat/avformat.h	819;"	d
AVINDEX_KEYFRAME	libavformat/avformat.h	818;"	d
AVIOContext	libavformat/avio.h	/^typedef struct AVIOContext {$/;"	s
AVIOContext	libavformat/avio.h	/^} AVIOContext;$/;"	t	typeref:struct:AVIOContext
AVIODataMarkerType	libavformat/avio.h	/^enum AVIODataMarkerType {$/;"	g
AVIODirContext	libavformat/avio.h	/^typedef struct AVIODirContext {$/;"	s
AVIODirContext	libavformat/avio.h	/^} AVIODirContext;$/;"	t	typeref:struct:AVIODirContext
AVIODirEntry	libavformat/avio.h	/^typedef struct AVIODirEntry {$/;"	s
AVIODirEntry	libavformat/avio.h	/^} AVIODirEntry;$/;"	t	typeref:struct:AVIODirEntry
AVIODirEntryType	libavformat/avio.h	/^enum AVIODirEntryType {$/;"	g
AVIOInterruptCB	libavformat/avio.h	/^typedef struct AVIOInterruptCB {$/;"	s
AVIOInterruptCB	libavformat/avio.h	/^} AVIOInterruptCB;$/;"	t	typeref:struct:AVIOInterruptCB
AVIO_DATA_MARKER_BOUNDARY_POINT	libavformat/avio.h	/^    AVIO_DATA_MARKER_BOUNDARY_POINT,$/;"	e	enum:AVIODataMarkerType
AVIO_DATA_MARKER_FLUSH_POINT	libavformat/avio.h	/^    AVIO_DATA_MARKER_FLUSH_POINT,$/;"	e	enum:AVIODataMarkerType
AVIO_DATA_MARKER_HEADER	libavformat/avio.h	/^    AVIO_DATA_MARKER_HEADER,$/;"	e	enum:AVIODataMarkerType
AVIO_DATA_MARKER_SYNC_POINT	libavformat/avio.h	/^    AVIO_DATA_MARKER_SYNC_POINT,$/;"	e	enum:AVIODataMarkerType
AVIO_DATA_MARKER_TRAILER	libavformat/avio.h	/^    AVIO_DATA_MARKER_TRAILER,$/;"	e	enum:AVIODataMarkerType
AVIO_DATA_MARKER_UNKNOWN	libavformat/avio.h	/^    AVIO_DATA_MARKER_UNKNOWN,$/;"	e	enum:AVIODataMarkerType
AVIO_ENTRY_BLOCK_DEVICE	libavformat/avio.h	/^    AVIO_ENTRY_BLOCK_DEVICE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_CHARACTER_DEVICE	libavformat/avio.h	/^    AVIO_ENTRY_CHARACTER_DEVICE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_DIRECTORY	libavformat/avio.h	/^    AVIO_ENTRY_DIRECTORY,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_FILE	libavformat/avio.h	/^    AVIO_ENTRY_FILE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_NAMED_PIPE	libavformat/avio.h	/^    AVIO_ENTRY_NAMED_PIPE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SERVER	libavformat/avio.h	/^    AVIO_ENTRY_SERVER,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SHARE	libavformat/avio.h	/^    AVIO_ENTRY_SHARE,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SOCKET	libavformat/avio.h	/^    AVIO_ENTRY_SOCKET,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_SYMBOLIC_LINK	libavformat/avio.h	/^    AVIO_ENTRY_SYMBOLIC_LINK,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_UNKNOWN	libavformat/avio.h	/^    AVIO_ENTRY_UNKNOWN,$/;"	e	enum:AVIODirEntryType
AVIO_ENTRY_WORKGROUP	libavformat/avio.h	/^    AVIO_ENTRY_WORKGROUP,$/;"	e	enum:AVIODirEntryType
AVIO_FLAG_DIRECT	libavformat/avio.h	687;"	d
AVIO_FLAG_NONBLOCK	libavformat/avio.h	679;"	d
AVIO_FLAG_READ	libavformat/avio.h	660;"	d
AVIO_FLAG_READ_WRITE	libavformat/avio.h	662;"	d
AVIO_FLAG_WRITE	libavformat/avio.h	661;"	d
AVIO_SEEKABLE_NORMAL	libavformat/avio.h	40;"	d
AVIO_SEEKABLE_TIME	libavformat/avio.h	45;"	d
AVIndexEntry	libavformat/avformat.h	/^typedef struct AVIndexEntry {$/;"	s
AVIndexEntry	libavformat/avformat.h	/^} AVIndexEntry;$/;"	t	typeref:struct:AVIndexEntry
AVInputFormat	libavformat/avformat.h	/^typedef struct AVInputFormat {$/;"	s
AVInputFormat	libavformat/avformat.h	/^} AVInputFormat;$/;"	t	typeref:struct:AVInputFormat
AVLFG	libavutil/lfg.h	/^typedef struct AVLFG {$/;"	s
AVLFG	libavutil/lfg.h	/^} AVLFG;$/;"	t	typeref:struct:AVLFG
AVLINK_INIT	libavfilter/avfilter.h	/^        AVLINK_INIT             \/\/\/< complete$/;"	e	enum:AVFilterLink::__anon2
AVLINK_STARTINIT	libavfilter/avfilter.h	/^        AVLINK_STARTINIT,       \/\/\/< started, but incomplete$/;"	e	enum:AVFilterLink::__anon2
AVLINK_UNINIT	libavfilter/avfilter.h	/^        AVLINK_UNINIT = 0,      \/\/\/< not started$/;"	e	enum:AVFilterLink::__anon2
AVLockOp	libavcodec/avcodec.h	/^enum AVLockOp {$/;"	g
AVMEDIA_TYPE_ATTACHMENT	libavutil/avutil.h	/^    AVMEDIA_TYPE_ATTACHMENT,    \/\/\/< Opaque data information usually sparse$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_AUDIO	libavutil/avutil.h	/^    AVMEDIA_TYPE_AUDIO,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_DATA	libavutil/avutil.h	/^    AVMEDIA_TYPE_DATA,          \/\/\/< Opaque data information usually continuous$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_NB	libavutil/avutil.h	/^    AVMEDIA_TYPE_NB$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_SUBTITLE	libavutil/avutil.h	/^    AVMEDIA_TYPE_SUBTITLE,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_UNKNOWN	libavutil/avutil.h	/^    AVMEDIA_TYPE_UNKNOWN = -1,  \/\/\/< Usually treated as AVMEDIA_TYPE_DATA$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_VIDEO	libavutil/avutil.h	/^    AVMEDIA_TYPE_VIDEO,$/;"	e	enum:AVMediaType
AVMasteringDisplayMetadata	libavutil/mastering_display_metadata.h	/^typedef struct AVMasteringDisplayMetadata {$/;"	s
AVMasteringDisplayMetadata	libavutil/mastering_display_metadata.h	/^} AVMasteringDisplayMetadata;$/;"	t	typeref:struct:AVMasteringDisplayMetadata
AVMatrixEncoding	libavutil/channel_layout.h	/^enum AVMatrixEncoding {$/;"	g
AVMediaCodecBuffer	libavcodec/mediacodec.h	/^typedef struct MediaCodecBuffer AVMediaCodecBuffer;$/;"	t	typeref:struct:MediaCodecBuffer
AVMediaCodecContext	libavcodec/mediacodec.h	/^typedef struct AVMediaCodecContext {$/;"	s
AVMediaCodecContext	libavcodec/mediacodec.h	/^} AVMediaCodecContext;$/;"	t	typeref:struct:AVMediaCodecContext
AVMediaType	libavutil/avutil.h	/^enum AVMediaType {$/;"	g
AVMixCoeffType	libavresample/avresample.h	/^enum AVMixCoeffType {$/;"	g
AVMotionVector	libavutil/motion_vector.h	/^typedef struct AVMotionVector {$/;"	s
AVMotionVector	libavutil/motion_vector.h	/^} AVMotionVector;$/;"	t	typeref:struct:AVMotionVector
AVOpenCallback	libavformat/avformat.h	/^typedef int (*AVOpenCallback)(struct AVFormatContext *s, AVIOContext **pb, const char *url, int flags,$/;"	t
AVOption	libavutil/opt.h	/^typedef struct AVOption {$/;"	s
AVOption	libavutil/opt.h	/^} AVOption;$/;"	t	typeref:struct:AVOption
AVOptionRange	libavutil/opt.h	/^typedef struct AVOptionRange {$/;"	s
AVOptionRange	libavutil/opt.h	/^} AVOptionRange;$/;"	t	typeref:struct:AVOptionRange
AVOptionRanges	libavutil/opt.h	/^typedef struct AVOptionRanges {$/;"	s
AVOptionRanges	libavutil/opt.h	/^} AVOptionRanges;$/;"	t	typeref:struct:AVOptionRanges
AVOptionType	libavutil/opt.h	/^enum AVOptionType{$/;"	g
AVOutputFormat	libavformat/avformat.h	/^typedef struct AVOutputFormat {$/;"	s
AVOutputFormat	libavformat/avformat.h	/^} AVOutputFormat;$/;"	t	typeref:struct:AVOutputFormat
AVPALETTE_COUNT	libavutil/pixfmt.h	33;"	d
AVPALETTE_SIZE	libavutil/pixfmt.h	32;"	d
AVPROBE_PADDING_SIZE	libavformat/avformat.h	475;"	d
AVPROBE_SCORE_EXTENSION	libavformat/avformat.h	471;"	d
AVPROBE_SCORE_MAX	libavformat/avformat.h	473;"	d
AVPROBE_SCORE_MIME	libavformat/avformat.h	472;"	d
AVPROBE_SCORE_RETRY	libavformat/avformat.h	468;"	d
AVPROBE_SCORE_STREAM_RETRY	libavformat/avformat.h	469;"	d
AVPacket	libavcodec/avcodec.h	/^typedef struct AVPacket {$/;"	s
AVPacket	libavcodec/avcodec.h	/^} AVPacket;$/;"	t	typeref:struct:AVPacket
AVPacketList	libavformat/avformat.h	/^typedef struct AVPacketList {$/;"	s
AVPacketList	libavformat/avformat.h	/^} AVPacketList;$/;"	t	typeref:struct:AVPacketList
AVPacketSideData	libavcodec/avcodec.h	/^typedef struct AVPacketSideData {$/;"	s
AVPacketSideData	libavcodec/avcodec.h	/^} AVPacketSideData;$/;"	t	typeref:struct:AVPacketSideData
AVPacketSideDataType	libavcodec/avcodec.h	/^enum AVPacketSideDataType {$/;"	g
AVPanScan	libavcodec/avcodec.h	/^typedef struct AVPanScan{$/;"	s
AVPanScan	libavcodec/avcodec.h	/^}AVPanScan;$/;"	t	typeref:struct:AVPanScan
AVPicture	libavcodec/avcodec.h	/^typedef struct AVPicture {$/;"	s
AVPicture	libavcodec/avcodec.h	/^} AVPicture;$/;"	t	typeref:struct:AVPicture
AVPictureStructure	libavcodec/avcodec.h	/^enum AVPictureStructure {$/;"	g
AVPictureType	libavutil/avutil.h	/^enum AVPictureType {$/;"	g
AVPixFmtDescriptor	libavutil/pixdesc.h	/^typedef struct AVPixFmtDescriptor {$/;"	s
AVPixFmtDescriptor	libavutil/pixdesc.h	/^} AVPixFmtDescriptor;$/;"	t	typeref:struct:AVPixFmtDescriptor
AVPixelFormat	libavutil/pixfmt.h	/^enum AVPixelFormat {$/;"	g
AVProbeData	libavformat/avformat.h	/^typedef struct AVProbeData {$/;"	s
AVProbeData	libavformat/avformat.h	/^} AVProbeData;$/;"	t	typeref:struct:AVProbeData
AVProfile	libavcodec/avcodec.h	/^typedef struct AVProfile {$/;"	s
AVProfile	libavcodec/avcodec.h	/^} AVProfile;$/;"	t	typeref:struct:AVProfile
AVProgram	libavformat/avformat.h	/^typedef struct AVProgram {$/;"	s
AVProgram	libavformat/avformat.h	/^} AVProgram;$/;"	t	typeref:struct:AVProgram
AVQSVContext	libavcodec/qsv.h	/^typedef struct AVQSVContext {$/;"	s
AVQSVContext	libavcodec/qsv.h	/^} AVQSVContext;$/;"	t	typeref:struct:AVQSVContext
AVQSVDeviceContext	libavutil/hwcontext_qsv.h	/^typedef struct AVQSVDeviceContext {$/;"	s
AVQSVDeviceContext	libavutil/hwcontext_qsv.h	/^} AVQSVDeviceContext;$/;"	t	typeref:struct:AVQSVDeviceContext
AVQSVFramesContext	libavutil/hwcontext_qsv.h	/^typedef struct AVQSVFramesContext {$/;"	s
AVQSVFramesContext	libavutil/hwcontext_qsv.h	/^} AVQSVFramesContext;$/;"	t	typeref:struct:AVQSVFramesContext
AVRC4	libavutil/rc4.h	/^typedef struct AVRC4 {$/;"	s
AVRC4	libavutil/rc4.h	/^} AVRC4;$/;"	t	typeref:struct:AVRC4
AVRESAMPLE_AVRESAMPLE_H	libavresample/avresample.h	22;"	d
AVRESAMPLE_MAX_CHANNELS	libavresample/avresample.h	104;"	d
AVRESAMPLE_VERSION_H	libavresample/version.h	20;"	d
AVRational	libavutil/rational.h	/^typedef struct AVRational{$/;"	s
AVRational	libavutil/rational.h	/^} AVRational;$/;"	t	typeref:struct:AVRational
AVReplayGain	libavutil/replaygain.h	/^typedef struct AVReplayGain {$/;"	s
AVReplayGain	libavutil/replaygain.h	/^} AVReplayGain;$/;"	t	typeref:struct:AVReplayGain
AVResampleDitherMethod	libavresample/avresample.h	/^enum AVResampleDitherMethod {$/;"	g
AVResampleFilterType	libavresample/avresample.h	/^enum AVResampleFilterType {$/;"	g
AVRounding	libavutil/mathematics.h	/^enum AVRounding {$/;"	g
AVSEEK_FLAG_ANY	libavformat/avformat.h	2415;"	d
AVSEEK_FLAG_BACKWARD	libavformat/avformat.h	2413;"	d
AVSEEK_FLAG_BYTE	libavformat/avformat.h	2414;"	d
AVSEEK_FLAG_FRAME	libavformat/avformat.h	2416;"	d
AVSEEK_FORCE	libavformat/avio.h	538;"	d
AVSEEK_SIZE	libavformat/avio.h	530;"	d
AVSTREAM_EVENT_FLAG_METADATA_UPDATED	libavformat/avformat.h	1002;"	d
AVSTREAM_INIT_IN_INIT_OUTPUT	libavformat/avformat.h	2424;"	d
AVSTREAM_INIT_IN_WRITE_HEADER	libavformat/avformat.h	2423;"	d
AVSTREAM_PARSE_FULL	libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL,       \/**< full parsing and repack *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_ONCE	libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_ONCE,  \/**< full parsing and repack of the first frame only, only implemented for H.264 currently *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_RAW	libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_RAW=MKTAG(0,'R','A','W'),       \/**< full parsing and repack with timestamp and position generation by parser for raw$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_HEADERS	libavformat/avformat.h	/^    AVSTREAM_PARSE_HEADERS,    \/**< Only parse headers, do not repack. *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_NONE	libavformat/avformat.h	/^    AVSTREAM_PARSE_NONE,$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_TIMESTAMPS	libavformat/avformat.h	/^    AVSTREAM_PARSE_TIMESTAMPS, \/**< full parsing and interpolation of timestamps for frames not starting on a packet boundary *\/$/;"	e	enum:AVStreamParseType
AVSampleFormat	libavutil/samplefmt.h	/^enum AVSampleFormat {$/;"	g
AVSideDataParamChangeFlags	libavcodec/avcodec.h	/^enum AVSideDataParamChangeFlags {$/;"	g
AVSphericalMapping	libavutil/spherical.h	/^typedef struct AVSphericalMapping {$/;"	s
AVSphericalMapping	libavutil/spherical.h	/^} AVSphericalMapping;$/;"	t	typeref:struct:AVSphericalMapping
AVSphericalProjection	libavutil/spherical.h	/^enum AVSphericalProjection {$/;"	g
AVStereo3D	libavutil/stereo3d.h	/^typedef struct AVStereo3D {$/;"	s
AVStereo3D	libavutil/stereo3d.h	/^} AVStereo3D;$/;"	t	typeref:struct:AVStereo3D
AVStereo3DType	libavutil/stereo3d.h	/^enum AVStereo3DType {$/;"	g
AVStream	libavformat/avformat.h	/^typedef struct AVStream {$/;"	s
AVStream	libavformat/avformat.h	/^} AVStream;$/;"	t	typeref:struct:AVStream
AVStreamInternal	libavformat/avformat.h	/^typedef struct AVStreamInternal AVStreamInternal;$/;"	t	typeref:struct:AVStreamInternal
AVStreamParseType	libavformat/avformat.h	/^enum AVStreamParseType {$/;"	g
AVSubtitle	libavcodec/avcodec.h	/^typedef struct AVSubtitle {$/;"	s
AVSubtitle	libavcodec/avcodec.h	/^} AVSubtitle;$/;"	t	typeref:struct:AVSubtitle
AVSubtitleRect	libavcodec/avcodec.h	/^typedef struct AVSubtitleRect {$/;"	s
AVSubtitleRect	libavcodec/avcodec.h	/^} AVSubtitleRect;$/;"	t	typeref:struct:AVSubtitleRect
AVSubtitleType	libavcodec/avcodec.h	/^enum AVSubtitleType {$/;"	g
AVThreadMessageFlags	libavutil/threadmessage.h	/^typedef enum AVThreadMessageFlags {$/;"	g
AVThreadMessageFlags	libavutil/threadmessage.h	/^} AVThreadMessageFlags;$/;"	t	typeref:enum:AVThreadMessageFlags
AVThreadMessageQueue	libavutil/threadmessage.h	/^typedef struct AVThreadMessageQueue AVThreadMessageQueue;$/;"	t	typeref:struct:AVThreadMessageQueue
AVTimebaseSource	libavformat/avformat.h	/^enum AVTimebaseSource {$/;"	g
AVTimecode	libavutil/timecode.h	/^} AVTimecode;$/;"	t	typeref:struct:__anon17
AVTimecodeFlag	libavutil/timecode.h	/^enum AVTimecodeFlag {$/;"	g
AVUNERROR	libavutil/error.h	40;"	d
AVUNERROR	libavutil/error.h	44;"	d
AVUTIL_ADLER32_H	libavutil/adler32.h	28;"	d
AVUTIL_AES_CTR_H	libavutil/aes_ctr.h	23;"	d
AVUTIL_AES_H	libavutil/aes.h	22;"	d
AVUTIL_ATTRIBUTES_H	libavutil/attributes.h	27;"	d
AVUTIL_AUDIO_FIFO_H	libavutil/audio_fifo.h	28;"	d
AVUTIL_AVASSERT_H	libavutil/avassert.h	28;"	d
AVUTIL_AVCONFIG_H	libavutil/avconfig.h	3;"	d
AVUTIL_AVSTRING_H	libavutil/avstring.h	22;"	d
AVUTIL_AVUTIL_H	libavutil/avutil.h	22;"	d
AVUTIL_BASE64_H	libavutil/base64.h	22;"	d
AVUTIL_BLOWFISH_H	libavutil/blowfish.h	23;"	d
AVUTIL_BPRINT_H	libavutil/bprint.h	22;"	d
AVUTIL_BSWAP_H	libavutil/bswap.h	27;"	d
AVUTIL_BUFFER_H	libavutil/buffer.h	26;"	d
AVUTIL_CAMELLIA_H	libavutil/camellia.h	23;"	d
AVUTIL_CAST5_H	libavutil/cast5.h	23;"	d
AVUTIL_CHANNEL_LAYOUT_H	libavutil/channel_layout.h	23;"	d
AVUTIL_COMMON_H	libavutil/common.h	27;"	d
AVUTIL_CPU_H	libavutil/cpu.h	22;"	d
AVUTIL_CRC_H	libavutil/crc.h	28;"	d
AVUTIL_DES_H	libavutil/des.h	23;"	d
AVUTIL_DICT_H	libavutil/dict.h	31;"	d
AVUTIL_DISPLAY_H	libavutil/display.h	27;"	d
AVUTIL_DOWNMIX_INFO_H	libavutil/downmix_info.h	22;"	d
AVUTIL_ERROR_H	libavutil/error.h	25;"	d
AVUTIL_EVAL_H	libavutil/eval.h	27;"	d
AVUTIL_FFVERSION_H	libavutil/ffversion.h	3;"	d
AVUTIL_FIFO_H	libavutil/fifo.h	25;"	d
AVUTIL_FILE_H	libavutil/file.h	20;"	d
AVUTIL_FRAME_H	libavutil/frame.h	26;"	d
AVUTIL_HASH_H	libavutil/hash.h	28;"	d
AVUTIL_HMAC_H	libavutil/hmac.h	22;"	d
AVUTIL_HWCONTEXT_CUDA_H	libavutil/hwcontext_cuda.h	21;"	d
AVUTIL_HWCONTEXT_D3D11VA_H	libavutil/hwcontext_d3d11va.h	20;"	d
AVUTIL_HWCONTEXT_DRM_H	libavutil/hwcontext_drm.h	20;"	d
AVUTIL_HWCONTEXT_DXVA2_H	libavutil/hwcontext_dxva2.h	21;"	d
AVUTIL_HWCONTEXT_H	libavutil/hwcontext.h	20;"	d
AVUTIL_HWCONTEXT_QSV_H	libavutil/hwcontext_qsv.h	20;"	d
AVUTIL_HWCONTEXT_VAAPI_H	libavutil/hwcontext_vaapi.h	20;"	d
AVUTIL_HWCONTEXT_VDPAU_H	libavutil/hwcontext_vdpau.h	20;"	d
AVUTIL_HWCONTEXT_VIDEOTOOLBOX_H	libavutil/hwcontext_videotoolbox.h	20;"	d
AVUTIL_IMGUTILS_H	libavutil/imgutils.h	20;"	d
AVUTIL_INTFLOAT_H	libavutil/intfloat.h	22;"	d
AVUTIL_INTREADWRITE_H	libavutil/intreadwrite.h	20;"	d
AVUTIL_LFG_H	libavutil/lfg.h	23;"	d
AVUTIL_LOG_H	libavutil/log.h	22;"	d
AVUTIL_LZO_H	libavutil/lzo.h	23;"	d
AVUTIL_MACROS_H	libavutil/macros.h	26;"	d
AVUTIL_MASTERING_DISPLAY_METADATA_H	libavutil/mastering_display_metadata.h	22;"	d
AVUTIL_MATHEMATICS_H	libavutil/mathematics.h	28;"	d
AVUTIL_MD5_H	libavutil/md5.h	28;"	d
AVUTIL_MEM_H	libavutil/mem.h	28;"	d
AVUTIL_MOTION_VECTOR_H	libavutil/motion_vector.h	20;"	d
AVUTIL_MURMUR3_H	libavutil/murmur3.h	28;"	d
AVUTIL_OPT_H	libavutil/opt.h	23;"	d
AVUTIL_PARSEUTILS_H	libavutil/parseutils.h	20;"	d
AVUTIL_PIXDESC_H	libavutil/pixdesc.h	23;"	d
AVUTIL_PIXELUTILS_H	libavutil/pixelutils.h	20;"	d
AVUTIL_PIXFMT_H	libavutil/pixfmt.h	22;"	d
AVUTIL_RANDOM_SEED_H	libavutil/random_seed.h	22;"	d
AVUTIL_RATIONAL_H	libavutil/rational.h	30;"	d
AVUTIL_RC4_H	libavutil/rc4.h	22;"	d
AVUTIL_REPLAYGAIN_H	libavutil/replaygain.h	20;"	d
AVUTIL_RIPEMD_H	libavutil/ripemd.h	29;"	d
AVUTIL_SAMPLEFMT_H	libavutil/samplefmt.h	20;"	d
AVUTIL_SHA512_H	libavutil/sha512.h	29;"	d
AVUTIL_SHA_H	libavutil/sha.h	28;"	d
AVUTIL_SPHERICAL_H	libavutil/spherical.h	27;"	d
AVUTIL_STEREO3D_H	libavutil/stereo3d.h	27;"	d
AVUTIL_TEA_H	libavutil/tea.h	23;"	d
AVUTIL_THREADMESSAGE_H	libavutil/threadmessage.h	20;"	d
AVUTIL_TIMECODE_H	libavutil/timecode.h	28;"	d
AVUTIL_TIMESTAMP_H	libavutil/timestamp.h	25;"	d
AVUTIL_TIME_H	libavutil/time.h	22;"	d
AVUTIL_TREE_H	libavutil/tree.h	28;"	d
AVUTIL_TWOFISH_H	libavutil/twofish.h	23;"	d
AVUTIL_VERSION_H	libavutil/version.h	28;"	d
AVUTIL_XTEA_H	libavutil/xtea.h	23;"	d
AVVAAPIDeviceContext	libavutil/hwcontext_vaapi.h	/^typedef struct AVVAAPIDeviceContext {$/;"	s
AVVAAPIDeviceContext	libavutil/hwcontext_vaapi.h	/^} AVVAAPIDeviceContext;$/;"	t	typeref:struct:AVVAAPIDeviceContext
AVVAAPIFramesContext	libavutil/hwcontext_vaapi.h	/^typedef struct AVVAAPIFramesContext {$/;"	s
AVVAAPIFramesContext	libavutil/hwcontext_vaapi.h	/^} AVVAAPIFramesContext;$/;"	t	typeref:struct:AVVAAPIFramesContext
AVVAAPIHWConfig	libavutil/hwcontext_vaapi.h	/^typedef struct AVVAAPIHWConfig {$/;"	s
AVVAAPIHWConfig	libavutil/hwcontext_vaapi.h	/^} AVVAAPIHWConfig;$/;"	t	typeref:struct:AVVAAPIHWConfig
AVVDAContext	libavcodec/vda.h	/^typedef struct AVVDAContext {$/;"	s
AVVDAContext	libavcodec/vda.h	/^} AVVDAContext;$/;"	t	typeref:struct:AVVDAContext
AVVDPAUContext	libavcodec/vdpau.h	/^typedef struct AVVDPAUContext {$/;"	s
AVVDPAUContext	libavcodec/vdpau.h	/^} AVVDPAUContext;$/;"	t	typeref:struct:AVVDPAUContext
AVVDPAUDeviceContext	libavutil/hwcontext_vdpau.h	/^typedef struct AVVDPAUDeviceContext {$/;"	s
AVVDPAUDeviceContext	libavutil/hwcontext_vdpau.h	/^} AVVDPAUDeviceContext;$/;"	t	typeref:struct:AVVDPAUDeviceContext
AVVDPAUPictureInfo	libavcodec/vdpau.h	/^union AVVDPAUPictureInfo {$/;"	u
AVVDPAU_Render2	libavcodec/vdpau.h	/^typedef int (*AVVDPAU_Render2)(struct AVCodecContext *, struct AVFrame *,$/;"	t
AVVideotoolboxContext	libavcodec/videotoolbox.h	/^typedef struct AVVideotoolboxContext {$/;"	s
AVVideotoolboxContext	libavcodec/videotoolbox.h	/^} AVVideotoolboxContext;$/;"	t	typeref:struct:AVVideotoolboxContext
AVVorbisParseContext	libavcodec/vorbis_parser.h	/^typedef struct AVVorbisParseContext AVVorbisParseContext;$/;"	t	typeref:struct:AVVorbisParseContext
AVXTEA	libavutil/xtea.h	/^typedef struct AVXTEA {$/;"	s
AVXTEA	libavutil/xtea.h	/^} AVXTEA;$/;"	t	typeref:struct:AVXTEA
AV_AFD_14_9	libavutil/frame.h	/^    AV_AFD_14_9         = 11,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9	libavutil/frame.h	/^    AV_AFD_16_9         = 10,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9_SP_14_9	libavutil/frame.h	/^    AV_AFD_16_9_SP_14_9 = 14,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3	libavutil/frame.h	/^    AV_AFD_4_3          = 9,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3_SP_14_9	libavutil/frame.h	/^    AV_AFD_4_3_SP_14_9  = 13,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SAME	libavutil/frame.h	/^    AV_AFD_SAME         = 8,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SP_4_3	libavutil/frame.h	/^    AV_AFD_SP_4_3       = 15,$/;"	e	enum:AVActiveFormatDescription
AV_APP_TO_DEV_GET_MUTE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_MUTE   = MKBETAG('G', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_GET_VOLUME	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_VOLUME = MKBETAG('G', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_MUTE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_MUTE        = MKBETAG(' ', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_NONE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PAUSE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PAUSE        = MKBETAG('P', 'A', 'U', ' '),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PLAY	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PLAY         = MKBETAG('P', 'L', 'A', 'Y'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_SET_VOLUME	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_SET_VOLUME = MKBETAG('S', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_MUTE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_MUTE = MKBETAG('T', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_PAUSE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_PAUSE = MKBETAG('P', 'A', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_UNMUTE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_UNMUTE      = MKBETAG('U', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_REPAINT	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_REPAINT = MKBETAG('R','E','P','A'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_SIZE	libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_SIZE = MKBETAG('G','E','O','M'),$/;"	e	enum:AVAppToDevMessageType
AV_AUDIO_SERVICE_TYPE_COMMENTARY	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_COMMENTARY        = 5,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_DIALOGUE	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_DIALOGUE          = 4,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EFFECTS	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EFFECTS           = 1,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EMERGENCY	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EMERGENCY         = 6,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED  = 3,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_KARAOKE	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_KARAOKE           = 8,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_MAIN	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_MAIN              = 0,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_NB	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_NB                   , \/\/\/< Not part of ABI$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VOICE_OVER	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VOICE_OVER        = 7,$/;"	e	enum:AVAudioServiceType
AV_BASE64_DECODE_SIZE	libavutil/base64.h	48;"	d
AV_BASE64_SIZE	libavutil/base64.h	66;"	d
AV_BE2NE16C	libavutil/bswap.h	102;"	d
AV_BE2NE32C	libavutil/bswap.h	103;"	d
AV_BE2NE64C	libavutil/bswap.h	104;"	d
AV_BE2NEC	libavutil/bswap.h	89;"	d
AV_BE2NEC	libavutil/bswap.h	98;"	d
AV_BF_ROUNDS	libavutil/blowfish.h	33;"	d
AV_BPRINT_SIZE_AUTOMATIC	libavutil/bprint.h	95;"	d
AV_BPRINT_SIZE_COUNT_ONLY	libavutil/bprint.h	96;"	d
AV_BPRINT_SIZE_UNLIMITED	libavutil/bprint.h	94;"	d
AV_BSWAP16C	libavutil/bswap.h	51;"	d
AV_BSWAP32C	libavutil/bswap.h	52;"	d
AV_BSWAP64C	libavutil/bswap.h	53;"	d
AV_BSWAPC	libavutil/bswap.h	55;"	d
AV_BUFFERSINK_FLAG_NO_REQUEST	libavfilter/buffersink.h	60;"	d
AV_BUFFERSINK_FLAG_PEEK	libavfilter/buffersink.h	53;"	d
AV_BUFFERSRC_FLAG_KEEP_REF	libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_KEEP_REF = 8,$/;"	e	enum:__anon4
AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT	libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT = 1,$/;"	e	enum:__anon4
AV_BUFFERSRC_FLAG_PUSH	libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_PUSH = 4,$/;"	e	enum:__anon4
AV_BUFFER_FLAG_READONLY	libavutil/buffer.h	113;"	d
AV_CEIL_RSHIFT	libavutil/common.h	58;"	d
AV_CH_BACK_CENTER	libavutil/channel_layout.h	57;"	d
AV_CH_BACK_LEFT	libavutil/channel_layout.h	53;"	d
AV_CH_BACK_RIGHT	libavutil/channel_layout.h	54;"	d
AV_CH_FRONT_CENTER	libavutil/channel_layout.h	51;"	d
AV_CH_FRONT_LEFT	libavutil/channel_layout.h	49;"	d
AV_CH_FRONT_LEFT_OF_CENTER	libavutil/channel_layout.h	55;"	d
AV_CH_FRONT_RIGHT	libavutil/channel_layout.h	50;"	d
AV_CH_FRONT_RIGHT_OF_CENTER	libavutil/channel_layout.h	56;"	d
AV_CH_LAYOUT_2POINT1	libavutil/channel_layout.h	87;"	d
AV_CH_LAYOUT_2_1	libavutil/channel_layout.h	88;"	d
AV_CH_LAYOUT_2_2	libavutil/channel_layout.h	93;"	d
AV_CH_LAYOUT_3POINT1	libavutil/channel_layout.h	90;"	d
AV_CH_LAYOUT_4POINT0	libavutil/channel_layout.h	91;"	d
AV_CH_LAYOUT_4POINT1	libavutil/channel_layout.h	92;"	d
AV_CH_LAYOUT_5POINT0	libavutil/channel_layout.h	95;"	d
AV_CH_LAYOUT_5POINT0_BACK	libavutil/channel_layout.h	97;"	d
AV_CH_LAYOUT_5POINT1	libavutil/channel_layout.h	96;"	d
AV_CH_LAYOUT_5POINT1_BACK	libavutil/channel_layout.h	98;"	d
AV_CH_LAYOUT_6POINT0	libavutil/channel_layout.h	99;"	d
AV_CH_LAYOUT_6POINT0_FRONT	libavutil/channel_layout.h	100;"	d
AV_CH_LAYOUT_6POINT1	libavutil/channel_layout.h	102;"	d
AV_CH_LAYOUT_6POINT1_BACK	libavutil/channel_layout.h	103;"	d
AV_CH_LAYOUT_6POINT1_FRONT	libavutil/channel_layout.h	104;"	d
AV_CH_LAYOUT_7POINT0	libavutil/channel_layout.h	105;"	d
AV_CH_LAYOUT_7POINT0_FRONT	libavutil/channel_layout.h	106;"	d
AV_CH_LAYOUT_7POINT1	libavutil/channel_layout.h	107;"	d
AV_CH_LAYOUT_7POINT1_WIDE	libavutil/channel_layout.h	108;"	d
AV_CH_LAYOUT_7POINT1_WIDE_BACK	libavutil/channel_layout.h	109;"	d
AV_CH_LAYOUT_HEXADECAGONAL	libavutil/channel_layout.h	111;"	d
AV_CH_LAYOUT_HEXAGONAL	libavutil/channel_layout.h	101;"	d
AV_CH_LAYOUT_MONO	libavutil/channel_layout.h	85;"	d
AV_CH_LAYOUT_NATIVE	libavutil/channel_layout.h	78;"	d
AV_CH_LAYOUT_OCTAGONAL	libavutil/channel_layout.h	110;"	d
AV_CH_LAYOUT_QUAD	libavutil/channel_layout.h	94;"	d
AV_CH_LAYOUT_STEREO	libavutil/channel_layout.h	86;"	d
AV_CH_LAYOUT_STEREO_DOWNMIX	libavutil/channel_layout.h	112;"	d
AV_CH_LAYOUT_SURROUND	libavutil/channel_layout.h	89;"	d
AV_CH_LOW_FREQUENCY	libavutil/channel_layout.h	52;"	d
AV_CH_LOW_FREQUENCY_2	libavutil/channel_layout.h	73;"	d
AV_CH_SIDE_LEFT	libavutil/channel_layout.h	58;"	d
AV_CH_SIDE_RIGHT	libavutil/channel_layout.h	59;"	d
AV_CH_STEREO_LEFT	libavutil/channel_layout.h	67;"	d
AV_CH_STEREO_RIGHT	libavutil/channel_layout.h	68;"	d
AV_CH_SURROUND_DIRECT_LEFT	libavutil/channel_layout.h	71;"	d
AV_CH_SURROUND_DIRECT_RIGHT	libavutil/channel_layout.h	72;"	d
AV_CH_TOP_BACK_CENTER	libavutil/channel_layout.h	65;"	d
AV_CH_TOP_BACK_LEFT	libavutil/channel_layout.h	64;"	d
AV_CH_TOP_BACK_RIGHT	libavutil/channel_layout.h	66;"	d
AV_CH_TOP_CENTER	libavutil/channel_layout.h	60;"	d
AV_CH_TOP_FRONT_CENTER	libavutil/channel_layout.h	62;"	d
AV_CH_TOP_FRONT_LEFT	libavutil/channel_layout.h	61;"	d
AV_CH_TOP_FRONT_RIGHT	libavutil/channel_layout.h	63;"	d
AV_CH_WIDE_LEFT	libavutil/channel_layout.h	69;"	d
AV_CH_WIDE_RIGHT	libavutil/channel_layout.h	70;"	d
AV_CLASS_CATEGORY_BITSTREAM_FILTER	libavutil/log.h	/^    AV_CLASS_CATEGORY_BITSTREAM_FILTER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DECODER	libavutil/log.h	/^    AV_CLASS_CATEGORY_DECODER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEMUXER	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEMUXER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_INPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_INPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_OUTPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_OUTPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_ENCODER	libavutil/log.h	/^    AV_CLASS_CATEGORY_ENCODER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_FILTER	libavutil/log.h	/^    AV_CLASS_CATEGORY_FILTER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_INPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_INPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_MUXER	libavutil/log.h	/^    AV_CLASS_CATEGORY_MUXER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_NA	libavutil/log.h	/^    AV_CLASS_CATEGORY_NA = 0,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_NB	libavutil/log.h	/^    AV_CLASS_CATEGORY_NB  \/\/\/< not part of ABI\/API$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_OUTPUT	libavutil/log.h	/^    AV_CLASS_CATEGORY_OUTPUT,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_SWRESAMPLER	libavutil/log.h	/^    AV_CLASS_CATEGORY_SWRESAMPLER,$/;"	e	enum:__anon14
AV_CLASS_CATEGORY_SWSCALER	libavutil/log.h	/^    AV_CLASS_CATEGORY_SWSCALER,$/;"	e	enum:__anon14
AV_CODEC_CAP_AUTO_THREADS	libavcodec/avcodec.h	1077;"	d
AV_CODEC_CAP_AVOID_PROBING	libavcodec/avcodec.h	1091;"	d
AV_CODEC_CAP_CHANNEL_CONF	libavcodec/avcodec.h	1061;"	d
AV_CODEC_CAP_DELAY	libavcodec/avcodec.h	1027;"	d
AV_CODEC_CAP_DR1	libavcodec/avcodec.h	1002;"	d
AV_CODEC_CAP_DRAW_HORIZ_BAND	libavcodec/avcodec.h	996;"	d
AV_CODEC_CAP_EXPERIMENTAL	libavcodec/avcodec.h	1057;"	d
AV_CODEC_CAP_FRAME_THREADS	libavcodec/avcodec.h	1065;"	d
AV_CODEC_CAP_HWACCEL_VDPAU	libavcodec/avcodec.h	1038;"	d
AV_CODEC_CAP_INTRA_ONLY	libavcodec/avcodec.h	1095;"	d
AV_CODEC_CAP_LOSSLESS	libavcodec/avcodec.h	1099;"	d
AV_CODEC_CAP_PARAM_CHANGE	libavcodec/avcodec.h	1073;"	d
AV_CODEC_CAP_SLICE_THREADS	libavcodec/avcodec.h	1069;"	d
AV_CODEC_CAP_SMALL_LAST_FRAME	libavcodec/avcodec.h	1032;"	d
AV_CODEC_CAP_SUBFRAMES	libavcodec/avcodec.h	1052;"	d
AV_CODEC_CAP_TRUNCATED	libavcodec/avcodec.h	1003;"	d
AV_CODEC_CAP_VARIABLE_FRAME_SIZE	libavcodec/avcodec.h	1081;"	d
AV_CODEC_FLAG2_CHUNKS	libavcodec/avcodec.h	963;"	d
AV_CODEC_FLAG2_DROP_FRAME_TIMECODE	libavcodec/avcodec.h	957;"	d
AV_CODEC_FLAG2_EXPORT_MVS	libavcodec/avcodec.h	976;"	d
AV_CODEC_FLAG2_FAST	libavcodec/avcodec.h	944;"	d
AV_CODEC_FLAG2_IGNORE_CROP	libavcodec/avcodec.h	967;"	d
AV_CODEC_FLAG2_LOCAL_HEADER	libavcodec/avcodec.h	952;"	d
AV_CODEC_FLAG2_NO_OUTPUT	libavcodec/avcodec.h	948;"	d
AV_CODEC_FLAG2_RO_FLUSH_NOOP	libavcodec/avcodec.h	984;"	d
AV_CODEC_FLAG2_SHOW_ALL	libavcodec/avcodec.h	972;"	d
AV_CODEC_FLAG2_SKIP_MANUAL	libavcodec/avcodec.h	980;"	d
AV_CODEC_FLAG_4MV	libavcodec/avcodec.h	880;"	d
AV_CODEC_FLAG_AC_PRED	libavcodec/avcodec.h	934;"	d
AV_CODEC_FLAG_BITEXACT	libavcodec/avcodec.h	929;"	d
AV_CODEC_FLAG_CLOSED_GOP	libavcodec/avcodec.h	939;"	d
AV_CODEC_FLAG_GLOBAL_HEADER	libavcodec/avcodec.h	925;"	d
AV_CODEC_FLAG_GRAY	libavcodec/avcodec.h	904;"	d
AV_CODEC_FLAG_INTERLACED_DCT	libavcodec/avcodec.h	917;"	d
AV_CODEC_FLAG_INTERLACED_ME	libavcodec/avcodec.h	938;"	d
AV_CODEC_FLAG_LOOP_FILTER	libavcodec/avcodec.h	900;"	d
AV_CODEC_FLAG_LOW_DELAY	libavcodec/avcodec.h	921;"	d
AV_CODEC_FLAG_OUTPUT_CORRUPT	libavcodec/avcodec.h	884;"	d
AV_CODEC_FLAG_PASS1	libavcodec/avcodec.h	892;"	d
AV_CODEC_FLAG_PASS2	libavcodec/avcodec.h	896;"	d
AV_CODEC_FLAG_PSNR	libavcodec/avcodec.h	908;"	d
AV_CODEC_FLAG_QPEL	libavcodec/avcodec.h	888;"	d
AV_CODEC_FLAG_QSCALE	libavcodec/avcodec.h	876;"	d
AV_CODEC_FLAG_TRUNCATED	libavcodec/avcodec.h	913;"	d
AV_CODEC_FLAG_UNALIGNED	libavcodec/avcodec.h	872;"	d
AV_CODEC_ID_012V	libavcodec/avcodec.h	/^    AV_CODEC_ID_012V,$/;"	e	enum:AVCodecID
AV_CODEC_ID_4GV	libavcodec/avcodec.h	/^    AV_CODEC_ID_4GV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_4XM	libavcodec/avcodec.h	/^    AV_CODEC_ID_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8BPS	libavcodec/avcodec.h	/^    AV_CODEC_ID_8BPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_EXP	libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_EXP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_FIB	libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_FIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI	libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI5	libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC	libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC_LATM	libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC_LATM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AASC	libavcodec/avcodec.h	/^    AV_CODEC_ID_AASC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AC3	libavcodec/avcodec.h	/^    AV_CODEC_ID_AC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_4XM	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_ADX	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_ADX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_AFC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_AFC = 0x11800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_AICA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_AICA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_CT	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_CT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_DTK	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_DTK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_MAXIS_XA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_MAXIS_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R1	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R2	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R3	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_XAS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_XAS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G722	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G722,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_AMV	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_APC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_APC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DAT4	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DAT4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK3	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK4	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_EACS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_EACS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_SEAD	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_SEAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_ISS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_ISS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_OKI	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_OKI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_QT	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_QT = 0x11000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_RAD	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_RAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_SMJPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_SMJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WAV	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WAV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_MS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_MS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_MTAF	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_MTAF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_PSX	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_PSX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_2	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_3	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_4	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SWF	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SWF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_THP	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_THP_LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_THP_LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_VIMA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_VIMA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_XA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_YAMAHA	libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_YAMAHA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AIC	libavcodec/avcodec.h	/^    AV_CODEC_ID_AIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALAC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ALAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALIAS_PIX	libavcodec/avcodec.h	/^    AV_CODEC_ID_ALIAS_PIX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_NB	libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_NB = 0x12000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_WB	libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_WB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMV	libavcodec/avcodec.h	/^    AV_CODEC_ID_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANM	libavcodec/avcodec.h	/^    AV_CODEC_ID_ANM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANSI	libavcodec/avcodec.h	/^    AV_CODEC_ID_ANSI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APE	libavcodec/avcodec.h	/^    AV_CODEC_ID_APE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APNG	libavcodec/avcodec.h	/^    AV_CODEC_ID_APNG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASS	libavcodec/avcodec.h	/^    AV_CODEC_ID_ASS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV2	libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC1	libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3	libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3AL	libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3AL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3P	libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3PAL	libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3PAL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA	libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA2	libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_AV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRN	libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRP	libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVS	libavcodec/avcodec.h	/^    AV_CODEC_ID_AVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVUI	libavcodec/avcodec.h	/^    AV_CODEC_ID_AVUI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AYUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_AYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BETHSOFTVID	libavcodec/avcodec.h	/^    AV_CODEC_ID_BETHSOFTVID,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BFI	libavcodec/avcodec.h	/^    AV_CODEC_ID_BFI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_DCT	libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_DCT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_RDFT	libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_RDFT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINTEXT	libavcodec/avcodec.h	/^    AV_CODEC_ID_BINTEXT    = 0x18800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BIN_DATA	libavcodec/avcodec.h	/^    AV_CODEC_ID_BIN_DATA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BITPACKED	libavcodec/avcodec.h	/^    AV_CODEC_ID_BITPACKED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMP	libavcodec/avcodec.h	/^    AV_CODEC_ID_BMP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_AUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_AUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BRENDER_PIX	libavcodec/avcodec.h	/^    AV_CODEC_ID_BRENDER_PIX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_C93	libavcodec/avcodec.h	/^    AV_CODEC_ID_C93,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CAVS	libavcodec/avcodec.h	/^    AV_CODEC_ID_CAVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDGRAPHICS	libavcodec/avcodec.h	/^    AV_CODEC_ID_CDGRAPHICS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDXL	libavcodec/avcodec.h	/^    AV_CODEC_ID_CDXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CELT	libavcodec/avcodec.h	/^    AV_CODEC_ID_CELT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CFHD	libavcodec/avcodec.h	/^    AV_CODEC_ID_CFHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CINEPAK	libavcodec/avcodec.h	/^    AV_CODEC_ID_CINEPAK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLEARVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_CLEARVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLJR	libavcodec/avcodec.h	/^    AV_CODEC_ID_CLJR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLLC	libavcodec/avcodec.h	/^    AV_CODEC_ID_CLLC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CMV	libavcodec/avcodec.h	/^    AV_CODEC_ID_CMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COMFORT_NOISE	libavcodec/avcodec.h	/^    AV_CODEC_ID_COMFORT_NOISE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COOK	libavcodec/avcodec.h	/^    AV_CODEC_ID_COOK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CPIA	libavcodec/avcodec.h	/^    AV_CODEC_ID_CPIA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CSCD	libavcodec/avcodec.h	/^    AV_CODEC_ID_CSCD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CYUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_CYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DAALA	libavcodec/avcodec.h	/^    AV_CODEC_ID_DAALA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DDS	libavcodec/avcodec.h	/^    AV_CODEC_ID_DDS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DFA	libavcodec/avcodec.h	/^    AV_CODEC_ID_DFA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DIRAC	libavcodec/avcodec.h	/^    AV_CODEC_ID_DIRAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DNXHD	libavcodec/avcodec.h	/^    AV_CODEC_ID_DNXHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DOLBY_E	libavcodec/avcodec.h	/^    AV_CODEC_ID_DOLBY_E,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DPX	libavcodec/avcodec.h	/^    AV_CODEC_ID_DPX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINAUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSS_SP	libavcodec/avcodec.h	/^    AV_CODEC_ID_DSS_SP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DST	libavcodec/avcodec.h	/^    AV_CODEC_ID_DST,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DTS	libavcodec/avcodec.h	/^    AV_CODEC_ID_DTS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVAUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_SUBTITLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_TELETEXT	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_TELETEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_NAV	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_NAV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_SUBTITLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_SUBTITLE = 0x17000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_DVVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXA	libavcodec/avcodec.h	/^    AV_CODEC_ID_DXA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXTORY	libavcodec/avcodec.h	/^    AV_CODEC_ID_DXTORY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXV	libavcodec/avcodec.h	/^    AV_CODEC_ID_DXV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EAC3	libavcodec/avcodec.h	/^    AV_CODEC_ID_EAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EIA_608	libavcodec/avcodec.h	/^    AV_CODEC_ID_EIA_608,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE124	libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE124,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE130	libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE130,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EVRC	libavcodec/avcodec.h	/^    AV_CODEC_ID_EVRC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EXR	libavcodec/avcodec.h	/^    AV_CODEC_ID_EXR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFMETADATA	libavcodec/avcodec.h	/^    AV_CODEC_ID_FFMETADATA = 0x21000,   \/\/\/< Dummy codec for streams containing only metadata information.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_FFV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFVHUFF	libavcodec/avcodec.h	/^    AV_CODEC_ID_FFVHUFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFWAVESYNTH	libavcodec/avcodec.h	/^    AV_CODEC_ID_FFWAVESYNTH = 0x15800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIC	libavcodec/avcodec.h	/^    AV_CODEC_ID_FIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_AUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_AUDIO = 0x10000,     \/\/\/< A dummy id pointing at the start of audio codecs$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_SUBTITLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_SUBTITLE = 0x17000,          \/\/\/< A dummy ID pointing at the start of subtitle codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_UNKNOWN	libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_UNKNOWN = 0x18000,           \/\/\/< A dummy ID pointing at the start of various fake codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FITS	libavcodec/avcodec.h	/^    AV_CODEC_ID_FITS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLAC	libavcodec/avcodec.h	/^    AV_CODEC_ID_FLAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV	libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV2	libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLIC	libavcodec/avcodec.h	/^    AV_CODEC_ID_FLIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_FLV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FMVC	libavcodec/avcodec.h	/^    AV_CODEC_ID_FMVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRAPS	libavcodec/avcodec.h	/^    AV_CODEC_ID_FRAPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRWU	libavcodec/avcodec.h	/^    AV_CODEC_ID_FRWU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G2M	libavcodec/avcodec.h	/^    AV_CODEC_ID_G2M,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G723_1	libavcodec/avcodec.h	/^    AV_CODEC_ID_G723_1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G729	libavcodec/avcodec.h	/^    AV_CODEC_ID_G729,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GDV	libavcodec/avcodec.h	/^    AV_CODEC_ID_GDV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GIF	libavcodec/avcodec.h	/^    AV_CODEC_ID_GIF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GREMLIN_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_GREMLIN_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM	libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM, \/\/\/< as in Berlin toast format$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM_MS	libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM_MS, \/* as found in WAV *\/$/;"	e	enum:AVCodecID
AV_CODEC_ID_H261	libavcodec/avcodec.h	/^    AV_CODEC_ID_H261,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263	libavcodec/avcodec.h	/^    AV_CODEC_ID_H263,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263I	libavcodec/avcodec.h	/^    AV_CODEC_ID_H263I,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263P	libavcodec/avcodec.h	/^    AV_CODEC_ID_H263P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H264	libavcodec/avcodec.h	/^    AV_CODEC_ID_H264,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H265	libavcodec/avcodec.h	395;"	d
AV_CODEC_ID_HAP	libavcodec/avcodec.h	/^    AV_CODEC_ID_HAP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HDMV_PGS_SUBTITLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_HDMV_PGS_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HDMV_TEXT_SUBTITLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_HDMV_TEXT_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HEVC	libavcodec/avcodec.h	/^    AV_CODEC_ID_HEVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HNM4_VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_HNM4_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HQX	libavcodec/avcodec.h	/^    AV_CODEC_ID_HQX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HQ_HQA	libavcodec/avcodec.h	/^    AV_CODEC_ID_HQ_HQA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HUFFYUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_HUFFYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IAC	libavcodec/avcodec.h	/^    AV_CODEC_ID_IAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDCIN	libavcodec/avcodec.h	/^    AV_CODEC_ID_IDCIN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDF	libavcodec/avcodec.h	/^    AV_CODEC_ID_IDF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IFF_BYTERUN1	libavcodec/avcodec.h	357;"	d
AV_CODEC_ID_IFF_ILBM	libavcodec/avcodec.h	/^    AV_CODEC_ID_IFF_ILBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ILBC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ILBC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IMC	libavcodec/avcodec.h	/^    AV_CODEC_ID_IMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO2	libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO3	libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO4	libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO5	libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_ACM	libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_ACM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JACOSUB	libavcodec/avcodec.h	/^    AV_CODEC_ID_JACOSUB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEG2000	libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEG2000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEGLS	libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEGLS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JV	libavcodec/avcodec.h	/^    AV_CODEC_ID_JV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KGV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_KGV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KMVC	libavcodec/avcodec.h	/^    AV_CODEC_ID_KMVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LAGARITH	libavcodec/avcodec.h	/^    AV_CODEC_ID_LAGARITH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LJPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_LJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LOCO	libavcodec/avcodec.h	/^    AV_CODEC_ID_LOCO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_M101	libavcodec/avcodec.h	/^    AV_CODEC_ID_M101,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE3	libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE6	libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MAD	libavcodec/avcodec.h	/^    AV_CODEC_ID_MAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MAGICYUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_MAGICYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MDEC	libavcodec/avcodec.h	/^    AV_CODEC_ID_MDEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_METASOUND	libavcodec/avcodec.h	/^    AV_CODEC_ID_METASOUND,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MICRODVD	libavcodec/avcodec.h	/^    AV_CODEC_ID_MICRODVD   = 0x17800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MIMIC	libavcodec/avcodec.h	/^    AV_CODEC_ID_MIMIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEGB	libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEGB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MLP	libavcodec/avcodec.h	/^    AV_CODEC_ID_MLP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MMVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_MMVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOTIONPIXELS	libavcodec/avcodec.h	/^    AV_CODEC_ID_MOTIONPIXELS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOV_TEXT	libavcodec/avcodec.h	/^    AV_CODEC_ID_MOV_TEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP2 = 0x15000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3, \/\/\/< preferred ID for decoding MPEG audio layer 1, 2 or 3$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ADU	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ADU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ON4	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ON4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP4ALS	libavcodec/avcodec.h	/^    AV_CODEC_ID_MP4ALS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG1VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG1VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2TS	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2TS = 0x20000, \/**< _FAKE_ codec to indicate a raw MPEG-2 TS$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO, \/\/\/< preferred ID for MPEG-1\/2 video decoding$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO_XVMC	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO_XVMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4SYSTEMS	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4SYSTEMS = 0x20001, \/**< _FAKE_ codec to indicate a MPEG-4 Systems$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPL2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MPL2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSA1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSA1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSCC	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSCC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V3	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSRLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSVIDEO1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSVIDEO1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSZH	libavcodec/avcodec.h	/^    AV_CODEC_ID_MSZH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MTS2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MTS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK7	libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK7,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK8	libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC1	libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC2	libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MXPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_MXPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NELLYMOSER	libavcodec/avcodec.h	/^    AV_CODEC_ID_NELLYMOSER,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NONE	libavcodec/avcodec.h	/^    AV_CODEC_ID_NONE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_NUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ON2AVC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ON2AVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OPUS	libavcodec/avcodec.h	/^    AV_CODEC_ID_OPUS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OTF	libavcodec/avcodec.h	/^    AV_CODEC_ID_OTF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_AUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_AUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_VIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAM	libavcodec/avcodec.h	/^    AV_CODEC_ID_PAM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PBM	libavcodec/avcodec.h	/^    AV_CODEC_ID_PBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ALAW	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ALAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_BLURAY	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_BLURAY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_DVD	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_DVD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F16LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F16LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F24LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_LXF	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_LXF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_MULAW	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_MULAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE = 0x10000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24DAUD	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24DAUD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S64BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S64BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S64LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S64LE = 0x10800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8_PLANAR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32BE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32LE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U8	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ZORK	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ZORK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCX	libavcodec/avcodec.h	/^    AV_CODEC_ID_PCX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGM	libavcodec/avcodec.h	/^    AV_CODEC_ID_PGM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGMYUV	libavcodec/avcodec.h	/^    AV_CODEC_ID_PGMYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PICTOR	libavcodec/avcodec.h	/^    AV_CODEC_ID_PICTOR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PIXLET	libavcodec/avcodec.h	/^    AV_CODEC_ID_PIXLET,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PJS	libavcodec/avcodec.h	/^    AV_CODEC_ID_PJS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PNG	libavcodec/avcodec.h	/^    AV_CODEC_ID_PNG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PPM	libavcodec/avcodec.h	/^    AV_CODEC_ID_PPM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PROBE	libavcodec/avcodec.h	/^    AV_CODEC_ID_PROBE = 0x19000, \/\/\/< codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it$/;"	e	enum:AVCodecID
AV_CODEC_ID_PRORES	libavcodec/avcodec.h	/^    AV_CODEC_ID_PRORES,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PSD	libavcodec/avcodec.h	/^    AV_CODEC_ID_PSD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PTX	libavcodec/avcodec.h	/^    AV_CODEC_ID_PTX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QCELP	libavcodec/avcodec.h	/^    AV_CODEC_ID_QCELP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDM2	libavcodec/avcodec.h	/^    AV_CODEC_ID_QDM2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDMC	libavcodec/avcodec.h	/^    AV_CODEC_ID_QDMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDRAW	libavcodec/avcodec.h	/^    AV_CODEC_ID_QDRAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_QPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QTRLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_QTRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R10K	libavcodec/avcodec.h	/^    AV_CODEC_ID_R10K,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R210	libavcodec/avcodec.h	/^    AV_CODEC_ID_R210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RALF	libavcodec/avcodec.h	/^    AV_CODEC_ID_RALF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RAWVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_RAWVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_144	libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_144 = 0x13000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_288	libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_288,$/;"	e	enum:AVCodecID
AV_CODEC_ID_REALTEXT	libavcodec/avcodec.h	/^    AV_CODEC_ID_REALTEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RL2	libavcodec/avcodec.h	/^    AV_CODEC_ID_RL2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ	libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ_DPCM = 0x14000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RPZA	libavcodec/avcodec.h	/^    AV_CODEC_ID_RPZA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RSCC	libavcodec/avcodec.h	/^    AV_CODEC_ID_RSCC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV10	libavcodec/avcodec.h	/^    AV_CODEC_ID_RV10,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV20	libavcodec/avcodec.h	/^    AV_CODEC_ID_RV20,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV30	libavcodec/avcodec.h	/^    AV_CODEC_ID_RV30,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV40	libavcodec/avcodec.h	/^    AV_CODEC_ID_RV40,$/;"	e	enum:AVCodecID
AV_CODEC_ID_S302M	libavcodec/avcodec.h	/^    AV_CODEC_ID_S302M,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SAMI	libavcodec/avcodec.h	/^    AV_CODEC_ID_SAMI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SANM	libavcodec/avcodec.h	/^    AV_CODEC_ID_SANM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SCPR	libavcodec/avcodec.h	/^    AV_CODEC_ID_SCPR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SCREENPRESSO	libavcodec/avcodec.h	/^    AV_CODEC_ID_SCREENPRESSO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SCTE_35	libavcodec/avcodec.h	/^    AV_CODEC_ID_SCTE_35, \/\/\/< Contain timestamp estimated through PCR of program stream.$/;"	e	enum:AVCodecID
AV_CODEC_ID_SDX2_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_SDX2_DPCM = 0x14800,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGI	libavcodec/avcodec.h	/^    AV_CODEC_ID_SGI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGIRLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_SGIRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SHEERVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_SHEERVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SHORTEN	libavcodec/avcodec.h	/^    AV_CODEC_ID_SHORTEN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SIPR	libavcodec/avcodec.h	/^    AV_CODEC_ID_SIPR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKAUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMC	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMPTE_KLV	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMPTE_KLV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMV	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMVJPEG	libavcodec/avcodec.h	/^    AV_CODEC_ID_SMVJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SNOW	libavcodec/avcodec.h	/^    AV_CODEC_ID_SNOW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SOL_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_SOL_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC	libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC_LS	libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC_LS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SP5X	libavcodec/avcodec.h	/^    AV_CODEC_ID_SP5X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SPEEDHQ	libavcodec/avcodec.h	/^    AV_CODEC_ID_SPEEDHQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SPEEX	libavcodec/avcodec.h	/^    AV_CODEC_ID_SPEEX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SRGC	libavcodec/avcodec.h	/^    AV_CODEC_ID_SRGC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SRT	libavcodec/avcodec.h	/^    AV_CODEC_ID_SRT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SSA	libavcodec/avcodec.h	/^    AV_CODEC_ID_SSA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_STL	libavcodec/avcodec.h	/^    AV_CODEC_ID_STL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBRIP	libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBRIP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER	libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER1	libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUNRAST	libavcodec/avcodec.h	/^    AV_CODEC_ID_SUNRAST,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVG	libavcodec/avcodec.h	/^    AV_CODEC_ID_SVG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ1	libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ3	libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TAK	libavcodec/avcodec.h	/^    AV_CODEC_ID_TAK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA	libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA_Y216	libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA_Y216,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TDSC	libavcodec/avcodec.h	/^    AV_CODEC_ID_TDSC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TEXT	libavcodec/avcodec.h	/^    AV_CODEC_ID_TEXT,  \/\/\/< raw UTF-8 text$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGQ	libavcodec/avcodec.h	/^    AV_CODEC_ID_TGQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGV	libavcodec/avcodec.h	/^    AV_CODEC_ID_TGV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THEORA	libavcodec/avcodec.h	/^    AV_CODEC_ID_THEORA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THP	libavcodec/avcodec.h	/^    AV_CODEC_ID_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIERTEXSEQVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_TIERTEXSEQVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIFF	libavcodec/avcodec.h	/^    AV_CODEC_ID_TIFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIMED_ID3	libavcodec/avcodec.h	/^    AV_CODEC_ID_TIMED_ID3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TMV	libavcodec/avcodec.h	/^    AV_CODEC_ID_TMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TQI	libavcodec/avcodec.h	/^    AV_CODEC_ID_TQI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEHD	libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION1	libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION2	libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION2RT	libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION2RT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUESPEECH	libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUESPEECH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC	libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC2	libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTA	libavcodec/avcodec.h	/^    AV_CODEC_ID_TTA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTF	libavcodec/avcodec.h	/^    AV_CODEC_ID_TTF = 0x18000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TWINVQ	libavcodec/avcodec.h	/^    AV_CODEC_ID_TWINVQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TXD	libavcodec/avcodec.h	/^    AV_CODEC_ID_TXD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ULTI	libavcodec/avcodec.h	/^    AV_CODEC_ID_ULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_UTVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_UTVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210	libavcodec/avcodec.h	/^    AV_CODEC_ID_V210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210X	libavcodec/avcodec.h	/^    AV_CODEC_ID_V210X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V308	libavcodec/avcodec.h	/^    AV_CODEC_ID_V308,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V408	libavcodec/avcodec.h	/^    AV_CODEC_ID_V408,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V410	libavcodec/avcodec.h	/^    AV_CODEC_ID_V410,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VB	libavcodec/avcodec.h	/^    AV_CODEC_ID_VB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VBLE	libavcodec/avcodec.h	/^    AV_CODEC_ID_VBLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1	libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1IMAGE	libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VCR1	libavcodec/avcodec.h	/^    AV_CODEC_ID_VCR1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIMA	libavcodec/avcodec.h	/^    AV_CODEC_ID_VIMA = AV_CODEC_ID_ADPCM_VIMA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIXL	libavcodec/avcodec.h	/^    AV_CODEC_ID_VIXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDAUDIO	libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDVIDEO	libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMNC	libavcodec/avcodec.h	/^    AV_CODEC_ID_VMNC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VORBIS	libavcodec/avcodec.h	/^    AV_CODEC_ID_VORBIS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VOXWARE	libavcodec/avcodec.h	/^    AV_CODEC_ID_VOXWARE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP3	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP5	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6A	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6A,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6F	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6F,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP7	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP7,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP8	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP9	libavcodec/avcodec.h	/^    AV_CODEC_ID_VP9,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VPLAYER	libavcodec/avcodec.h	/^    AV_CODEC_ID_VPLAYER,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WAVPACK	libavcodec/avcodec.h	/^    AV_CODEC_ID_WAVPACK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBP	libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBVTT	libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBVTT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WESTWOOD_SND1	libavcodec/avcodec.h	/^    AV_CODEC_ID_WESTWOOD_SND1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMALOSSLESS	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMALOSSLESS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAPRO	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAPRO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV2	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAVOICE	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAVOICE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV2	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3IMAGE	libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WNV1	libavcodec/avcodec.h	/^    AV_CODEC_ID_WNV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WRAPPED_AVFRAME	libavcodec/avcodec.h	/^    AV_CODEC_ID_WRAPPED_AVFRAME = 0x21001, \/\/\/< Passthrough codec, AVFrames wrapped in AVPacket$/;"	e	enum:AVCodecID
AV_CODEC_ID_WS_VQA	libavcodec/avcodec.h	/^    AV_CODEC_ID_WS_VQA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_DPCM	libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC3	libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC4	libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBIN	libavcodec/avcodec.h	/^    AV_CODEC_ID_XBIN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBM	libavcodec/avcodec.h	/^    AV_CODEC_ID_XBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XFACE	libavcodec/avcodec.h	/^    AV_CODEC_ID_XFACE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XMA1	libavcodec/avcodec.h	/^    AV_CODEC_ID_XMA1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XMA2	libavcodec/avcodec.h	/^    AV_CODEC_ID_XMA2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XPM	libavcodec/avcodec.h	/^    AV_CODEC_ID_XPM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XSUB	libavcodec/avcodec.h	/^    AV_CODEC_ID_XSUB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XWD	libavcodec/avcodec.h	/^    AV_CODEC_ID_XWD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_Y41P	libavcodec/avcodec.h	/^    AV_CODEC_ID_Y41P = 0x8000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_YLC	libavcodec/avcodec.h	/^    AV_CODEC_ID_YLC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_YOP	libavcodec/avcodec.h	/^    AV_CODEC_ID_YOP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_YUV4	libavcodec/avcodec.h	/^    AV_CODEC_ID_YUV4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZEROCODEC	libavcodec/avcodec.h	/^    AV_CODEC_ID_ZEROCODEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZLIB	libavcodec/avcodec.h	/^    AV_CODEC_ID_ZLIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZMBV	libavcodec/avcodec.h	/^    AV_CODEC_ID_ZMBV,$/;"	e	enum:AVCodecID
AV_CODEC_PROP_BITMAP_SUB	libavcodec/avcodec.h	762;"	d
AV_CODEC_PROP_INTRA_ONLY	libavcodec/avcodec.h	737;"	d
AV_CODEC_PROP_LOSSLESS	libavcodec/avcodec.h	747;"	d
AV_CODEC_PROP_LOSSY	libavcodec/avcodec.h	743;"	d
AV_CODEC_PROP_REORDER	libavcodec/avcodec.h	757;"	d
AV_CODEC_PROP_TEXT_SUB	libavcodec/avcodec.h	767;"	d
AV_COPY	libavutil/intreadwrite.h	583;"	d
AV_COPY128	libavutil/intreadwrite.h	599;"	d
AV_COPY128U	libavutil/intreadwrite.h	570;"	d
AV_COPY16	libavutil/intreadwrite.h	587;"	d
AV_COPY16U	libavutil/intreadwrite.h	558;"	d
AV_COPY32	libavutil/intreadwrite.h	591;"	d
AV_COPY32U	libavutil/intreadwrite.h	562;"	d
AV_COPY64	libavutil/intreadwrite.h	595;"	d
AV_COPY64U	libavutil/intreadwrite.h	566;"	d
AV_COPYU	libavutil/intreadwrite.h	555;"	d
AV_CPU_FLAG_3DNOW	libavutil/cpu.h	34;"	d
AV_CPU_FLAG_3DNOWEXT	libavutil/cpu.h	39;"	d
AV_CPU_FLAG_AESNI	libavutil/cpu.h	48;"	d
AV_CPU_FLAG_ALTIVEC	libavutil/cpu.h	59;"	d
AV_CPU_FLAG_ARMV5TE	libavutil/cpu.h	63;"	d
AV_CPU_FLAG_ARMV6	libavutil/cpu.h	64;"	d
AV_CPU_FLAG_ARMV6T2	libavutil/cpu.h	65;"	d
AV_CPU_FLAG_ARMV8	libavutil/cpu.h	69;"	d
AV_CPU_FLAG_ATOM	libavutil/cpu.h	45;"	d
AV_CPU_FLAG_AVX	libavutil/cpu.h	49;"	d
AV_CPU_FLAG_AVX2	libavutil/cpu.h	54;"	d
AV_CPU_FLAG_AVXSLOW	libavutil/cpu.h	50;"	d
AV_CPU_FLAG_BMI1	libavutil/cpu.h	56;"	d
AV_CPU_FLAG_BMI2	libavutil/cpu.h	57;"	d
AV_CPU_FLAG_CMOV	libavutil/cpu.h	53;"	d
AV_CPU_FLAG_FMA3	libavutil/cpu.h	55;"	d
AV_CPU_FLAG_FMA4	libavutil/cpu.h	52;"	d
AV_CPU_FLAG_FORCE	libavutil/cpu.h	28;"	d
AV_CPU_FLAG_MMX	libavutil/cpu.h	31;"	d
AV_CPU_FLAG_MMX2	libavutil/cpu.h	33;"	d
AV_CPU_FLAG_MMXEXT	libavutil/cpu.h	32;"	d
AV_CPU_FLAG_NEON	libavutil/cpu.h	68;"	d
AV_CPU_FLAG_POWER8	libavutil/cpu.h	61;"	d
AV_CPU_FLAG_SETEND	libavutil/cpu.h	71;"	d
AV_CPU_FLAG_SSE	libavutil/cpu.h	35;"	d
AV_CPU_FLAG_SSE2	libavutil/cpu.h	36;"	d
AV_CPU_FLAG_SSE2SLOW	libavutil/cpu.h	37;"	d
AV_CPU_FLAG_SSE3	libavutil/cpu.h	40;"	d
AV_CPU_FLAG_SSE3SLOW	libavutil/cpu.h	41;"	d
AV_CPU_FLAG_SSE4	libavutil/cpu.h	46;"	d
AV_CPU_FLAG_SSE42	libavutil/cpu.h	47;"	d
AV_CPU_FLAG_SSSE3	libavutil/cpu.h	43;"	d
AV_CPU_FLAG_SSSE3SLOW	libavutil/cpu.h	44;"	d
AV_CPU_FLAG_VFP	libavutil/cpu.h	66;"	d
AV_CPU_FLAG_VFPV3	libavutil/cpu.h	67;"	d
AV_CPU_FLAG_VFP_VM	libavutil/cpu.h	70;"	d
AV_CPU_FLAG_VSX	libavutil/cpu.h	60;"	d
AV_CPU_FLAG_XOP	libavutil/cpu.h	51;"	d
AV_CRC_16_ANSI	libavutil/crc.h	/^    AV_CRC_16_ANSI,$/;"	e	enum:__anon7
AV_CRC_16_ANSI_LE	libavutil/crc.h	/^    AV_CRC_16_ANSI_LE,  \/*< reversed bitorder version of AV_CRC_16_ANSI *\/$/;"	e	enum:__anon7
AV_CRC_16_CCITT	libavutil/crc.h	/^    AV_CRC_16_CCITT,$/;"	e	enum:__anon7
AV_CRC_24_IEEE	libavutil/crc.h	/^    AV_CRC_24_IEEE = 12,$/;"	e	enum:__anon7
AV_CRC_32_IEEE	libavutil/crc.h	/^    AV_CRC_32_IEEE,$/;"	e	enum:__anon7
AV_CRC_32_IEEE_LE	libavutil/crc.h	/^    AV_CRC_32_IEEE_LE,  \/*< reversed bitorder version of AV_CRC_32_IEEE *\/$/;"	e	enum:__anon7
AV_CRC_8_ATM	libavutil/crc.h	/^    AV_CRC_8_ATM,$/;"	e	enum:__anon7
AV_CRC_MAX	libavutil/crc.h	/^    AV_CRC_MAX,         \/*< Not part of public API! Do not use outside libavutil. *\/$/;"	e	enum:__anon7
AV_DEV_TO_APP_BUFFER_OVERFLOW	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_OVERFLOW = MKBETAG('B','O','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_READABLE	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_READABLE = MKBETAG('B','R','D',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_UNDERFLOW	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_UNDERFLOW = MKBETAG('B','U','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_WRITABLE	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_WRITABLE = MKBETAG('B','W','R',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_CREATE_WINDOW_BUFFER	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_CREATE_WINDOW_BUFFER = MKBETAG('B','C','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER = MKBETAG('B','D','E','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER = MKBETAG('B','D','I','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_MUTE_STATE_CHANGED	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_MUTE_STATE_CHANGED = MKBETAG('C','M','U','T'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_NONE	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER = MKBETAG('B','P','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED	libavdevice/avdevice.h	/^    AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED = MKBETAG('C','V','O','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DICT_APPEND	libavutil/dict.h	77;"	d
AV_DICT_DONT_OVERWRITE	libavutil/dict.h	76;"	d
AV_DICT_DONT_STRDUP_KEY	libavutil/dict.h	72;"	d
AV_DICT_DONT_STRDUP_VAL	libavutil/dict.h	74;"	d
AV_DICT_IGNORE_SUFFIX	libavutil/dict.h	70;"	d
AV_DICT_MATCH_CASE	libavutil/dict.h	69;"	d
AV_DICT_MULTIKEY	libavutil/dict.h	79;"	d
AV_DISPOSITION_ATTACHED_PIC	libavformat/avformat.h	850;"	d
AV_DISPOSITION_CAPTIONS	libavformat/avformat.h	862;"	d
AV_DISPOSITION_CLEAN_EFFECTS	libavformat/avformat.h	842;"	d
AV_DISPOSITION_COMMENT	libavformat/avformat.h	830;"	d
AV_DISPOSITION_DEFAULT	libavformat/avformat.h	827;"	d
AV_DISPOSITION_DESCRIPTIONS	libavformat/avformat.h	863;"	d
AV_DISPOSITION_DUB	libavformat/avformat.h	828;"	d
AV_DISPOSITION_FORCED	libavformat/avformat.h	839;"	d
AV_DISPOSITION_HEARING_IMPAIRED	libavformat/avformat.h	840;"	d
AV_DISPOSITION_KARAOKE	libavformat/avformat.h	832;"	d
AV_DISPOSITION_LYRICS	libavformat/avformat.h	831;"	d
AV_DISPOSITION_METADATA	libavformat/avformat.h	864;"	d
AV_DISPOSITION_ORIGINAL	libavformat/avformat.h	829;"	d
AV_DISPOSITION_TIMED_THUMBNAILS	libavformat/avformat.h	855;"	d
AV_DISPOSITION_VISUAL_IMPAIRED	libavformat/avformat.h	841;"	d
AV_DOWNMIX_TYPE_DPLII	libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_DPLII,   \/**< Lt\/Rt 2-channel downmix, Dolby Pro Logic II compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LORO	libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LORO,    \/**< Lo\/Ro 2-channel downmix (Stereo). *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LTRT	libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LTRT,    \/**< Lt\/Rt 2-channel downmix, Dolby Surround compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_NB	libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_NB       \/**< Number of downmix types. Not part of ABI. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_UNKNOWN	libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_UNKNOWN, \/**< Not indicated. *\/$/;"	e	enum:AVDownmixType
AV_DRM_MAX_PLANES	libavutil/hwcontext_drm.h	/^    AV_DRM_MAX_PLANES = 4$/;"	e	enum:__anon10
AV_EF_AGGRESSIVE	libavcodec/avcodec.h	3066;"	d
AV_EF_BITSTREAM	libavcodec/avcodec.h	3059;"	d
AV_EF_BUFFER	libavcodec/avcodec.h	3060;"	d
AV_EF_CAREFUL	libavcodec/avcodec.h	3064;"	d
AV_EF_COMPLIANT	libavcodec/avcodec.h	3065;"	d
AV_EF_CRCCHECK	libavcodec/avcodec.h	3058;"	d
AV_EF_EXPLODE	libavcodec/avcodec.h	3061;"	d
AV_EF_IGNORE_ERR	libavcodec/avcodec.h	3063;"	d
AV_ERROR_MAX_STRING_SIZE	libavutil/error.h	83;"	d
AV_ESCAPE_FLAG_STRICT	libavutil/avstring.h	334;"	d
AV_ESCAPE_FLAG_WHITESPACE	libavutil/avstring.h	327;"	d
AV_ESCAPE_MODE_AUTO	libavutil/avstring.h	/^    AV_ESCAPE_MODE_AUTO,      \/\/\/< Use auto-selected escaping mode.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_BACKSLASH	libavutil/avstring.h	/^    AV_ESCAPE_MODE_BACKSLASH, \/\/\/< Use backslash escaping.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_QUOTE	libavutil/avstring.h	/^    AV_ESCAPE_MODE_QUOTE,     \/\/\/< Use single-quote escaping.$/;"	e	enum:AVEscapeMode
AV_FIELD_BB	libavcodec/avcodec.h	/^    AV_FIELD_BB,          \/\/< Bottom coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_BT	libavcodec/avcodec.h	/^    AV_FIELD_BT,          \/\/< Bottom coded first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_PROGRESSIVE	libavcodec/avcodec.h	/^    AV_FIELD_PROGRESSIVE,$/;"	e	enum:AVFieldOrder
AV_FIELD_TB	libavcodec/avcodec.h	/^    AV_FIELD_TB,          \/\/< Top coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_TT	libavcodec/avcodec.h	/^    AV_FIELD_TT,          \/\/< Top coded_first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_UNKNOWN	libavcodec/avcodec.h	/^    AV_FIELD_UNKNOWN,$/;"	e	enum:AVFieldOrder
AV_FOURCC_MAX_STRING_SIZE	libavutil/avutil.h	346;"	d
AV_FRAME_CROP_UNALIGNED	libavutil/frame.h	/^    AV_FRAME_CROP_UNALIGNED     = 1 << 0,$/;"	e	enum:__anon8
AV_FRAME_DATA_A53_CC	libavutil/frame.h	/^    AV_FRAME_DATA_A53_CC,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_AFD	libavutil/frame.h	/^    AV_FRAME_DATA_AFD,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_AUDIO_SERVICE_TYPE	libavutil/frame.h	/^    AV_FRAME_DATA_AUDIO_SERVICE_TYPE,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_CONTENT_LIGHT_LEVEL	libavutil/frame.h	/^    AV_FRAME_DATA_CONTENT_LIGHT_LEVEL,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DISPLAYMATRIX	libavutil/frame.h	/^    AV_FRAME_DATA_DISPLAYMATRIX,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DOWNMIX_INFO	libavutil/frame.h	/^    AV_FRAME_DATA_DOWNMIX_INFO,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_GOP_TIMECODE	libavutil/frame.h	/^    AV_FRAME_DATA_GOP_TIMECODE,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_ICC_PROFILE	libavutil/frame.h	/^    AV_FRAME_DATA_ICC_PROFILE,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MASTERING_DISPLAY_METADATA	libavutil/frame.h	/^    AV_FRAME_DATA_MASTERING_DISPLAY_METADATA,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MATRIXENCODING	libavutil/frame.h	/^    AV_FRAME_DATA_MATRIXENCODING,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MOTION_VECTORS	libavutil/frame.h	/^    AV_FRAME_DATA_MOTION_VECTORS,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_PANSCAN	libavutil/frame.h	/^    AV_FRAME_DATA_PANSCAN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_REPLAYGAIN	libavutil/frame.h	/^    AV_FRAME_DATA_REPLAYGAIN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_SKIP_SAMPLES	libavutil/frame.h	/^    AV_FRAME_DATA_SKIP_SAMPLES,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_SPHERICAL	libavutil/frame.h	/^    AV_FRAME_DATA_SPHERICAL,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_STEREO3D	libavutil/frame.h	/^    AV_FRAME_DATA_STEREO3D,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_FILENAME_FLAGS_MULTIPLE	libavformat/avformat.h	2807;"	d
AV_FRAME_FLAG_CORRUPT	libavutil/frame.h	427;"	d
AV_FRAME_FLAG_DISCARD	libavutil/frame.h	431;"	d
AV_GCC_VERSION_AT_LEAST	libavutil/attributes.h	30;"	d
AV_GCC_VERSION_AT_LEAST	libavutil/attributes.h	33;"	d
AV_GCC_VERSION_AT_MOST	libavutil/attributes.h	31;"	d
AV_GCC_VERSION_AT_MOST	libavutil/attributes.h	34;"	d
AV_GET_BUFFER_FLAG_REF	libavcodec/avcodec.h	1397;"	d
AV_GLUE	libavutil/macros.h	39;"	d
AV_HASH_MAX_SIZE	libavutil/hash.h	155;"	d
AV_HAVE_BIGENDIAN	libavutil/avconfig.h	4;"	d
AV_HAVE_FAST_UNALIGNED	libavutil/avconfig.h	5;"	d
AV_HMAC_MD5	libavutil/hmac.h	/^    AV_HMAC_MD5,$/;"	e	enum:AVHMACType
AV_HMAC_SHA1	libavutil/hmac.h	/^    AV_HMAC_SHA1,$/;"	e	enum:AVHMACType
AV_HMAC_SHA224	libavutil/hmac.h	/^    AV_HMAC_SHA224,$/;"	e	enum:AVHMACType
AV_HMAC_SHA256	libavutil/hmac.h	/^    AV_HMAC_SHA256,$/;"	e	enum:AVHMACType
AV_HMAC_SHA384	libavutil/hmac.h	/^    AV_HMAC_SHA384 = 12,$/;"	e	enum:AVHMACType
AV_HMAC_SHA512	libavutil/hmac.h	/^    AV_HMAC_SHA512,$/;"	e	enum:AVHMACType
AV_HWACCEL_CODEC_CAP_EXPERIMENTAL	libavcodec/avcodec.h	4010;"	d
AV_HWACCEL_FLAG_ALLOW_HIGH_DEPTH	libavcodec/avcodec.h	4026;"	d
AV_HWACCEL_FLAG_ALLOW_PROFILE_MISMATCH	libavcodec/avcodec.h	4040;"	d
AV_HWACCEL_FLAG_IGNORE_LEVEL	libavcodec/avcodec.h	4020;"	d
AV_HWDEVICE_TYPE_CUDA	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_CUDA,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_D3D11VA	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_D3D11VA,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_DRM	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_DRM,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_DXVA2	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_DXVA2,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_NONE	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_NONE,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_QSV	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_QSV,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_VAAPI	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_VAAPI,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_VDPAU	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_VDPAU,$/;"	e	enum:AVHWDeviceType
AV_HWDEVICE_TYPE_VIDEOTOOLBOX	libavutil/hwcontext.h	/^    AV_HWDEVICE_TYPE_VIDEOTOOLBOX,$/;"	e	enum:AVHWDeviceType
AV_HWFRAME_MAP_DIRECT	libavutil/hwcontext.h	/^    AV_HWFRAME_MAP_DIRECT    = 1 << 3,$/;"	e	enum:__anon9
AV_HWFRAME_MAP_OVERWRITE	libavutil/hwcontext.h	/^    AV_HWFRAME_MAP_OVERWRITE = 1 << 2,$/;"	e	enum:__anon9
AV_HWFRAME_MAP_READ	libavutil/hwcontext.h	/^    AV_HWFRAME_MAP_READ      = 1 << 0,$/;"	e	enum:__anon9
AV_HWFRAME_MAP_WRITE	libavutil/hwcontext.h	/^    AV_HWFRAME_MAP_WRITE     = 1 << 1,$/;"	e	enum:__anon9
AV_HWFRAME_TRANSFER_DIRECTION_FROM	libavutil/hwcontext.h	/^    AV_HWFRAME_TRANSFER_DIRECTION_FROM,$/;"	e	enum:AVHWFrameTransferDirection
AV_HWFRAME_TRANSFER_DIRECTION_TO	libavutil/hwcontext.h	/^    AV_HWFRAME_TRANSFER_DIRECTION_TO,$/;"	e	enum:AVHWFrameTransferDirection
AV_INPUT_BUFFER_MIN_SIZE	libavcodec/avcodec.h	784;"	d
AV_INPUT_BUFFER_PADDING_SIZE	libavcodec/avcodec.h	777;"	d
AV_IS_INPUT_DEVICE	libavutil/log.h	50;"	d
AV_IS_OUTPUT_DEVICE	libavutil/log.h	55;"	d
AV_JOIN	libavutil/macros.h	40;"	d
AV_LE2NE16C	libavutil/bswap.h	105;"	d
AV_LE2NE32C	libavutil/bswap.h	106;"	d
AV_LE2NE64C	libavutil/bswap.h	107;"	d
AV_LE2NEC	libavutil/bswap.h	90;"	d
AV_LE2NEC	libavutil/bswap.h	99;"	d
AV_LOCK_CREATE	libavcodec/avcodec.h	/^  AV_LOCK_CREATE,  \/\/\/< Create a mutex$/;"	e	enum:AVLockOp
AV_LOCK_DESTROY	libavcodec/avcodec.h	/^  AV_LOCK_DESTROY, \/\/\/< Free mutex resources$/;"	e	enum:AVLockOp
AV_LOCK_OBTAIN	libavcodec/avcodec.h	/^  AV_LOCK_OBTAIN,  \/\/\/< Lock the mutex$/;"	e	enum:AVLockOp
AV_LOCK_RELEASE	libavcodec/avcodec.h	/^  AV_LOCK_RELEASE, \/\/\/< Unlock the mutex$/;"	e	enum:AVLockOp
AV_LOG_C	libavutil/log.h	218;"	d
AV_LOG_DEBUG	libavutil/log.h	197;"	d
AV_LOG_ERROR	libavutil/log.h	176;"	d
AV_LOG_FATAL	libavutil/log.h	170;"	d
AV_LOG_INFO	libavutil/log.h	187;"	d
AV_LOG_MAX_OFFSET	libavutil/log.h	204;"	d
AV_LOG_PANIC	libavutil/log.h	163;"	d
AV_LOG_PRINT_LEVEL	libavutil/log.h	367;"	d
AV_LOG_QUIET	libavutil/log.h	158;"	d
AV_LOG_SKIP_REPEATED	libavutil/log.h	359;"	d
AV_LOG_TRACE	libavutil/log.h	202;"	d
AV_LOG_VERBOSE	libavutil/log.h	192;"	d
AV_LOG_WARNING	libavutil/log.h	182;"	d
AV_LZO_ERROR	libavutil/lzo.h	43;"	d
AV_LZO_INPUT_DEPLETED	libavutil/lzo.h	37;"	d
AV_LZO_INPUT_PADDING	libavutil/lzo.h	46;"	d
AV_LZO_INVALID_BACKPTR	libavutil/lzo.h	41;"	d
AV_LZO_OUTPUT_FULL	libavutil/lzo.h	39;"	d
AV_LZO_OUTPUT_PADDING	libavutil/lzo.h	47;"	d
AV_MATRIX_ENCODING_DOLBY	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBY,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYEX	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYEX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYHEADPHONE	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYHEADPHONE,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLII	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLII,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIX	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIZ	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIZ,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NB	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NB$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NONE	libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NONE,$/;"	e	enum:AVMatrixEncoding
AV_MIX_COEFF_TYPE_FLT	libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_FLT,  \/** floating-point                              *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_NB	libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_NB,   \/** Number of coeff types. Not part of ABI      *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_Q15	libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_Q15,  \/** 32-bit 17.15 fixed-point                    *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_Q8	libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_Q8,   \/** 16-bit 8.8 fixed-point                      *\/$/;"	e	enum:AVMixCoeffType
AV_NE	libavutil/common.h	48;"	d
AV_NE	libavutil/common.h	50;"	d
AV_NOPTS_VALUE	libavutil/avutil.h	248;"	d
AV_NOWARN_DEPRECATED	libavutil/attributes.h	108;"	d
AV_NOWARN_DEPRECATED	libavutil/attributes.h	114;"	d
AV_NOWARN_DEPRECATED	libavutil/attributes.h	120;"	d
AV_NUM_DATA_POINTERS	libavutil/frame.h	202;"	d
AV_OPT_ALLOW_NULL	libavutil/opt.h	571;"	d
AV_OPT_FLAG_AUDIO_PARAM	libavutil/opt.h	281;"	d
AV_OPT_FLAG_DECODING_PARAM	libavutil/opt.h	277;"	d
AV_OPT_FLAG_ENCODING_PARAM	libavutil/opt.h	276;"	d
AV_OPT_FLAG_EXPORT	libavutil/opt.h	287;"	d
AV_OPT_FLAG_FILTERING_PARAM	libavutil/opt.h	293;"	d
AV_OPT_FLAG_IMPLICIT_KEY	libavutil/opt.h	/^    AV_OPT_FLAG_IMPLICIT_KEY = 1,$/;"	e	enum:__anon16
AV_OPT_FLAG_METADATA	libavutil/opt.h	279;"	d
AV_OPT_FLAG_READONLY	libavutil/opt.h	292;"	d
AV_OPT_FLAG_SUBTITLE_PARAM	libavutil/opt.h	283;"	d
AV_OPT_FLAG_VIDEO_PARAM	libavutil/opt.h	282;"	d
AV_OPT_MULTI_COMPONENT_RANGE	libavutil/opt.h	578;"	d
AV_OPT_SEARCH_CHILDREN	libavutil/opt.h	557;"	d
AV_OPT_SEARCH_FAKE_OBJ	libavutil/opt.h	565;"	d
AV_OPT_SERIALIZE_OPT_FLAGS_EXACT	libavutil/opt.h	840;"	d
AV_OPT_SERIALIZE_SKIP_DEFAULTS	libavutil/opt.h	839;"	d
AV_OPT_TYPE_BINARY	libavutil/opt.h	/^    AV_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
AV_OPT_TYPE_BOOL	libavutil/opt.h	/^    AV_OPT_TYPE_BOOL           = MKBETAG('B','O','O','L'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CHANNEL_LAYOUT	libavutil/opt.h	/^    AV_OPT_TYPE_CHANNEL_LAYOUT = MKBETAG('C','H','L','A'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_COLOR	libavutil/opt.h	/^    AV_OPT_TYPE_COLOR      = MKBETAG('C','O','L','R'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CONST	libavutil/opt.h	/^    AV_OPT_TYPE_CONST = 128,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DICT	libavutil/opt.h	/^    AV_OPT_TYPE_DICT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DOUBLE	libavutil/opt.h	/^    AV_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DURATION	libavutil/opt.h	/^    AV_OPT_TYPE_DURATION   = MKBETAG('D','U','R',' '),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLAGS	libavutil/opt.h	/^    AV_OPT_TYPE_FLAGS,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLOAT	libavutil/opt.h	/^    AV_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_IMAGE_SIZE	libavutil/opt.h	/^    AV_OPT_TYPE_IMAGE_SIZE = MKBETAG('S','I','Z','E'), \/\/\/< offset must point to two consecutive integers$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT	libavutil/opt.h	/^    AV_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT64	libavutil/opt.h	/^    AV_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_PIXEL_FMT	libavutil/opt.h	/^    AV_OPT_TYPE_PIXEL_FMT  = MKBETAG('P','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_RATIONAL	libavutil/opt.h	/^    AV_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_SAMPLE_FMT	libavutil/opt.h	/^    AV_OPT_TYPE_SAMPLE_FMT = MKBETAG('S','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_STRING	libavutil/opt.h	/^    AV_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_UINT64	libavutil/opt.h	/^    AV_OPT_TYPE_UINT64,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_VIDEO_RATE	libavutil/opt.h	/^    AV_OPT_TYPE_VIDEO_RATE = MKBETAG('V','R','A','T'), \/\/\/< offset must point to AVRational$/;"	e	enum:AVOptionType
AV_PARSER_PTS_NB	libavcodec/avcodec.h	5194;"	d
AV_PICTURE_STRUCTURE_BOTTOM_FIELD	libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_BOTTOM_FIELD, \/\/< coded as bottom field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_FRAME	libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_FRAME,        \/\/< coded as frame$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_TOP_FIELD	libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_TOP_FIELD,    \/\/< coded as top field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_UNKNOWN	libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_UNKNOWN,      \/\/< unknown$/;"	e	enum:AVPictureStructure
AV_PICTURE_TYPE_B	libavutil/avutil.h	/^    AV_PICTURE_TYPE_B,     \/\/\/< Bi-dir predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_BI	libavutil/avutil.h	/^    AV_PICTURE_TYPE_BI,    \/\/\/< BI type$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_I	libavutil/avutil.h	/^    AV_PICTURE_TYPE_I,     \/\/\/< Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_NONE	libavutil/avutil.h	/^    AV_PICTURE_TYPE_NONE = 0, \/\/\/< Undefined$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_P	libavutil/avutil.h	/^    AV_PICTURE_TYPE_P,     \/\/\/< Predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_S	libavutil/avutil.h	/^    AV_PICTURE_TYPE_S,     \/\/\/< S(GMC)-VOP MPEG-4$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SI	libavutil/avutil.h	/^    AV_PICTURE_TYPE_SI,    \/\/\/< Switching Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SP	libavutil/avutil.h	/^    AV_PICTURE_TYPE_SP,    \/\/\/< Switching Predicted$/;"	e	enum:AVPictureType
AV_PIX_FMT_0BGR	libavutil/pixfmt.h	/^    AV_PIX_FMT_0BGR,        \/\/\/< packed BGR 8:8:8, 32bpp, XBGRXBGR...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0BGR32	libavutil/pixfmt.h	358;"	d
AV_PIX_FMT_0RGB	libavutil/pixfmt.h	/^    AV_PIX_FMT_0RGB=0x123+4,\/\/\/< packed RGB 8:8:8, 32bpp, XRGBXRGB...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0RGB32	libavutil/pixfmt.h	357;"	d
AV_PIX_FMT_ABGR	libavutil/pixfmt.h	/^    AV_PIX_FMT_ABGR,      \/\/\/< packed ABGR 8:8:8:8, 32bpp, ABGRABGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_ARGB	libavutil/pixfmt.h	/^    AV_PIX_FMT_ARGB,      \/\/\/< packed ARGB 8:8:8:8, 32bpp, ARGBARGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_AYUV64	libavutil/pixfmt.h	423;"	d
AV_PIX_FMT_AYUV64BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_AYUV64BE,    \/\/\/< packed AYUV 4:4:4,64bpp (1 Cr & Cb sample per 1x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_AYUV64LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_AYUV64LE,    \/\/\/< packed AYUV 4:4:4,64bpp (1 Cr & Cb sample per 1x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16	libavutil/pixfmt.h	403;"	d
AV_PIX_FMT_BAYER_BGGR16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16BE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16LE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR8	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR8,    \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16	libavutil/pixfmt.h	405;"	d
AV_PIX_FMT_BAYER_GBRG16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16BE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16LE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG8	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG8,    \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16	libavutil/pixfmt.h	406;"	d
AV_PIX_FMT_BAYER_GRBG16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16BE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16LE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG8	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG8,    \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16	libavutil/pixfmt.h	404;"	d
AV_PIX_FMT_BAYER_RGGB16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16BE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16LE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB8	libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB8,    \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR0	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR0,        \/\/\/< packed BGR 8:8:8, 32bpp, BGRXBGRX...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR24	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR24,     \/\/\/< packed RGB 8:8:8, 24bpp, BGRBGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR32	libavutil/pixfmt.h	355;"	d
AV_PIX_FMT_BGR32_1	libavutil/pixfmt.h	356;"	d
AV_PIX_FMT_BGR4	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444	libavutil/pixfmt.h	373;"	d
AV_PIX_FMT_BGR444BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444BE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), big-endian,    X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444LE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48	libavutil/pixfmt.h	370;"	d
AV_PIX_FMT_BGR48BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR4_BYTE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555	libavutil/pixfmt.h	372;"	d
AV_PIX_FMT_BGR555BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555BE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), big-endian   , X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555LE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565	libavutil/pixfmt.h	371;"	d
AV_PIX_FMT_BGR565BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565BE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565LE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR8	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA,      \/\/\/< packed BGRA 8:8:8:8, 32bpp, BGRABGRA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64	libavutil/pixfmt.h	374;"	d
AV_PIX_FMT_BGRA64BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64BE,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64LE,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_CUDA	libavutil/pixfmt.h	/^    AV_PIX_FMT_CUDA,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_D3D11	libavutil/pixfmt.h	/^    AV_PIX_FMT_D3D11,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_D3D11VA_VLD	libavutil/pixfmt.h	/^    AV_PIX_FMT_D3D11VA_VLD,  \/\/\/< HW decoding through Direct3D11 via old API, Picture.data[3] contains a ID3D11VideoDecoderOutputView pointer$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_DRM_PRIME	libavutil/pixfmt.h	/^    AV_PIX_FMT_DRM_PRIME,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_DXVA2_VLD	libavutil/pixfmt.h	/^    AV_PIX_FMT_DXVA2_VLD,    \/\/\/< HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_FLAG_ALPHA	libavutil/pixdesc.h	173;"	d
AV_PIX_FMT_FLAG_BAYER	libavutil/pixdesc.h	178;"	d
AV_PIX_FMT_FLAG_BE	libavutil/pixdesc.h	128;"	d
AV_PIX_FMT_FLAG_BITSTREAM	libavutil/pixdesc.h	136;"	d
AV_PIX_FMT_FLAG_FLOAT	libavutil/pixdesc.h	184;"	d
AV_PIX_FMT_FLAG_HWACCEL	libavutil/pixdesc.h	140;"	d
AV_PIX_FMT_FLAG_PAL	libavutil/pixdesc.h	132;"	d
AV_PIX_FMT_FLAG_PLANAR	libavutil/pixdesc.h	144;"	d
AV_PIX_FMT_FLAG_PSEUDOPAL	libavutil/pixdesc.h	158;"	d
AV_PIX_FMT_FLAG_RGB	libavutil/pixdesc.h	148;"	d
AV_PIX_FMT_GBR24P	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBR24P = AV_PIX_FMT_GBRP, \/\/ alias for #AV_PIX_FMT_GBRP$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP,        \/\/\/< planar GBRA 4:4:4:4 32bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP10	libavutil/pixfmt.h	399;"	d
AV_PIX_FMT_GBRAP10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP10BE,  \/\/\/< planar GBR 4:4:4:4 40bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP10LE,  \/\/\/< planar GBR 4:4:4:4 40bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP12	libavutil/pixfmt.h	400;"	d
AV_PIX_FMT_GBRAP12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP12BE,  \/\/\/< planar GBR 4:4:4:4 48bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP12LE,  \/\/\/< planar GBR 4:4:4:4 48bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16	libavutil/pixfmt.h	401;"	d
AV_PIX_FMT_GBRAP16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16BE,    \/\/\/< planar GBRA 4:4:4:4 64bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16LE,    \/\/\/< planar GBRA 4:4:4:4 64bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAPF32	libavutil/pixfmt.h	409;"	d
AV_PIX_FMT_GBRAPF32BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAPF32BE, \/\/\/< IEEE-754 single precision planar GBRA 4:4:4:4, 128bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAPF32LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAPF32LE, \/\/\/< IEEE-754 single precision planar GBRA 4:4:4:4, 128bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP,      \/\/\/< planar GBR 4:4:4 24bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10	libavutil/pixfmt.h	395;"	d
AV_PIX_FMT_GBRP10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10BE,  \/\/\/< planar GBR 4:4:4 30bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10LE,  \/\/\/< planar GBR 4:4:4 30bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12	libavutil/pixfmt.h	396;"	d
AV_PIX_FMT_GBRP12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12BE,    \/\/\/< planar GBR 4:4:4 36bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12LE,    \/\/\/< planar GBR 4:4:4 36bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14	libavutil/pixfmt.h	397;"	d
AV_PIX_FMT_GBRP14BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14BE,    \/\/\/< planar GBR 4:4:4 42bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14LE,    \/\/\/< planar GBR 4:4:4 42bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16	libavutil/pixfmt.h	398;"	d
AV_PIX_FMT_GBRP16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16BE,  \/\/\/< planar GBR 4:4:4 48bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16LE,  \/\/\/< planar GBR 4:4:4 48bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9	libavutil/pixfmt.h	394;"	d
AV_PIX_FMT_GBRP9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9BE,   \/\/\/< planar GBR 4:4:4 27bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9LE,   \/\/\/< planar GBR 4:4:4 27bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRPF32	libavutil/pixfmt.h	408;"	d
AV_PIX_FMT_GBRPF32BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRPF32BE,  \/\/\/< IEEE-754 single precision planar GBR 4:4:4,     96bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRPF32LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRPF32LE,  \/\/\/< IEEE-754 single precision planar GBR 4:4:4,     96bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY10	libavutil/pixfmt.h	361;"	d
AV_PIX_FMT_GRAY10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY10BE,   \/\/\/<        Y        , 10bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY10LE,   \/\/\/<        Y        , 10bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY12	libavutil/pixfmt.h	362;"	d
AV_PIX_FMT_GRAY12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY12BE,   \/\/\/<        Y        , 12bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY12LE,   \/\/\/<        Y        , 12bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16	libavutil/pixfmt.h	363;"	d
AV_PIX_FMT_GRAY16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16BE,  \/\/\/<        Y        , 16bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16LE,  \/\/\/<        Y        , 16bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8,     \/\/\/<        Y        ,  8bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8A	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8A= AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY9	libavutil/pixfmt.h	360;"	d
AV_PIX_FMT_GRAY9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY9BE,   \/\/\/<        Y        , 9bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY9LE,   \/\/\/<        Y        , 9bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MEDIACODEC	libavutil/pixfmt.h	/^    AV_PIX_FMT_MEDIACODEC, \/\/\/< hardware decoding through MediaCodec$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MMAL	libavutil/pixfmt.h	/^    AV_PIX_FMT_MMAL,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOBLACK	libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOBLACK, \/\/\/<        Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOWHITE	libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOWHITE, \/\/\/<        Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NB	libavutil/pixfmt.h	/^    AV_PIX_FMT_NB         \/\/\/< number of pixel formats, DO NOT USE THIS if you want to link with shared libav* because the number of formats might differ between versions$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NE	libavutil/pixfmt.h	348;"	d
AV_PIX_FMT_NE	libavutil/pixfmt.h	350;"	d
AV_PIX_FMT_NONE	libavutil/pixfmt.h	/^    AV_PIX_FMT_NONE = -1,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV12	libavutil/pixfmt.h	/^    AV_PIX_FMT_NV12,      \/\/\/< planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved (first byte U and the following byte V)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV16	libavutil/pixfmt.h	/^    AV_PIX_FMT_NV16,         \/\/\/< interleaved chroma YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20	libavutil/pixfmt.h	422;"	d
AV_PIX_FMT_NV20BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20BE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20LE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV21	libavutil/pixfmt.h	/^    AV_PIX_FMT_NV21,      \/\/\/< as above, but U and V bytes are swapped$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_P010	libavutil/pixfmt.h	424;"	d
AV_PIX_FMT_P010BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_P010BE, \/\/\/< like NV12, with 10bpp per component, data in the high bits, zeros in the low bits, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_P010LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_P010LE, \/\/\/< like NV12, with 10bpp per component, data in the high bits, zeros in the low bits, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_P016	libavutil/pixfmt.h	425;"	d
AV_PIX_FMT_P016BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_P016BE, \/\/\/< like NV12, with 16bpp per component, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_P016LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_P016LE, \/\/\/< like NV12, with 16bpp per component, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_PAL8	libavutil/pixfmt.h	/^    AV_PIX_FMT_PAL8,      \/\/\/< 8 bits with AV_PIX_FMT_RGB32 palette$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_QSV	libavutil/pixfmt.h	/^    AV_PIX_FMT_QSV,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB0	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB0,        \/\/\/< packed RGB 8:8:8, 32bpp, RGBXRGBX...   X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB24	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB24,     \/\/\/< packed RGB 8:8:8, 24bpp, RGBRGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB32	libavutil/pixfmt.h	353;"	d
AV_PIX_FMT_RGB32_1	libavutil/pixfmt.h	354;"	d
AV_PIX_FMT_RGB4	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444	libavutil/pixfmt.h	368;"	d
AV_PIX_FMT_RGB444BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444BE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), big-endian,    X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444LE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48	libavutil/pixfmt.h	365;"	d
AV_PIX_FMT_RGB48BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB4_BYTE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555	libavutil/pixfmt.h	367;"	d
AV_PIX_FMT_RGB555BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555BE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), big-endian   , X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555LE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), little-endian, X=unused\/undefined$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565	libavutil/pixfmt.h	366;"	d
AV_PIX_FMT_RGB565BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565BE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565LE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB8	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA,      \/\/\/< packed RGBA 8:8:8:8, 32bpp, RGBARGBA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64	libavutil/pixfmt.h	369;"	d
AV_PIX_FMT_RGBA64BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64LE,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYVY422	libavutil/pixfmt.h	/^    AV_PIX_FMT_UYVY422,   \/\/\/< packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYYVYY411	libavutil/pixfmt.h	/^    AV_PIX_FMT_UYYVYY411, \/\/\/< packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI	libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI = AV_PIX_FMT_VAAPI_VLD,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_IDCT	libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_IDCT, \/\/\/< HW acceleration through VA API at IDCT entry-point, Picture.data[3] contains a vaapi_render_state struct which contains fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_MOCO	libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_MOCO, \/\/\/< HW acceleration through VA API at motion compensation entry-point, Picture.data[3] contains a vaapi_render_state struct which contains macroblocks as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_VLD	libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_VLD,  \/\/\/< HW decoding through VA API, Picture.data[3] contains a VASurfaceID$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA,          \/\/\/< HW acceleration through VDA, data[3] contains a CVPixelBufferRef$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA_VLD	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA_VLD,    \/\/\/< hardware decoding through VDA$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU,     \/\/\/< HW acceleration through VDPAU, Picture.data[3] contains a VdpVideoSurface$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_H264	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_H264,\/\/\/< H.264 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG1	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG1,\/\/\/< MPEG-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG2	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG2,\/\/\/< MPEG-2 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG4	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG4,  \/\/\/< MPEG-4 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_VC1	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_VC1, \/\/\/< VC-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_WMV3	libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_WMV3,\/\/\/< WMV3 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VIDEOTOOLBOX	libavutil/pixfmt.h	/^    AV_PIX_FMT_VIDEOTOOLBOX, \/\/\/< hardware decoding through Videotoolbox$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC = AV_PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC_MPEG2_IDCT	libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC_MPEG2_MC	libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_MC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12	libavutil/pixfmt.h	421;"	d
AV_PIX_FMT_XYZ12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12BE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as big-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12LE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as little-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_Y400A	libavutil/pixfmt.h	/^    AV_PIX_FMT_Y400A = AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA16	libavutil/pixfmt.h	364;"	d
AV_PIX_FMT_YA16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16BE,       \/\/\/< 16 bits gray, 16 bits alpha (big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16LE,       \/\/\/< 16 bits gray, 16 bits alpha (little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA8	libavutil/pixfmt.h	/^    AV_PIX_FMT_YA8,       \/\/\/< 8 bits gray, 8 bits alpha$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV410P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV410P,   \/\/\/< planar YUV 4:1:0,  9bpp, (1 Cr & Cb sample per 4x4 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV411P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV411P,   \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P,   \/\/\/< planar YUV 4:2:0, 12bpp, (1 Cr & Cb sample per 2x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10	libavutil/pixfmt.h	379;"	d
AV_PIX_FMT_YUV420P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10BE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10LE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12	libavutil/pixfmt.h	383;"	d
AV_PIX_FMT_YUV420P12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12BE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12LE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14	libavutil/pixfmt.h	387;"	d
AV_PIX_FMT_YUV420P14BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14BE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14LE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16	libavutil/pixfmt.h	390;"	d
AV_PIX_FMT_YUV420P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16BE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16LE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9	libavutil/pixfmt.h	376;"	d
AV_PIX_FMT_YUV420P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9BE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9LE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P,   \/\/\/< planar YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10	libavutil/pixfmt.h	380;"	d
AV_PIX_FMT_YUV422P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10BE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10LE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12	libavutil/pixfmt.h	384;"	d
AV_PIX_FMT_YUV422P12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12BE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12LE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14	libavutil/pixfmt.h	388;"	d
AV_PIX_FMT_YUV422P14BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14BE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14LE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16	libavutil/pixfmt.h	391;"	d
AV_PIX_FMT_YUV422P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16BE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16LE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9	libavutil/pixfmt.h	377;"	d
AV_PIX_FMT_YUV422P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9BE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9LE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P,   \/\/\/< planar YUV 4:4:0 (1 Cr & Cb sample per 1x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P10	libavutil/pixfmt.h	381;"	d
AV_PIX_FMT_YUV440P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P10BE, \/\/\/< planar YUV 4:4:0,20bpp, (1 Cr & Cb sample per 1x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P10LE, \/\/\/< planar YUV 4:4:0,20bpp, (1 Cr & Cb sample per 1x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P12	libavutil/pixfmt.h	385;"	d
AV_PIX_FMT_YUV440P12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P12BE, \/\/\/< planar YUV 4:4:0,24bpp, (1 Cr & Cb sample per 1x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P12LE, \/\/\/< planar YUV 4:4:0,24bpp, (1 Cr & Cb sample per 1x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P,   \/\/\/< planar YUV 4:4:4, 24bpp, (1 Cr & Cb sample per 1x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10	libavutil/pixfmt.h	382;"	d
AV_PIX_FMT_YUV444P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10BE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10LE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12	libavutil/pixfmt.h	386;"	d
AV_PIX_FMT_YUV444P12BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12BE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12LE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14	libavutil/pixfmt.h	389;"	d
AV_PIX_FMT_YUV444P14BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14BE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14LE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16	libavutil/pixfmt.h	392;"	d
AV_PIX_FMT_YUV444P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16BE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16LE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9	libavutil/pixfmt.h	378;"	d
AV_PIX_FMT_YUV444P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9BE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9LE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P,  \/\/\/< planar YUV 4:2:0, 20bpp, (1 Cr & Cb sample per 2x2 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10	libavutil/pixfmt.h	414;"	d
AV_PIX_FMT_YUVA420P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10BE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10LE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16	libavutil/pixfmt.h	417;"	d
AV_PIX_FMT_YUVA420P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16BE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16LE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9	libavutil/pixfmt.h	411;"	d
AV_PIX_FMT_YUVA420P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9BE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9LE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P,  \/\/\/< planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P10	libavutil/pixfmt.h	415;"	d
AV_PIX_FMT_YUVA422P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10BE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10LE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16	libavutil/pixfmt.h	418;"	d
AV_PIX_FMT_YUVA422P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16BE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16LE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9	libavutil/pixfmt.h	412;"	d
AV_PIX_FMT_YUVA422P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9BE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9LE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P,  \/\/\/< planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P10	libavutil/pixfmt.h	416;"	d
AV_PIX_FMT_YUVA444P10BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10BE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P10LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10LE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16	libavutil/pixfmt.h	419;"	d
AV_PIX_FMT_YUVA444P16BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16BE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16LE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9	libavutil/pixfmt.h	413;"	d
AV_PIX_FMT_YUVA444P9BE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9BE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9LE	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9LE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ411P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ411P,    \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples) full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV411P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ420P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ420P,  \/\/\/< planar YUV 4:2:0, 12bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV420P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ422P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ422P,  \/\/\/< planar YUV 4:2:2, 16bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV422P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ440P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ440P,  \/\/\/< planar YUV 4:4:0 full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV440P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ444P	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ444P,  \/\/\/< planar YUV 4:4:4, 24bpp, full scale (JPEG), deprecated in favor of AV_PIX_FMT_YUV444P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUYV422	libavutil/pixfmt.h	/^    AV_PIX_FMT_YUYV422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YVYU422	libavutil/pixfmt.h	/^    AV_PIX_FMT_YVYU422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cr Y1 Cb$/;"	e	enum:AVPixelFormat
AV_PKT_DATA_A53_CC	libavcodec/avcodec.h	/^    AV_PKT_DATA_A53_CC,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_AUDIO_SERVICE_TYPE	libavcodec/avcodec.h	/^    AV_PKT_DATA_AUDIO_SERVICE_TYPE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_CONTENT_LIGHT_LEVEL	libavcodec/avcodec.h	/^    AV_PKT_DATA_CONTENT_LIGHT_LEVEL,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_CPB_PROPERTIES	libavcodec/avcodec.h	/^    AV_PKT_DATA_CPB_PROPERTIES,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_DISPLAYMATRIX	libavcodec/avcodec.h	/^    AV_PKT_DATA_DISPLAYMATRIX,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_FALLBACK_TRACK	libavcodec/avcodec.h	/^    AV_PKT_DATA_FALLBACK_TRACK,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_H263_MB_INFO	libavcodec/avcodec.h	/^    AV_PKT_DATA_H263_MB_INFO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_JP_DUALMONO	libavcodec/avcodec.h	/^    AV_PKT_DATA_JP_DUALMONO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_MASTERING_DISPLAY_METADATA	libavcodec/avcodec.h	/^    AV_PKT_DATA_MASTERING_DISPLAY_METADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL	libavcodec/avcodec.h	/^    AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_METADATA_UPDATE	libavcodec/avcodec.h	/^    AV_PKT_DATA_METADATA_UPDATE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_MPEGTS_STREAM_ID	libavcodec/avcodec.h	/^    AV_PKT_DATA_MPEGTS_STREAM_ID,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_NB	libavcodec/avcodec.h	/^    AV_PKT_DATA_NB$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_NEW_EXTRADATA	libavcodec/avcodec.h	/^    AV_PKT_DATA_NEW_EXTRADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PALETTE	libavcodec/avcodec.h	/^    AV_PKT_DATA_PALETTE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PARAM_CHANGE	libavcodec/avcodec.h	/^    AV_PKT_DATA_PARAM_CHANGE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_QUALITY_FACTOR	libavcodec/avcodec.h	1620;"	d
AV_PKT_DATA_QUALITY_STATS	libavcodec/avcodec.h	/^    AV_PKT_DATA_QUALITY_STATS,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_REPLAYGAIN	libavcodec/avcodec.h	/^    AV_PKT_DATA_REPLAYGAIN,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SKIP_SAMPLES	libavcodec/avcodec.h	/^    AV_PKT_DATA_SKIP_SAMPLES=70,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SPHERICAL	libavcodec/avcodec.h	/^    AV_PKT_DATA_SPHERICAL,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STEREO3D	libavcodec/avcodec.h	/^    AV_PKT_DATA_STEREO3D,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STRINGS_METADATA	libavcodec/avcodec.h	/^    AV_PKT_DATA_STRINGS_METADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SUBTITLE_POSITION	libavcodec/avcodec.h	/^    AV_PKT_DATA_SUBTITLE_POSITION,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_IDENTIFIER	libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_IDENTIFIER,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_SETTINGS	libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_SETTINGS,$/;"	e	enum:AVPacketSideDataType
AV_PKT_FLAG_CORRUPT	libavcodec/avcodec.h	1712;"	d
AV_PKT_FLAG_DISCARD	libavcodec/avcodec.h	1718;"	d
AV_PKT_FLAG_KEY	libavcodec/avcodec.h	1711;"	d
AV_PKT_FLAG_TRUSTED	libavcodec/avcodec.h	1725;"	d
AV_PRAGMA	libavutil/macros.h	46;"	d
AV_PROGRAM_RUNNING	libavformat/avformat.h	1259;"	d
AV_PTS_WRAP_ADD_OFFSET	libavformat/avformat.h	870;"	d
AV_PTS_WRAP_IGNORE	libavformat/avformat.h	869;"	d
AV_PTS_WRAP_SUB_OFFSET	libavformat/avformat.h	871;"	d
AV_RB	libavutil/intreadwrite.h	389;"	d
AV_RB	libavutil/intreadwrite.h	394;"	d
AV_RB16	libavutil/intreadwrite.h	245;"	d
AV_RB16	libavutil/intreadwrite.h	407;"	d
AV_RB16	libavutil/intreadwrite.h	90;"	d
AV_RB24	libavutil/intreadwrite.h	102;"	d
AV_RB24	libavutil/intreadwrite.h	449;"	d
AV_RB32	libavutil/intreadwrite.h	114;"	d
AV_RB32	libavutil/intreadwrite.h	271;"	d
AV_RB32	libavutil/intreadwrite.h	421;"	d
AV_RB48	libavutil/intreadwrite.h	126;"	d
AV_RB48	libavutil/intreadwrite.h	477;"	d
AV_RB64	libavutil/intreadwrite.h	138;"	d
AV_RB64	libavutil/intreadwrite.h	305;"	d
AV_RB64	libavutil/intreadwrite.h	435;"	d
AV_RB8	libavutil/intreadwrite.h	400;"	d
AV_RESAMPLE_DITHER_NB	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_NB,              \/**< Number of dither types. Not part of ABI. *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_NONE	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_NONE,            \/**< Do not use dithering *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_RECTANGULAR	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_RECTANGULAR,     \/**< Rectangular Dither *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR,      \/**< Triangular Dither*\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR_HP	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR_HP,   \/**< Triangular Dither with High Pass *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR_NS	libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR_NS,   \/**< Triangular Dither with Noise Shaping *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL	libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL,   \/**< Blackman Nuttall Windowed Sinc *\/$/;"	e	enum:AVResampleFilterType
AV_RESAMPLE_FILTER_TYPE_CUBIC	libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_CUBIC,              \/**< Cubic *\/$/;"	e	enum:AVResampleFilterType
AV_RESAMPLE_FILTER_TYPE_KAISER	libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_KAISER,             \/**< Kaiser Windowed Sinc *\/$/;"	e	enum:AVResampleFilterType
AV_RL	libavutil/intreadwrite.h	391;"	d
AV_RL	libavutil/intreadwrite.h	396;"	d
AV_RL16	libavutil/intreadwrite.h	152;"	d
AV_RL16	libavutil/intreadwrite.h	258;"	d
AV_RL16	libavutil/intreadwrite.h	414;"	d
AV_RL24	libavutil/intreadwrite.h	164;"	d
AV_RL24	libavutil/intreadwrite.h	463;"	d
AV_RL32	libavutil/intreadwrite.h	176;"	d
AV_RL32	libavutil/intreadwrite.h	288;"	d
AV_RL32	libavutil/intreadwrite.h	428;"	d
AV_RL48	libavutil/intreadwrite.h	188;"	d
AV_RL48	libavutil/intreadwrite.h	498;"	d
AV_RL64	libavutil/intreadwrite.h	200;"	d
AV_RL64	libavutil/intreadwrite.h	330;"	d
AV_RL64	libavutil/intreadwrite.h	442;"	d
AV_RL8	libavutil/intreadwrite.h	403;"	d
AV_RN	libavutil/intreadwrite.h	224;"	d
AV_RN	libavutil/intreadwrite.h	229;"	d
AV_RN	libavutil/intreadwrite.h	234;"	d
AV_RN	libavutil/intreadwrite.h	239;"	d
AV_RN	libavutil/intreadwrite.h	355;"	d
AV_RN	libavutil/intreadwrite.h	358;"	d
AV_RN16	libavutil/intreadwrite.h	154;"	d
AV_RN16	libavutil/intreadwrite.h	365;"	d
AV_RN16	libavutil/intreadwrite.h	92;"	d
AV_RN16A	libavutil/intreadwrite.h	527;"	d
AV_RN24	libavutil/intreadwrite.h	104;"	d
AV_RN24	libavutil/intreadwrite.h	166;"	d
AV_RN32	libavutil/intreadwrite.h	116;"	d
AV_RN32	libavutil/intreadwrite.h	178;"	d
AV_RN32	libavutil/intreadwrite.h	369;"	d
AV_RN32A	libavutil/intreadwrite.h	531;"	d
AV_RN48	libavutil/intreadwrite.h	128;"	d
AV_RN48	libavutil/intreadwrite.h	190;"	d
AV_RN64	libavutil/intreadwrite.h	140;"	d
AV_RN64	libavutil/intreadwrite.h	202;"	d
AV_RN64	libavutil/intreadwrite.h	373;"	d
AV_RN64A	libavutil/intreadwrite.h	535;"	d
AV_RNA	libavutil/intreadwrite.h	523;"	d
AV_ROUND_DOWN	libavutil/mathematics.h	/^    AV_ROUND_DOWN     = 2, \/\/\/< Round toward -infinity.$/;"	e	enum:AVRounding
AV_ROUND_INF	libavutil/mathematics.h	/^    AV_ROUND_INF      = 1, \/\/\/< Round away from zero.$/;"	e	enum:AVRounding
AV_ROUND_NEAR_INF	libavutil/mathematics.h	/^    AV_ROUND_NEAR_INF = 5, \/\/\/< Round to nearest and halfway cases away from zero.$/;"	e	enum:AVRounding
AV_ROUND_PASS_MINMAX	libavutil/mathematics.h	/^    AV_ROUND_PASS_MINMAX = 8192,$/;"	e	enum:AVRounding
AV_ROUND_UP	libavutil/mathematics.h	/^    AV_ROUND_UP       = 3, \/\/\/< Round toward +infinity.$/;"	e	enum:AVRounding
AV_ROUND_ZERO	libavutil/mathematics.h	/^    AV_ROUND_ZERO     = 0, \/\/\/< Round toward zero.$/;"	e	enum:AVRounding
AV_SAMPLE_FMT_DBL	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBL,         \/\/\/< double$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_DBLP	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBLP,        \/\/\/< double, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLT	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLT,         \/\/\/< float$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLTP	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLTP,        \/\/\/< float, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NB	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NB           \/\/\/< Number of sample formats. DO NOT USE if linking dynamically$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NONE	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NONE = -1,$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16,         \/\/\/< signed 16 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16P	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16P,        \/\/\/< signed 16 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32,         \/\/\/< signed 32 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32P	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32P,        \/\/\/< signed 32 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S64	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S64,         \/\/\/< signed 64 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S64P	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S64P,        \/\/\/< signed 64 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8,          \/\/\/< unsigned 8 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8P	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8P,         \/\/\/< unsigned 8 bits, planar$/;"	e	enum:AVSampleFormat
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT	libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT  = 0x0001,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT	libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT = 0x0002,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS	libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS     = 0x0008,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE	libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE    = 0x0004,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SPHERICAL_CUBEMAP	libavutil/spherical.h	/^    AV_SPHERICAL_CUBEMAP,$/;"	e	enum:AVSphericalProjection
AV_SPHERICAL_EQUIRECTANGULAR	libavutil/spherical.h	/^    AV_SPHERICAL_EQUIRECTANGULAR,$/;"	e	enum:AVSphericalProjection
AV_SPHERICAL_EQUIRECTANGULAR_TILE	libavutil/spherical.h	/^    AV_SPHERICAL_EQUIRECTANGULAR_TILE,$/;"	e	enum:AVSphericalProjection
AV_STEREO3D_2D	libavutil/stereo3d.h	/^    AV_STEREO3D_2D,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_CHECKERBOARD	libavutil/stereo3d.h	/^    AV_STEREO3D_CHECKERBOARD,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_COLUMNS	libavutil/stereo3d.h	/^    AV_STEREO3D_COLUMNS,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_FLAG_INVERT	libavutil/stereo3d.h	148;"	d
AV_STEREO3D_FRAMESEQUENCE	libavutil/stereo3d.h	/^    AV_STEREO3D_FRAMESEQUENCE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_LINES	libavutil/stereo3d.h	/^    AV_STEREO3D_LINES,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE	libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE_QUINCUNX	libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE_QUINCUNX,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_TOPBOTTOM	libavutil/stereo3d.h	/^    AV_STEREO3D_TOPBOTTOM,$/;"	e	enum:AVStereo3DType
AV_STRINGIFY	libavutil/macros.h	36;"	d
AV_SUBTITLE_FLAG_FORCED	libavcodec/avcodec.h	4091;"	d
AV_SWAP	libavutil/intreadwrite.h	606;"	d
AV_SWAP64	libavutil/intreadwrite.h	609;"	d
AV_THREAD_MESSAGE_NONBLOCK	libavutil/threadmessage.h	/^    AV_THREAD_MESSAGE_NONBLOCK = 1,$/;"	e	enum:AVThreadMessageFlags
AV_TIMECODE_FLAG_24HOURSMAX	libavutil/timecode.h	/^    AV_TIMECODE_FLAG_24HOURSMAX     = 1<<1, \/\/\/< timecode wraps after 24 hours$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_ALLOWNEGATIVE	libavutil/timecode.h	/^    AV_TIMECODE_FLAG_ALLOWNEGATIVE  = 1<<2, \/\/\/< negative time values are allowed$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_DROPFRAME	libavutil/timecode.h	/^    AV_TIMECODE_FLAG_DROPFRAME      = 1<<0, \/\/\/< timecode is drop frame$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_STR_SIZE	libavutil/timecode.h	33;"	d
AV_TIME_BASE	libavutil/avutil.h	254;"	d
AV_TIME_BASE_Q	libavutil/avutil.h	260;"	d
AV_TOSTRING	libavutil/macros.h	37;"	d
AV_TS_MAX_STRING_SIZE	libavutil/timestamp.h	33;"	d
AV_UTF8_FLAG_ACCEPT_ALL	libavutil/avstring.h	361;"	d
AV_UTF8_FLAG_ACCEPT_INVALID_BIG_CODES	libavutil/avstring.h	356;"	d
AV_UTF8_FLAG_ACCEPT_NON_CHARACTERS	libavutil/avstring.h	357;"	d
AV_UTF8_FLAG_ACCEPT_SURROGATES	libavutil/avstring.h	358;"	d
AV_UTF8_FLAG_EXCLUDE_XML_INVALID_CONTROL_CODES	libavutil/avstring.h	359;"	d
AV_VAAPI_DRIVER_QUIRK_ATTRIB_MEMTYPE	libavutil/hwcontext_vaapi.h	/^    AV_VAAPI_DRIVER_QUIRK_ATTRIB_MEMTYPE = (1 << 2),$/;"	e	enum:__anon6
AV_VAAPI_DRIVER_QUIRK_RENDER_PARAM_BUFFERS	libavutil/hwcontext_vaapi.h	/^    AV_VAAPI_DRIVER_QUIRK_RENDER_PARAM_BUFFERS = (1 << 1),$/;"	e	enum:__anon6
AV_VAAPI_DRIVER_QUIRK_SURFACE_ATTRIBUTES	libavutil/hwcontext_vaapi.h	/^    AV_VAAPI_DRIVER_QUIRK_SURFACE_ATTRIBUTES = (1 << 3),$/;"	e	enum:__anon6
AV_VAAPI_DRIVER_QUIRK_USER_SET	libavutil/hwcontext_vaapi.h	/^    AV_VAAPI_DRIVER_QUIRK_USER_SET = (1 << 0),$/;"	e	enum:__anon6
AV_VERSION	libavutil/version.h	58;"	d
AV_VERSION_DOT	libavutil/version.h	57;"	d
AV_VERSION_INT	libavutil/version.h	56;"	d
AV_VERSION_MAJOR	libavutil/version.h	64;"	d
AV_VERSION_MICRO	libavutil/version.h	66;"	d
AV_VERSION_MINOR	libavutil/version.h	65;"	d
AV_WB	libavutil/intreadwrite.h	390;"	d
AV_WB	libavutil/intreadwrite.h	395;"	d
AV_WB16	libavutil/intreadwrite.h	250;"	d
AV_WB16	libavutil/intreadwrite.h	410;"	d
AV_WB16	libavutil/intreadwrite.h	96;"	d
AV_WB24	libavutil/intreadwrite.h	108;"	d
AV_WB24	libavutil/intreadwrite.h	455;"	d
AV_WB32	libavutil/intreadwrite.h	120;"	d
AV_WB32	libavutil/intreadwrite.h	278;"	d
AV_WB32	libavutil/intreadwrite.h	424;"	d
AV_WB48	libavutil/intreadwrite.h	132;"	d
AV_WB48	libavutil/intreadwrite.h	486;"	d
AV_WB64	libavutil/intreadwrite.h	144;"	d
AV_WB64	libavutil/intreadwrite.h	316;"	d
AV_WB64	libavutil/intreadwrite.h	438;"	d
AV_WB8	libavutil/intreadwrite.h	401;"	d
AV_WL	libavutil/intreadwrite.h	392;"	d
AV_WL	libavutil/intreadwrite.h	397;"	d
AV_WL16	libavutil/intreadwrite.h	158;"	d
AV_WL16	libavutil/intreadwrite.h	263;"	d
AV_WL16	libavutil/intreadwrite.h	417;"	d
AV_WL24	libavutil/intreadwrite.h	170;"	d
AV_WL24	libavutil/intreadwrite.h	469;"	d
AV_WL32	libavutil/intreadwrite.h	182;"	d
AV_WL32	libavutil/intreadwrite.h	295;"	d
AV_WL32	libavutil/intreadwrite.h	431;"	d
AV_WL48	libavutil/intreadwrite.h	194;"	d
AV_WL48	libavutil/intreadwrite.h	507;"	d
AV_WL64	libavutil/intreadwrite.h	206;"	d
AV_WL64	libavutil/intreadwrite.h	341;"	d
AV_WL64	libavutil/intreadwrite.h	445;"	d
AV_WL8	libavutil/intreadwrite.h	404;"	d
AV_WN	libavutil/intreadwrite.h	225;"	d
AV_WN	libavutil/intreadwrite.h	230;"	d
AV_WN	libavutil/intreadwrite.h	235;"	d
AV_WN	libavutil/intreadwrite.h	240;"	d
AV_WN	libavutil/intreadwrite.h	356;"	d
AV_WN	libavutil/intreadwrite.h	359;"	d
AV_WN16	libavutil/intreadwrite.h	160;"	d
AV_WN16	libavutil/intreadwrite.h	377;"	d
AV_WN16	libavutil/intreadwrite.h	98;"	d
AV_WN16A	libavutil/intreadwrite.h	539;"	d
AV_WN24	libavutil/intreadwrite.h	110;"	d
AV_WN24	libavutil/intreadwrite.h	172;"	d
AV_WN32	libavutil/intreadwrite.h	122;"	d
AV_WN32	libavutil/intreadwrite.h	184;"	d
AV_WN32	libavutil/intreadwrite.h	381;"	d
AV_WN32A	libavutil/intreadwrite.h	543;"	d
AV_WN48	libavutil/intreadwrite.h	134;"	d
AV_WN48	libavutil/intreadwrite.h	196;"	d
AV_WN64	libavutil/intreadwrite.h	146;"	d
AV_WN64	libavutil/intreadwrite.h	208;"	d
AV_WN64	libavutil/intreadwrite.h	385;"	d
AV_WN64A	libavutil/intreadwrite.h	547;"	d
AV_WNA	libavutil/intreadwrite.h	524;"	d
AV_XVMC_ID	libavcodec/xvmc.h	43;"	d
AV_ZERO	libavutil/intreadwrite.h	612;"	d
AV_ZERO128	libavutil/intreadwrite.h	627;"	d
AV_ZERO16	libavutil/intreadwrite.h	615;"	d
AV_ZERO32	libavutil/intreadwrite.h	619;"	d
AV_ZERO64	libavutil/intreadwrite.h	623;"	d
BindFlags	libavutil/hwcontext_d3d11va.h	/^    UINT BindFlags;$/;"	m	struct:AVD3D11VAFramesContext
CODEC_CAP_AUTO_THREADS	libavcodec/avcodec.h	1273;"	d
CODEC_CAP_CHANNEL_CONF	libavcodec/avcodec.h	1251;"	d
CODEC_CAP_DELAY	libavcodec/avcodec.h	1219;"	d
CODEC_CAP_DR1	libavcodec/avcodec.h	1184;"	d
CODEC_CAP_DRAW_HORIZ_BAND	libavcodec/avcodec.h	1178;"	d
CODEC_CAP_EXPERIMENTAL	libavcodec/avcodec.h	1247;"	d
CODEC_CAP_FRAME_THREADS	libavcodec/avcodec.h	1261;"	d
CODEC_CAP_HWACCEL	libavcodec/avcodec.h	1194;"	d
CODEC_CAP_HWACCEL_VDPAU	libavcodec/avcodec.h	1229;"	d
CODEC_CAP_INTRA_ONLY	libavcodec/avcodec.h	1281;"	d
CODEC_CAP_LOSSLESS	libavcodec/avcodec.h	1285;"	d
CODEC_CAP_NEG_LINESIZES	libavcodec/avcodec.h	1256;"	d
CODEC_CAP_PARAM_CHANGE	libavcodec/avcodec.h	1269;"	d
CODEC_CAP_SLICE_THREADS	libavcodec/avcodec.h	1265;"	d
CODEC_CAP_SMALL_LAST_FRAME	libavcodec/avcodec.h	1224;"	d
CODEC_CAP_SUBFRAMES	libavcodec/avcodec.h	1242;"	d
CODEC_CAP_TRUNCATED	libavcodec/avcodec.h	1185;"	d
CODEC_CAP_VARIABLE_FRAME_SIZE	libavcodec/avcodec.h	1277;"	d
CODEC_FLAG2_CHUNKS	libavcodec/avcodec.h	1166;"	d
CODEC_FLAG2_DROP_FRAME_TIMECODE	libavcodec/avcodec.h	1163;"	d
CODEC_FLAG2_EXPORT_MVS	libavcodec/avcodec.h	1168;"	d
CODEC_FLAG2_FAST	libavcodec/avcodec.h	1160;"	d
CODEC_FLAG2_IGNORE_CROP	libavcodec/avcodec.h	1164;"	d
CODEC_FLAG2_LOCAL_HEADER	libavcodec/avcodec.h	1162;"	d
CODEC_FLAG2_NO_OUTPUT	libavcodec/avcodec.h	1161;"	d
CODEC_FLAG2_SHOW_ALL	libavcodec/avcodec.h	1167;"	d
CODEC_FLAG2_SKIP_MANUAL	libavcodec/avcodec.h	1169;"	d
CODEC_FLAG_4MV	libavcodec/avcodec.h	1109;"	d
CODEC_FLAG_AC_PRED	libavcodec/avcodec.h	1156;"	d
CODEC_FLAG_BITEXACT	libavcodec/avcodec.h	1155;"	d
CODEC_FLAG_CLOSED_GOP	libavcodec/avcodec.h	1159;"	d
CODEC_FLAG_EMU_EDGE	libavcodec/avcodec.h	1140;"	d
CODEC_FLAG_GLOBAL_HEADER	libavcodec/avcodec.h	1154;"	d
CODEC_FLAG_GMC	libavcodec/avcodec.h	1116;"	d
CODEC_FLAG_GRAY	libavcodec/avcodec.h	1134;"	d
CODEC_FLAG_INPUT_PRESERVED	libavcodec/avcodec.h	1130;"	d
CODEC_FLAG_INTERLACED_DCT	libavcodec/avcodec.h	1152;"	d
CODEC_FLAG_INTERLACED_ME	libavcodec/avcodec.h	1158;"	d
CODEC_FLAG_LOOP_FILTER	libavcodec/avcodec.h	1157;"	d
CODEC_FLAG_LOW_DELAY	libavcodec/avcodec.h	1153;"	d
CODEC_FLAG_MV0	libavcodec/avcodec.h	1123;"	d
CODEC_FLAG_NORMALIZE_AQP	libavcodec/avcodec.h	1150;"	d
CODEC_FLAG_OUTPUT_CORRUPT	libavcodec/avcodec.h	1110;"	d
CODEC_FLAG_PASS1	libavcodec/avcodec.h	1132;"	d
CODEC_FLAG_PASS2	libavcodec/avcodec.h	1133;"	d
CODEC_FLAG_PSNR	libavcodec/avcodec.h	1142;"	d
CODEC_FLAG_QPEL	libavcodec/avcodec.h	1111;"	d
CODEC_FLAG_QSCALE	libavcodec/avcodec.h	1108;"	d
CODEC_FLAG_TRUNCATED	libavcodec/avcodec.h	1143;"	d
CODEC_FLAG_UNALIGNED	libavcodec/avcodec.h	1107;"	d
DCTContext	libavcodec/avfft.h	/^typedef struct DCTContext DCTContext;$/;"	t	typeref:struct:DCTContext
DCTTransformType	libavcodec/avfft.h	/^enum DCTTransformType {$/;"	g
DCT_I	libavcodec/avfft.h	/^    DCT_I,$/;"	e	enum:DCTTransformType
DCT_II	libavcodec/avfft.h	/^    DCT_II = 0,$/;"	e	enum:DCTTransformType
DCT_III	libavcodec/avfft.h	/^    DCT_III,$/;"	e	enum:DCTTransformType
DECLARE_ALIGNED	libavutil/mem.h	101;"	d
DECLARE_ALIGNED	libavutil/mem.h	104;"	d
DECLARE_ALIGNED	libavutil/mem.h	107;"	d
DECLARE_ALIGNED	libavutil/mem.h	110;"	d
DECLARE_ALIGNED	libavutil/mem.h	91;"	d
DECLARE_ALIGNED	libavutil/mem.h	94;"	d
DECLARE_ASM_CONST	libavutil/mem.h	102;"	d
DECLARE_ASM_CONST	libavutil/mem.h	105;"	d
DECLARE_ASM_CONST	libavutil/mem.h	108;"	d
DECLARE_ASM_CONST	libavutil/mem.h	111;"	d
DECLARE_ASM_CONST	libavutil/mem.h	92;"	d
DECLARE_ASM_CONST	libavutil/mem.h	97;"	d
DFT_C2R	libavcodec/avfft.h	/^    DFT_C2R,$/;"	e	enum:RDFTransformType
DFT_R2C	libavcodec/avfft.h	/^    DFT_R2C,$/;"	e	enum:RDFTransformType
DIRAC_PCODE_AUX	libavcodec/dirac.h	/^    DIRAC_PCODE_AUX             = 0x20,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_END_SEQ	libavcodec/dirac.h	/^    DIRAC_PCODE_END_SEQ         = 0x10,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTER_NOREF_CO1	libavcodec/dirac.h	/^    DIRAC_PCODE_INTER_NOREF_CO1 = 0x0A,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTER_NOREF_CO2	libavcodec/dirac.h	/^    DIRAC_PCODE_INTER_NOREF_CO2 = 0x09,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTER_REF_CO1	libavcodec/dirac.h	/^    DIRAC_PCODE_INTER_REF_CO1   = 0x0D,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTER_REF_CO2	libavcodec/dirac.h	/^    DIRAC_PCODE_INTER_REF_CO2   = 0x0E,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTRA_REF_CO	libavcodec/dirac.h	/^    DIRAC_PCODE_INTRA_REF_CO    = 0x0C,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTRA_REF_PICT	libavcodec/dirac.h	/^    DIRAC_PCODE_INTRA_REF_PICT  = 0xCC,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_INTRA_REF_RAW	libavcodec/dirac.h	/^    DIRAC_PCODE_INTRA_REF_RAW   = 0x4C,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_MAGIC	libavcodec/dirac.h	/^    DIRAC_PCODE_MAGIC           = 0x42424344,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_PAD	libavcodec/dirac.h	/^    DIRAC_PCODE_PAD             = 0x30,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_PICTURE_CODED	libavcodec/dirac.h	/^    DIRAC_PCODE_PICTURE_CODED   = 0x08,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_PICTURE_HQ	libavcodec/dirac.h	/^    DIRAC_PCODE_PICTURE_HQ      = 0xE8,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_PICTURE_LOW_DEL	libavcodec/dirac.h	/^    DIRAC_PCODE_PICTURE_LOW_DEL = 0xC8,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_PICTURE_RAW	libavcodec/dirac.h	/^    DIRAC_PCODE_PICTURE_RAW     = 0x48,$/;"	e	enum:DiracParseCodes
DIRAC_PCODE_SEQ_HEADER	libavcodec/dirac.h	/^    DIRAC_PCODE_SEQ_HEADER      = 0x00,$/;"	e	enum:DiracParseCodes
DST_I	libavcodec/avfft.h	/^    DST_I,$/;"	e	enum:DCTTransformType
DV_PROFILE_BYTES	libavcodec/dv_profile.h	30;"	d
DiracParseCodes	libavcodec/dirac.h	/^enum DiracParseCodes {$/;"	g
DiracVersionInfo	libavcodec/dirac.h	/^typedef struct DiracVersionInfo {$/;"	s
DiracVersionInfo	libavcodec/dirac.h	/^} DiracVersionInfo;$/;"	t	typeref:struct:DiracVersionInfo
FFABS	libavutil/common.h	72;"	d
FFALIGN	libavutil/macros.h	48;"	d
FFDIFFSIGN	libavutil/common.h	92;"	d
FFERRTAG	libavutil/error.h	47;"	d
FFMAX	libavutil/common.h	94;"	d
FFMAX3	libavutil/common.h	95;"	d
FFMIN	libavutil/common.h	96;"	d
FFMIN3	libavutil/common.h	97;"	d
FFMPEG_VERSION	libavutil/ffversion.h	4;"	d
FFNABS	libavutil/common.h	81;"	d
FFSIGN	libavutil/common.h	73;"	d
FFSWAP	libavutil/common.h	99;"	d
FFTComplex	libavcodec/avfft.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	libavcodec/avfft.h	/^} FFTComplex;$/;"	t	typeref:struct:FFTComplex
FFTContext	libavcodec/avfft.h	/^typedef struct FFTContext FFTContext;$/;"	t	typeref:struct:FFTContext
FFTSample	libavcodec/avfft.h	/^typedef float FFTSample;$/;"	t
FFUDIV	libavutil/common.h	63;"	d
FFUMOD	libavutil/common.h	64;"	d
FF_API_AC_VLC	libavcodec/version.h	85;"	d
FF_API_AFD	libavcodec/version.h	145;"	d
FF_API_ARCH_ALPHA	libavcodec/version.h	94;"	d
FF_API_ARCH_SH4	libavcodec/version.h	118;"	d
FF_API_ARCH_SPARC	libavcodec/version.h	121;"	d
FF_API_ASPECT_EXTENDED	libavcodec/version.h	91;"	d
FF_API_ASS_TIMING	libavcodec/version.h	215;"	d
FF_API_AUDIOENC_DELAY	libavcodec/version.h	152;"	d
FF_API_AUDIO_CONVERT	libavcodec/version.h	58;"	d
FF_API_AVCODEC_RESAMPLE	libavcodec/version.h	61;"	d
FF_API_AVCTX_TIMEBASE	libavcodec/version.h	161;"	d
FF_API_AVFILTER_INIT_FILTER	libavfilter/version.h	62;"	d
FF_API_AVFILTER_OPEN	libavfilter/version.h	59;"	d
FF_API_AVPACKET_OLD_API	libavcodec/version.h	197;"	d
FF_API_AVPICTURE	libavcodec/version.h	194;"	d
FF_API_BUFS_VDPAU	libavcodec/version.h	73;"	d
FF_API_CAP_VDPAU	libavcodec/version.h	70;"	d
FF_API_CODEC_NAME	libavcodec/version.h	142;"	d
FF_API_CODED_FRAME	libavcodec/version.h	176;"	d
FF_API_CODER_TYPE	libavcodec/version.h	206;"	d
FF_API_COMPUTE_PKT_FIELDS2	libavformat/version.h	74;"	d
FF_API_CONVERGENCE_DURATION	libavcodec/version.h	191;"	d
FF_API_COPY_CONTEXT	libavcodec/version.h	221;"	d
FF_API_CRC_BIG_TABLE	libavutil/version.h	134;"	d
FF_API_CRYPTO_SIZE_T	libavutil/version.h	140;"	d
FF_API_DEBUG_MV	libavcodec/version.h	82;"	d
FF_API_DLOG	libavutil/version.h	119;"	d
FF_API_EMU_EDGE	libavcodec/version.h	115;"	d
FF_API_ERROR_FRAME	libavutil/version.h	131;"	d
FF_API_ERROR_RATE	libavcodec/version.h	100;"	d
FF_API_FRAME_QP	libavutil/version.h	125;"	d
FF_API_GETCHROMA	libavcodec/version.h	239;"	d
FF_API_GET_CONTEXT_DEFAULTS	libavcodec/version.h	224;"	d
FF_API_GMC	libavcodec/version.h	136;"	d
FF_API_HLS_WRAP	libavformat/version.h	89;"	d
FF_API_HTTP_USER_AGENT	libavformat/version.h	86;"	d
FF_API_IDCT_XVIDMMX	libavcodec/version.h	127;"	d
FF_API_INPUT_PRESERVED	libavcodec/version.h	130;"	d
FF_API_LAVF_AVCTX	libavformat/version.h	80;"	d
FF_API_LAVF_BITEXACT	libavformat/version.h	59;"	d
FF_API_LAVF_CODEC_TB	libavformat/version.h	65;"	d
FF_API_LAVF_FMT_RAWPICTURE	libavformat/version.h	71;"	d
FF_API_LAVF_FRAC	libavformat/version.h	62;"	d
FF_API_LAVF_KEEPSIDE_FLAG	libavformat/version.h	95;"	d
FF_API_LAVF_MERGE_SD	libavformat/version.h	92;"	d
FF_API_LAVR_OPTS	libavfilter/version.h	71;"	d
FF_API_LOWRES	libavcodec/version.h	67;"	d
FF_API_MAX_BFRAMES	libavcodec/version.h	109;"	d
FF_API_MB_TYPE	libavcodec/version.h	106;"	d
FF_API_MERGE_SD	libavcodec/version.h	158;"	d
FF_API_MERGE_SD_API	libavcodec/version.h	233;"	d
FF_API_MISSING_SAMPLE	libavcodec/version.h	64;"	d
FF_API_MOTION_EST	libavcodec/version.h	179;"	d
FF_API_MPV_OPT	libavcodec/version.h	164;"	d
FF_API_MV0	libavcodec/version.h	139;"	d
FF_API_NEG_LINESIZES	libavcodec/version.h	112;"	d
FF_API_NOCONST_GET_NAME	libavfilter/version.h	68;"	d
FF_API_NOCONST_GET_SIDE_DATA	libavformat/version.h	83;"	d
FF_API_NORMALIZE_AQP	libavcodec/version.h	133;"	d
FF_API_NVENC_OLD_NAME	libavcodec/version.h	227;"	d
FF_API_OLD_BSF	libavcodec/version.h	218;"	d
FF_API_OLD_FILTER_OPTS	libavfilter/version.h	53;"	d
FF_API_OLD_FILTER_OPTS_ERROR	libavfilter/version.h	56;"	d
FF_API_OLD_FILTER_REGISTER	libavfilter/version.h	65;"	d
FF_API_OLD_MSMPEG4	libavcodec/version.h	88;"	d
FF_API_OLD_OPEN_CALLBACKS	libavformat/version.h	77;"	d
FF_API_OLD_ROTATE_API	libavformat/version.h	98;"	d
FF_API_OPT_TYPE_METADATA	libavutil/version.h	116;"	d
FF_API_PKT_PTS	libavutil/version.h	137;"	d
FF_API_PLUS1_MINUS1	libavutil/version.h	128;"	d
FF_API_PRIVATE_OPT	libavcodec/version.h	212;"	d
FF_API_QP_TYPE	libpostproc/version.h	46;"	d
FF_API_QSCALE_TYPE	libavcodec/version.h	103;"	d
FF_API_QUANT_BIAS	libavcodec/version.h	170;"	d
FF_API_RC_STRATEGY	libavcodec/version.h	173;"	d
FF_API_RTP_CALLBACK	libavcodec/version.h	200;"	d
FF_API_R_FRAME_RATE	libavformat/version.h	103;"	d
FF_API_SET_DIMENSIONS	libavcodec/version.h	79;"	d
FF_API_SIDEDATA_ONLY_PKT	libavcodec/version.h	185;"	d
FF_API_STAT_BITS	libavcodec/version.h	209;"	d
FF_API_STREAM_CODEC_TAG	libavcodec/version.h	167;"	d
FF_API_STRUCT_VAAPI_CONTEXT	libavcodec/version.h	230;"	d
FF_API_SWS_VECTOR	libswscale/version.h	50;"	d
FF_API_TAG_STRING	libavcodec/version.h	236;"	d
FF_API_UNUSED_MEMBERS	libavcodec/version.h	124;"	d
FF_API_URL_FEOF	libavformat/version.h	68;"	d
FF_API_VAAPI	libavutil/version.h	122;"	d
FF_API_VAAPI_CONTEXT	libavcodec/version.h	155;"	d
FF_API_VBV_DELAY	libavcodec/version.h	203;"	d
FF_API_VDPAU	libavutil/version.h	110;"	d
FF_API_VDPAU_PROFILE	libavcodec/version.h	188;"	d
FF_API_VIMA_DECODER	libavcodec/version.h	55;"	d
FF_API_VISMV	libavcodec/version.h	149;"	d
FF_API_VOXWARE	libavcodec/version.h	76;"	d
FF_API_WITHOUT_PREFIX	libavcodec/version.h	182;"	d
FF_API_XVMC	libavcodec/version.h	97;"	d
FF_API_XVMC	libavutil/version.h	113;"	d
FF_ARRAY_ELEMS	libavutil/common.h	100;"	d
FF_ASPECT_EXTENDED	libavcodec/avcodec.h	1966;"	d
FF_BUG_AC_VLC	libavcodec/avcodec.h	2956;"	d
FF_BUG_AMV	libavcodec/avcodec.h	2954;"	d
FF_BUG_AUTODETECT	libavcodec/avcodec.h	2947;"	d
FF_BUG_DC_CLIP	libavcodec/avcodec.h	2964;"	d
FF_BUG_DIRECT_BLOCKSIZE	libavcodec/avcodec.h	2961;"	d
FF_BUG_EDGE	libavcodec/avcodec.h	2962;"	d
FF_BUG_HPEL_CHROMA	libavcodec/avcodec.h	2963;"	d
FF_BUG_IEDGE	libavcodec/avcodec.h	2967;"	d
FF_BUG_MS	libavcodec/avcodec.h	2965;"	d
FF_BUG_NO_PADDING	libavcodec/avcodec.h	2953;"	d
FF_BUG_OLD_MSMPEG4	libavcodec/avcodec.h	2949;"	d
FF_BUG_QPEL_CHROMA	libavcodec/avcodec.h	2958;"	d
FF_BUG_QPEL_CHROMA2	libavcodec/avcodec.h	2960;"	d
FF_BUG_STD_QPEL	libavcodec/avcodec.h	2959;"	d
FF_BUG_TRUNCATED	libavcodec/avcodec.h	2966;"	d
FF_BUG_UMP4	libavcodec/avcodec.h	2952;"	d
FF_BUG_XVID_ILACE	libavcodec/avcodec.h	2951;"	d
FF_CEIL_RSHIFT	libavutil/common.h	61;"	d
FF_CMP_BIT	libavcodec/avcodec.h	2203;"	d
FF_CMP_CHROMA	libavcodec/avcodec.h	2214;"	d
FF_CMP_DCT	libavcodec/avcodec.h	2201;"	d
FF_CMP_DCT264	libavcodec/avcodec.h	2212;"	d
FF_CMP_DCTMAX	libavcodec/avcodec.h	2211;"	d
FF_CMP_MEDIAN_SAD	libavcodec/avcodec.h	2213;"	d
FF_CMP_NSSE	libavcodec/avcodec.h	2208;"	d
FF_CMP_PSNR	libavcodec/avcodec.h	2202;"	d
FF_CMP_RD	libavcodec/avcodec.h	2204;"	d
FF_CMP_SAD	libavcodec/avcodec.h	2198;"	d
FF_CMP_SATD	libavcodec/avcodec.h	2200;"	d
FF_CMP_SSE	libavcodec/avcodec.h	2199;"	d
FF_CMP_VSAD	libavcodec/avcodec.h	2206;"	d
FF_CMP_VSSE	libavcodec/avcodec.h	2207;"	d
FF_CMP_W53	libavcodec/avcodec.h	2209;"	d
FF_CMP_W97	libavcodec/avcodec.h	2210;"	d
FF_CMP_ZERO	libavcodec/avcodec.h	2205;"	d
FF_CODEC_PROPERTY_CLOSED_CAPTIONS	libavcodec/avcodec.h	3583;"	d
FF_CODEC_PROPERTY_LOSSLESS	libavcodec/avcodec.h	3582;"	d
FF_CODER_TYPE_AC	libavcodec/avcodec.h	2805;"	d
FF_CODER_TYPE_DEFLATE	libavcodec/avcodec.h	2809;"	d
FF_CODER_TYPE_RAW	libavcodec/avcodec.h	2806;"	d
FF_CODER_TYPE_RLE	libavcodec/avcodec.h	2807;"	d
FF_CODER_TYPE_VLC	libavcodec/avcodec.h	2804;"	d
FF_COMPLIANCE_EXPERIMENTAL	libavcodec/avcodec.h	2986;"	d
FF_COMPLIANCE_NORMAL	libavcodec/avcodec.h	2984;"	d
FF_COMPLIANCE_STRICT	libavcodec/avcodec.h	2983;"	d
FF_COMPLIANCE_UNOFFICIAL	libavcodec/avcodec.h	2985;"	d
FF_COMPLIANCE_VERY_STRICT	libavcodec/avcodec.h	2982;"	d
FF_COMPRESSION_DEFAULT	libavcodec/avcodec.h	1849;"	d
FF_DCT_ALTIVEC	libavcodec/avcodec.h	3113;"	d
FF_DCT_AUTO	libavcodec/avcodec.h	3109;"	d
FF_DCT_FAAN	libavcodec/avcodec.h	3114;"	d
FF_DCT_FASTINT	libavcodec/avcodec.h	3110;"	d
FF_DCT_INT	libavcodec/avcodec.h	3111;"	d
FF_DCT_MMX	libavcodec/avcodec.h	3112;"	d
FF_DEBUG_BITSTREAM	libavcodec/avcodec.h	3006;"	d
FF_DEBUG_BUFFERS	libavcodec/avcodec.h	3028;"	d
FF_DEBUG_BUGS	libavcodec/avcodec.h	3023;"	d
FF_DEBUG_DCT_COEFF	libavcodec/avcodec.h	3015;"	d
FF_DEBUG_ER	libavcodec/avcodec.h	3021;"	d
FF_DEBUG_GREEN_MD	libavcodec/avcodec.h	3030;"	d
FF_DEBUG_MB_TYPE	libavcodec/avcodec.h	3007;"	d
FF_DEBUG_MMCO	libavcodec/avcodec.h	3022;"	d
FF_DEBUG_MV	libavcodec/avcodec.h	3013;"	d
FF_DEBUG_NOMC	libavcodec/avcodec.h	3031;"	d
FF_DEBUG_PICT_INFO	libavcodec/avcodec.h	3004;"	d
FF_DEBUG_PTS	libavcodec/avcodec.h	3019;"	d
FF_DEBUG_QP	libavcodec/avcodec.h	3008;"	d
FF_DEBUG_RC	libavcodec/avcodec.h	3005;"	d
FF_DEBUG_SKIP	libavcodec/avcodec.h	3016;"	d
FF_DEBUG_STARTCODE	libavcodec/avcodec.h	3017;"	d
FF_DEBUG_THREADS	libavcodec/avcodec.h	3029;"	d
FF_DEBUG_VIS_MB_TYPE	libavcodec/avcodec.h	3026;"	d
FF_DEBUG_VIS_MV_B_BACK	libavcodec/avcodec.h	3042;"	d
FF_DEBUG_VIS_MV_B_BACK	libavcodec/avcodec.h	3550;"	d
FF_DEBUG_VIS_MV_B_FOR	libavcodec/avcodec.h	3041;"	d
FF_DEBUG_VIS_MV_B_FOR	libavcodec/avcodec.h	3549;"	d
FF_DEBUG_VIS_MV_P_FOR	libavcodec/avcodec.h	3040;"	d
FF_DEBUG_VIS_MV_P_FOR	libavcodec/avcodec.h	3548;"	d
FF_DEBUG_VIS_QP	libavcodec/avcodec.h	3025;"	d
FF_DECODE_ERROR_INVALID_BITSTREAM	libavutil/frame.h	498;"	d
FF_DECODE_ERROR_MISSING_REFERENCE	libavutil/frame.h	499;"	d
FF_DEFAULT_QUANT_BIAS	libavcodec/avcodec.h	2291;"	d
FF_DTG_AFD_14_9	libavcodec/avcodec.h	2271;"	d
FF_DTG_AFD_16_9	libavcodec/avcodec.h	2270;"	d
FF_DTG_AFD_16_9_SP_14_9	libavcodec/avcodec.h	2273;"	d
FF_DTG_AFD_4_3	libavcodec/avcodec.h	2269;"	d
FF_DTG_AFD_4_3_SP_14_9	libavcodec/avcodec.h	2272;"	d
FF_DTG_AFD_SAME	libavcodec/avcodec.h	2268;"	d
FF_DTG_AFD_SP_4_3	libavcodec/avcodec.h	2274;"	d
FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO	libavcodec/d3d11va.h	49;"	d
FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO	libavcodec/dxva2.h	49;"	d
FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG	libavcodec/d3d11va.h	48;"	d
FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG	libavcodec/dxva2.h	48;"	d
FF_EC_DEBLOCK	libavcodec/avcodec.h	2995;"	d
FF_EC_FAVOR_INTER	libavcodec/avcodec.h	2996;"	d
FF_EC_GUESS_MVS	libavcodec/avcodec.h	2994;"	d
FF_FDEBUG_TS	libavformat/avformat.h	1601;"	d
FF_IDCT_ALTIVEC	libavcodec/avcodec.h	3127;"	d
FF_IDCT_ARM	libavcodec/avcodec.h	3126;"	d
FF_IDCT_AUTO	libavcodec/avcodec.h	3122;"	d
FF_IDCT_FAAN	libavcodec/avcodec.h	3144;"	d
FF_IDCT_INT	libavcodec/avcodec.h	3123;"	d
FF_IDCT_IPP	libavcodec/avcodec.h	3133;"	d
FF_IDCT_NONE	libavcodec/avcodec.h	3149;"	d
FF_IDCT_SH4	libavcodec/avcodec.h	3129;"	d
FF_IDCT_SIMPLE	libavcodec/avcodec.h	3124;"	d
FF_IDCT_SIMPLEALPHA	libavcodec/avcodec.h	3147;"	d
FF_IDCT_SIMPLEARM	libavcodec/avcodec.h	3131;"	d
FF_IDCT_SIMPLEARMV5TE	libavcodec/avcodec.h	3139;"	d
FF_IDCT_SIMPLEARMV6	libavcodec/avcodec.h	3140;"	d
FF_IDCT_SIMPLEAUTO	libavcodec/avcodec.h	3150;"	d
FF_IDCT_SIMPLEMMX	libavcodec/avcodec.h	3125;"	d
FF_IDCT_SIMPLENEON	libavcodec/avcodec.h	3145;"	d
FF_IDCT_SIMPLEVIS	libavcodec/avcodec.h	3142;"	d
FF_IDCT_XVID	libavcodec/avcodec.h	3135;"	d
FF_IDCT_XVIDMMX	libavcodec/avcodec.h	3137;"	d
FF_INPUT_BUFFER_PADDING_SIZE	libavcodec/avcodec.h	790;"	d
FF_LAMBDA_MAX	libavutil/avutil.h	228;"	d
FF_LAMBDA_SCALE	libavutil/avutil.h	226;"	d
FF_LAMBDA_SHIFT	libavutil/avutil.h	225;"	d
FF_LEVEL_UNKNOWN	libavcodec/avcodec.h	3365;"	d
FF_LOSS_ALPHA	libavutil/pixdesc.h	383;"	d
FF_LOSS_CHROMA	libavutil/pixdesc.h	385;"	d
FF_LOSS_COLORQUANT	libavutil/pixdesc.h	384;"	d
FF_LOSS_COLORSPACE	libavutil/pixdesc.h	382;"	d
FF_LOSS_DEPTH	libavutil/pixdesc.h	381;"	d
FF_LOSS_RESOLUTION	libavutil/pixdesc.h	380;"	d
FF_MAX_B_FRAMES	libavcodec/avcodec.h	860;"	d
FF_MB_DECISION_BITS	libavcodec/avcodec.h	2326;"	d
FF_MB_DECISION_RD	libavcodec/avcodec.h	2327;"	d
FF_MB_DECISION_SIMPLE	libavcodec/avcodec.h	2325;"	d
FF_MIN_BUFFER_SIZE	libavcodec/avcodec.h	795;"	d
FF_PAD_STRUCTURE	libavutil/bprint.h	34;"	d
FF_PRED_LEFT	libavcodec/avcodec.h	2153;"	d
FF_PRED_MEDIAN	libavcodec/avcodec.h	2155;"	d
FF_PRED_PLANE	libavcodec/avcodec.h	2154;"	d
FF_PROFILE_AAC_ELD	libavcodec/avcodec.h	3277;"	d
FF_PROFILE_AAC_HE	libavcodec/avcodec.h	3274;"	d
FF_PROFILE_AAC_HE_V2	libavcodec/avcodec.h	3275;"	d
FF_PROFILE_AAC_LD	libavcodec/avcodec.h	3276;"	d
FF_PROFILE_AAC_LOW	libavcodec/avcodec.h	3271;"	d
FF_PROFILE_AAC_LTP	libavcodec/avcodec.h	3273;"	d
FF_PROFILE_AAC_MAIN	libavcodec/avcodec.h	3270;"	d
FF_PROFILE_AAC_SSR	libavcodec/avcodec.h	3272;"	d
FF_PROFILE_DNXHD	libavcodec/avcodec.h	3281;"	d
FF_PROFILE_DNXHR_444	libavcodec/avcodec.h	3286;"	d
FF_PROFILE_DNXHR_HQ	libavcodec/avcodec.h	3284;"	d
FF_PROFILE_DNXHR_HQX	libavcodec/avcodec.h	3285;"	d
FF_PROFILE_DNXHR_LB	libavcodec/avcodec.h	3282;"	d
FF_PROFILE_DNXHR_SQ	libavcodec/avcodec.h	3283;"	d
FF_PROFILE_DTS	libavcodec/avcodec.h	3288;"	d
FF_PROFILE_DTS_96_24	libavcodec/avcodec.h	3290;"	d
FF_PROFILE_DTS_ES	libavcodec/avcodec.h	3289;"	d
FF_PROFILE_DTS_EXPRESS	libavcodec/avcodec.h	3293;"	d
FF_PROFILE_DTS_HD_HRA	libavcodec/avcodec.h	3291;"	d
FF_PROFILE_DTS_HD_MA	libavcodec/avcodec.h	3292;"	d
FF_PROFILE_H264_BASELINE	libavcodec/avcodec.h	3305;"	d
FF_PROFILE_H264_CAVLC_444	libavcodec/avcodec.h	3319;"	d
FF_PROFILE_H264_CONSTRAINED	libavcodec/avcodec.h	3302;"	d
FF_PROFILE_H264_CONSTRAINED_BASELINE	libavcodec/avcodec.h	3306;"	d
FF_PROFILE_H264_EXTENDED	libavcodec/avcodec.h	3308;"	d
FF_PROFILE_H264_HIGH	libavcodec/avcodec.h	3309;"	d
FF_PROFILE_H264_HIGH_10	libavcodec/avcodec.h	3310;"	d
FF_PROFILE_H264_HIGH_10_INTRA	libavcodec/avcodec.h	3311;"	d
FF_PROFILE_H264_HIGH_422	libavcodec/avcodec.h	3313;"	d
FF_PROFILE_H264_HIGH_422_INTRA	libavcodec/avcodec.h	3314;"	d
FF_PROFILE_H264_HIGH_444	libavcodec/avcodec.h	3316;"	d
FF_PROFILE_H264_HIGH_444_INTRA	libavcodec/avcodec.h	3318;"	d
FF_PROFILE_H264_HIGH_444_PREDICTIVE	libavcodec/avcodec.h	3317;"	d
FF_PROFILE_H264_INTRA	libavcodec/avcodec.h	3303;"	d
FF_PROFILE_H264_MAIN	libavcodec/avcodec.h	3307;"	d
FF_PROFILE_H264_MULTIVIEW_HIGH	libavcodec/avcodec.h	3312;"	d
FF_PROFILE_H264_STEREO_HIGH	libavcodec/avcodec.h	3315;"	d
FF_PROFILE_HEVC_MAIN	libavcodec/avcodec.h	3354;"	d
FF_PROFILE_HEVC_MAIN_10	libavcodec/avcodec.h	3355;"	d
FF_PROFILE_HEVC_MAIN_STILL_PICTURE	libavcodec/avcodec.h	3356;"	d
FF_PROFILE_HEVC_REXT	libavcodec/avcodec.h	3357;"	d
FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION	libavcodec/avcodec.h	3345;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0	libavcodec/avcodec.h	3343;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1	libavcodec/avcodec.h	3344;"	d
FF_PROFILE_JPEG2000_DCINEMA_2K	libavcodec/avcodec.h	3346;"	d
FF_PROFILE_JPEG2000_DCINEMA_4K	libavcodec/avcodec.h	3347;"	d
FF_PROFILE_MPEG2_422	libavcodec/avcodec.h	3295;"	d
FF_PROFILE_MPEG2_AAC_HE	libavcodec/avcodec.h	3279;"	d
FF_PROFILE_MPEG2_AAC_LOW	libavcodec/avcodec.h	3278;"	d
FF_PROFILE_MPEG2_HIGH	libavcodec/avcodec.h	3296;"	d
FF_PROFILE_MPEG2_MAIN	libavcodec/avcodec.h	3299;"	d
FF_PROFILE_MPEG2_SIMPLE	libavcodec/avcodec.h	3300;"	d
FF_PROFILE_MPEG2_SNR_SCALABLE	libavcodec/avcodec.h	3298;"	d
FF_PROFILE_MPEG2_SS	libavcodec/avcodec.h	3297;"	d
FF_PROFILE_MPEG4_ADVANCED_CODING	libavcodec/avcodec.h	3337;"	d
FF_PROFILE_MPEG4_ADVANCED_CORE	libavcodec/avcodec.h	3338;"	d
FF_PROFILE_MPEG4_ADVANCED_REAL_TIME	libavcodec/avcodec.h	3335;"	d
FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE	libavcodec/avcodec.h	3339;"	d
FF_PROFILE_MPEG4_ADVANCED_SIMPLE	libavcodec/avcodec.h	3341;"	d
FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE	libavcodec/avcodec.h	3333;"	d
FF_PROFILE_MPEG4_CORE	libavcodec/avcodec.h	3328;"	d
FF_PROFILE_MPEG4_CORE_SCALABLE	libavcodec/avcodec.h	3336;"	d
FF_PROFILE_MPEG4_HYBRID	libavcodec/avcodec.h	3334;"	d
FF_PROFILE_MPEG4_MAIN	libavcodec/avcodec.h	3329;"	d
FF_PROFILE_MPEG4_N_BIT	libavcodec/avcodec.h	3330;"	d
FF_PROFILE_MPEG4_SCALABLE_TEXTURE	libavcodec/avcodec.h	3331;"	d
FF_PROFILE_MPEG4_SIMPLE	libavcodec/avcodec.h	3326;"	d
FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION	libavcodec/avcodec.h	3332;"	d
FF_PROFILE_MPEG4_SIMPLE_SCALABLE	libavcodec/avcodec.h	3327;"	d
FF_PROFILE_MPEG4_SIMPLE_STUDIO	libavcodec/avcodec.h	3340;"	d
FF_PROFILE_RESERVED	libavcodec/avcodec.h	3268;"	d
FF_PROFILE_UNKNOWN	libavcodec/avcodec.h	3267;"	d
FF_PROFILE_VC1_ADVANCED	libavcodec/avcodec.h	3324;"	d
FF_PROFILE_VC1_COMPLEX	libavcodec/avcodec.h	3323;"	d
FF_PROFILE_VC1_MAIN	libavcodec/avcodec.h	3322;"	d
FF_PROFILE_VC1_SIMPLE	libavcodec/avcodec.h	3321;"	d
FF_PROFILE_VP9_0	libavcodec/avcodec.h	3349;"	d
FF_PROFILE_VP9_1	libavcodec/avcodec.h	3350;"	d
FF_PROFILE_VP9_2	libavcodec/avcodec.h	3351;"	d
FF_PROFILE_VP9_3	libavcodec/avcodec.h	3352;"	d
FF_QP2LAMBDA	libavutil/avutil.h	227;"	d
FF_QSCALE_TYPE_H264	libavcodec/avcodec.h	1390;"	d
FF_QSCALE_TYPE_MPEG1	libavcodec/avcodec.h	1388;"	d
FF_QSCALE_TYPE_MPEG2	libavcodec/avcodec.h	1389;"	d
FF_QSCALE_TYPE_VP56	libavcodec/avcodec.h	1391;"	d
FF_QUALITY_SCALE	libavutil/avutil.h	230;"	d
FF_RC_STRATEGY_XVID	libavcodec/avcodec.h	2061;"	d
FF_SUB_CHARENC_MODE_AUTOMATIC	libavcodec/avcodec.h	3517;"	d
FF_SUB_CHARENC_MODE_DO_NOTHING	libavcodec/avcodec.h	3516;"	d
FF_SUB_CHARENC_MODE_PRE_DECODER	libavcodec/avcodec.h	3518;"	d
FF_SUB_TEXT_FMT_ASS	libavcodec/avcodec.h	3624;"	d
FF_SUB_TEXT_FMT_ASS_WITH_TIMINGS	libavcodec/avcodec.h	3626;"	d
FF_THREAD_FRAME	libavcodec/avcodec.h	3203;"	d
FF_THREAD_SLICE	libavcodec/avcodec.h	3204;"	d
FF_VDPAU_STATE_USED_FOR_REFERENCE	libavcodec/vdpau.h	225;"	d
FF_VDPAU_STATE_USED_FOR_RENDER	libavcodec/vdpau.h	219;"	d
GET_UTF16	libavutil/common.h	386;"	d
GET_UTF8	libavutil/common.h	361;"	d
HWACCEL_CODEC_CAP_EXPERIMENTAL	libavcodec/avcodec.h	1291;"	d
IDFT_C2R	libavcodec/avfft.h	/^    IDFT_C2R,$/;"	e	enum:RDFTransformType
IDFT_R2C	libavcodec/avfft.h	/^    IDFT_R2C,$/;"	e	enum:RDFTransformType
INFINITY	libavutil/mathematics.h	67;"	d
LIBAVCODEC_BUILD	libavcodec/version.h	40;"	d
LIBAVCODEC_IDENT	libavcodec/version.h	42;"	d
LIBAVCODEC_VERSION	libavcodec/version.h	37;"	d
LIBAVCODEC_VERSION_INT	libavcodec/version.h	34;"	d
LIBAVCODEC_VERSION_MAJOR	libavcodec/version.h	30;"	d
LIBAVCODEC_VERSION_MICRO	libavcodec/version.h	32;"	d
LIBAVCODEC_VERSION_MINOR	libavcodec/version.h	31;"	d
LIBAVDEVICE_BUILD	libavdevice/version.h	40;"	d
LIBAVDEVICE_IDENT	libavdevice/version.h	42;"	d
LIBAVDEVICE_VERSION	libavdevice/version.h	37;"	d
LIBAVDEVICE_VERSION_INT	libavdevice/version.h	34;"	d
LIBAVDEVICE_VERSION_MAJOR	libavdevice/version.h	30;"	d
LIBAVDEVICE_VERSION_MICRO	libavdevice/version.h	32;"	d
LIBAVDEVICE_VERSION_MINOR	libavdevice/version.h	31;"	d
LIBAVFILTER_BUILD	libavfilter/version.h	42;"	d
LIBAVFILTER_IDENT	libavfilter/version.h	44;"	d
LIBAVFILTER_VERSION	libavfilter/version.h	39;"	d
LIBAVFILTER_VERSION_INT	libavfilter/version.h	36;"	d
LIBAVFILTER_VERSION_MAJOR	libavfilter/version.h	32;"	d
LIBAVFILTER_VERSION_MICRO	libavfilter/version.h	34;"	d
LIBAVFILTER_VERSION_MINOR	libavfilter/version.h	33;"	d
LIBAVFORMAT_BUILD	libavformat/version.h	44;"	d
LIBAVFORMAT_IDENT	libavformat/version.h	46;"	d
LIBAVFORMAT_VERSION	libavformat/version.h	41;"	d
LIBAVFORMAT_VERSION_INT	libavformat/version.h	38;"	d
LIBAVFORMAT_VERSION_MAJOR	libavformat/version.h	34;"	d
LIBAVFORMAT_VERSION_MICRO	libavformat/version.h	36;"	d
LIBAVFORMAT_VERSION_MINOR	libavformat/version.h	35;"	d
LIBAVRESAMPLE_BUILD	libavresample/version.h	40;"	d
LIBAVRESAMPLE_IDENT	libavresample/version.h	42;"	d
LIBAVRESAMPLE_VERSION	libavresample/version.h	37;"	d
LIBAVRESAMPLE_VERSION_INT	libavresample/version.h	34;"	d
LIBAVRESAMPLE_VERSION_MAJOR	libavresample/version.h	30;"	d
LIBAVRESAMPLE_VERSION_MICRO	libavresample/version.h	32;"	d
LIBAVRESAMPLE_VERSION_MINOR	libavresample/version.h	31;"	d
LIBAVUTIL_BUILD	libavutil/version.h	92;"	d
LIBAVUTIL_IDENT	libavutil/version.h	94;"	d
LIBAVUTIL_VERSION	libavutil/version.h	89;"	d
LIBAVUTIL_VERSION_INT	libavutil/version.h	86;"	d
LIBAVUTIL_VERSION_MAJOR	libavutil/version.h	82;"	d
LIBAVUTIL_VERSION_MICRO	libavutil/version.h	84;"	d
LIBAVUTIL_VERSION_MINOR	libavutil/version.h	83;"	d
LIBPOSTPROC_BUILD	libpostproc/version.h	41;"	d
LIBPOSTPROC_IDENT	libpostproc/version.h	43;"	d
LIBPOSTPROC_VERSION	libpostproc/version.h	38;"	d
LIBPOSTPROC_VERSION_INT	libpostproc/version.h	35;"	d
LIBPOSTPROC_VERSION_MAJOR	libpostproc/version.h	31;"	d
LIBPOSTPROC_VERSION_MICRO	libpostproc/version.h	33;"	d
LIBPOSTPROC_VERSION_MINOR	libpostproc/version.h	32;"	d
LIBSWRESAMPLE_BUILD	libswresample/version.h	41;"	d
LIBSWRESAMPLE_IDENT	libswresample/version.h	43;"	d
LIBSWRESAMPLE_VERSION	libswresample/version.h	38;"	d
LIBSWRESAMPLE_VERSION_INT	libswresample/version.h	35;"	d
LIBSWRESAMPLE_VERSION_MAJOR	libswresample/version.h	31;"	d
LIBSWRESAMPLE_VERSION_MICRO	libswresample/version.h	33;"	d
LIBSWRESAMPLE_VERSION_MINOR	libswresample/version.h	32;"	d
LIBSWSCALE_BUILD	libswscale/version.h	39;"	d
LIBSWSCALE_IDENT	libswscale/version.h	41;"	d
LIBSWSCALE_VERSION	libswscale/version.h	36;"	d
LIBSWSCALE_VERSION_INT	libswscale/version.h	33;"	d
LIBSWSCALE_VERSION_MAJOR	libswscale/version.h	29;"	d
LIBSWSCALE_VERSION_MICRO	libswscale/version.h	31;"	d
LIBSWSCALE_VERSION_MINOR	libswscale/version.h	30;"	d
MAX_DWT_LEVELS	libavcodec/dirac.h	45;"	d
MAX_REORDER_DELAY	libavformat/avformat.h	1080;"	d
MAX_STD_TIMEBASES	libavformat/avformat.h	1017;"	d
MB_TYPE_16x16	libavcodec/avcodec.h	1299;"	d
MB_TYPE_16x8	libavcodec/avcodec.h	1300;"	d
MB_TYPE_8x16	libavcodec/avcodec.h	1301;"	d
MB_TYPE_8x8	libavcodec/avcodec.h	1302;"	d
MB_TYPE_ACPRED	libavcodec/avcodec.h	1305;"	d
MB_TYPE_CBP	libavcodec/avcodec.h	1316;"	d
MB_TYPE_DIRECT2	libavcodec/avcodec.h	1304;"	d
MB_TYPE_GMC	libavcodec/avcodec.h	1306;"	d
MB_TYPE_INTERLACED	libavcodec/avcodec.h	1303;"	d
MB_TYPE_INTRA16x16	libavcodec/avcodec.h	1297;"	d
MB_TYPE_INTRA4x4	libavcodec/avcodec.h	1296;"	d
MB_TYPE_INTRA_PCM	libavcodec/avcodec.h	1298;"	d
MB_TYPE_L0	libavcodec/avcodec.h	1312;"	d
MB_TYPE_L0L1	libavcodec/avcodec.h	1314;"	d
MB_TYPE_L1	libavcodec/avcodec.h	1313;"	d
MB_TYPE_P0L0	libavcodec/avcodec.h	1308;"	d
MB_TYPE_P0L1	libavcodec/avcodec.h	1310;"	d
MB_TYPE_P1L0	libavcodec/avcodec.h	1309;"	d
MB_TYPE_P1L1	libavcodec/avcodec.h	1311;"	d
MB_TYPE_QUANT	libavcodec/avcodec.h	1315;"	d
MB_TYPE_SKIP	libavcodec/avcodec.h	1307;"	d
ME_EPZS	libavcodec/avcodec.h	/^    ME_EPZS,        \/\/\/< enhanced predictive zonal search$/;"	e	enum:Motion_Est_ID
ME_FULL	libavcodec/avcodec.h	/^    ME_FULL,$/;"	e	enum:Motion_Est_ID
ME_HEX	libavcodec/avcodec.h	/^    ME_HEX,         \/\/\/< hexagon based search$/;"	e	enum:Motion_Est_ID
ME_ITER	libavcodec/avcodec.h	/^    ME_ITER=50,     \/\/\/< iterative search$/;"	e	enum:Motion_Est_ID
ME_LOG	libavcodec/avcodec.h	/^    ME_LOG,$/;"	e	enum:Motion_Est_ID
ME_PHODS	libavcodec/avcodec.h	/^    ME_PHODS,$/;"	e	enum:Motion_Est_ID
ME_TESA	libavcodec/avcodec.h	/^    ME_TESA,        \/\/\/< transformed exhaustive search algorithm$/;"	e	enum:Motion_Est_ID
ME_UMH	libavcodec/avcodec.h	/^    ME_UMH,         \/\/\/< uneven multi-hexagon search$/;"	e	enum:Motion_Est_ID
ME_X1	libavcodec/avcodec.h	/^    ME_X1,          \/\/\/< reserved for experiments$/;"	e	enum:Motion_Est_ID
ME_ZERO	libavcodec/avcodec.h	/^    ME_ZERO = 1,    \/\/\/< no search, that is use 0,0 vector whenever one is needed$/;"	e	enum:Motion_Est_ID
MKBETAG	libavutil/common.h	343;"	d
MKTAG	libavutil/common.h	342;"	d
M_E	libavutil/mathematics.h	37;"	d
M_LN10	libavutil/mathematics.h	43;"	d
M_LN2	libavutil/mathematics.h	40;"	d
M_LOG2_10	libavutil/mathematics.h	46;"	d
M_PHI	libavutil/mathematics.h	49;"	d
M_PI	libavutil/mathematics.h	52;"	d
M_PI_2	libavutil/mathematics.h	55;"	d
M_SQRT1_2	libavutil/mathematics.h	58;"	d
M_SQRT2	libavutil/mathematics.h	61;"	d
MaxCLL	libavutil/mastering_display_metadata.h	/^    unsigned MaxCLL;$/;"	m	struct:AVContentLightMetadata
MaxFALL	libavutil/mastering_display_metadata.h	/^    unsigned MaxFALL;$/;"	m	struct:AVContentLightMetadata
MiscFlags	libavutil/hwcontext_d3d11va.h	/^    UINT MiscFlags;$/;"	m	struct:AVD3D11VAFramesContext
Motion_Est_ID	libavcodec/avcodec.h	/^enum Motion_Est_ID {$/;"	g
NAN	libavutil/mathematics.h	64;"	d
PARSER_FLAG_COMPLETE_FRAMES	libavcodec/avcodec.h	5201;"	d
PARSER_FLAG_FETCHED_OFFSET	libavcodec/avcodec.h	5204;"	d
PARSER_FLAG_ONCE	libavcodec/avcodec.h	5202;"	d
PARSER_FLAG_USE_CODEC_TS	libavcodec/avcodec.h	5205;"	d
POSTPROC_POSTPROCESS_H	libpostproc/postprocess.h	22;"	d
POSTPROC_VERSION_H	libpostproc/version.h	22;"	d
PP_CPU_CAPS_3DNOW	libpostproc/postprocess.h	94;"	d
PP_CPU_CAPS_ALTIVEC	libpostproc/postprocess.h	95;"	d
PP_CPU_CAPS_AUTO	libpostproc/postprocess.h	96;"	d
PP_CPU_CAPS_MMX	libpostproc/postprocess.h	92;"	d
PP_CPU_CAPS_MMX2	libpostproc/postprocess.h	93;"	d
PP_FORMAT	libpostproc/postprocess.h	98;"	d
PP_FORMAT_411	libpostproc/postprocess.h	101;"	d
PP_FORMAT_420	libpostproc/postprocess.h	99;"	d
PP_FORMAT_422	libpostproc/postprocess.h	100;"	d
PP_FORMAT_440	libpostproc/postprocess.h	103;"	d
PP_FORMAT_444	libpostproc/postprocess.h	102;"	d
PP_PICT_TYPE_QP2	libpostproc/postprocess.h	105;"	d
PP_QUALITY_MAX	libpostproc/postprocess.h	54;"	d
PUT_UTF16	libavutil/common.h	448;"	d
PUT_UTF8	libavutil/common.h	414;"	d
Picture	libavcodec/vda.h	40;"	d
Picture	libavcodec/vda.h	42;"	d
Picture	libavcodec/videotoolbox.h	34;"	d
Picture	libavcodec/videotoolbox.h	36;"	d
QP_STORE_T	libpostproc/postprocess.h	57;"	d
RDFTContext	libavcodec/avfft.h	/^typedef struct RDFTContext RDFTContext;$/;"	t	typeref:struct:RDFTContext
RDFTransformType	libavcodec/avfft.h	/^enum RDFTransformType {$/;"	g
ROUNDED_DIV	libavutil/common.h	56;"	d
RSHIFT	libavutil/common.h	54;"	d
RcOverride	libavcodec/avcodec.h	/^typedef struct RcOverride{$/;"	s
RcOverride	libavcodec/avcodec.h	/^} RcOverride;$/;"	t	typeref:struct:RcOverride
ReSampleContext	libavcodec/avcodec.h	/^typedef struct ReSampleContext ReSampleContext;$/;"	t	typeref:struct:ReSampleContext
SLICE_FLAG_ALLOW_FIELD	libavcodec/avcodec.h	2306;"	d
SLICE_FLAG_ALLOW_PLANE	libavcodec/avcodec.h	2307;"	d
SLICE_FLAG_CODED_ORDER	libavcodec/avcodec.h	2305;"	d
SUBTITLE_ASS	libavcodec/avcodec.h	/^    SUBTITLE_ASS,$/;"	e	enum:AVSubtitleType
SUBTITLE_BITMAP	libavcodec/avcodec.h	/^    SUBTITLE_BITMAP,                \/\/\/< A bitmap, pict will be set$/;"	e	enum:AVSubtitleType
SUBTITLE_NONE	libavcodec/avcodec.h	/^    SUBTITLE_NONE,$/;"	e	enum:AVSubtitleType
SUBTITLE_TEXT	libavcodec/avcodec.h	/^    SUBTITLE_TEXT,$/;"	e	enum:AVSubtitleType
SWRESAMPLE_SWRESAMPLE_H	libswresample/swresample.h	22;"	d
SWRESAMPLE_VERSION_H	libswresample/version.h	22;"	d
SWR_DITHER_NB	libswresample/swresample.h	/^    SWR_DITHER_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NONE	libswresample/swresample.h	/^    SWR_DITHER_NONE = 0,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS	libswresample/swresample.h	/^    SWR_DITHER_NS = 64,         \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_F_WEIGHTED	libswresample/swresample.h	/^    SWR_DITHER_NS_F_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_HIGH_SHIBATA	libswresample/swresample.h	/^    SWR_DITHER_NS_HIGH_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_IMPROVED_E_WEIGHTED	libswresample/swresample.h	/^    SWR_DITHER_NS_IMPROVED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LIPSHITZ	libswresample/swresample.h	/^    SWR_DITHER_NS_LIPSHITZ,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LOW_SHIBATA	libswresample/swresample.h	/^    SWR_DITHER_NS_LOW_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_MODIFIED_E_WEIGHTED	libswresample/swresample.h	/^    SWR_DITHER_NS_MODIFIED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_SHIBATA	libswresample/swresample.h	/^    SWR_DITHER_NS_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_RECTANGULAR	libswresample/swresample.h	/^    SWR_DITHER_RECTANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR	libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR_HIGHPASS	libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR_HIGHPASS,$/;"	e	enum:SwrDitherType
SWR_ENGINE_NB	libswresample/swresample.h	/^    SWR_ENGINE_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrEngine
SWR_ENGINE_SOXR	libswresample/swresample.h	/^    SWR_ENGINE_SOXR,            \/**< SoX Resampler *\/$/;"	e	enum:SwrEngine
SWR_ENGINE_SWR	libswresample/swresample.h	/^    SWR_ENGINE_SWR,             \/**< SW Resampler *\/$/;"	e	enum:SwrEngine
SWR_FILTER_TYPE_BLACKMAN_NUTTALL	libswresample/swresample.h	/^    SWR_FILTER_TYPE_BLACKMAN_NUTTALL,   \/**< Blackman Nuttall windowed sinc *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_CUBIC	libswresample/swresample.h	/^    SWR_FILTER_TYPE_CUBIC,              \/**< Cubic *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_KAISER	libswresample/swresample.h	/^    SWR_FILTER_TYPE_KAISER,             \/**< Kaiser windowed sinc *\/$/;"	e	enum:SwrFilterType
SWR_FLAG_RESAMPLE	libswresample/swresample.h	136;"	d
SWSCALE_SWSCALE_H	libswscale/swscale.h	22;"	d
SWSCALE_VERSION_H	libswscale/version.h	20;"	d
SWS_ACCURATE_RND	libswscale/swscale.h	83;"	d
SWS_AREA	libswscale/swscale.h	63;"	d
SWS_BICUBIC	libswscale/swscale.h	60;"	d
SWS_BICUBLIN	libswscale/swscale.h	64;"	d
SWS_BILINEAR	libswscale/swscale.h	59;"	d
SWS_BITEXACT	libswscale/swscale.h	84;"	d
SWS_CS_BT2020	libswscale/swscale.h	96;"	d
SWS_CS_DEFAULT	libswscale/swscale.h	95;"	d
SWS_CS_FCC	libswscale/swscale.h	90;"	d
SWS_CS_ITU601	libswscale/swscale.h	91;"	d
SWS_CS_ITU624	libswscale/swscale.h	92;"	d
SWS_CS_ITU709	libswscale/swscale.h	89;"	d
SWS_CS_SMPTE170M	libswscale/swscale.h	93;"	d
SWS_CS_SMPTE240M	libswscale/swscale.h	94;"	d
SWS_DIRECT_BGR	libswscale/swscale.h	82;"	d
SWS_ERROR_DIFFUSION	libswscale/swscale.h	85;"	d
SWS_FAST_BILINEAR	libswscale/swscale.h	58;"	d
SWS_FULL_CHR_H_INP	libswscale/swscale.h	81;"	d
SWS_FULL_CHR_H_INT	libswscale/swscale.h	79;"	d
SWS_GAUSS	libswscale/swscale.h	65;"	d
SWS_LANCZOS	libswscale/swscale.h	67;"	d
SWS_MAX_REDUCE_CUTOFF	libswscale/swscale.h	87;"	d
SWS_PARAM_DEFAULT	libswscale/swscale.h	73;"	d
SWS_POINT	libswscale/swscale.h	62;"	d
SWS_PRINT_INFO	libswscale/swscale.h	75;"	d
SWS_SINC	libswscale/swscale.h	66;"	d
SWS_SPLINE	libswscale/swscale.h	68;"	d
SWS_SRC_V_CHR_DROP_MASK	libswscale/swscale.h	70;"	d
SWS_SRC_V_CHR_DROP_SHIFT	libswscale/swscale.h	71;"	d
SWS_X	libswscale/swscale.h	61;"	d
SwrContext	libswresample/swresample.h	/^typedef struct SwrContext SwrContext;$/;"	t	typeref:struct:SwrContext
SwrDitherType	libswresample/swresample.h	/^enum SwrDitherType {$/;"	g
SwrEngine	libswresample/swresample.h	/^enum SwrEngine {$/;"	g
SwrFilterType	libswresample/swresample.h	/^enum SwrFilterType {$/;"	g
SwsFilter	libswscale/swscale.h	/^typedef struct SwsFilter {$/;"	s
SwsFilter	libswscale/swscale.h	/^} SwsFilter;$/;"	t	typeref:struct:SwsFilter
SwsVector	libswscale/swscale.h	/^typedef struct SwsVector {$/;"	s
SwsVector	libswscale/swscale.h	/^} SwsVector;$/;"	t	typeref:struct:SwsVector
VORBIS_FLAG_COMMENT	libavcodec/vorbis_parser.h	45;"	d
VORBIS_FLAG_HEADER	libavcodec/vorbis_parser.h	44;"	d
VORBIS_FLAG_SETUP	libavcodec/vorbis_parser.h	46;"	d
_WIN32_WINNT	libavcodec/d3d11va.h	34;"	d
_WIN32_WINNT	libavcodec/d3d11va.h	35;"	d
_WIN32_WINNT	libavcodec/dxva2.h	33;"	d
_WIN32_WINNT	libavcodec/dxva2.h	34;"	d
__GNUC_STDC_INLINE__	libavcodec/vda.h	38;"	d
access_timestamp	libavformat/avio.h	/^    int64_t access_timestamp;             \/**< Time of last access in microseconds since unix epoch,$/;"	m	struct:AVIODirEntry
activate	libavfilter/avfilter.h	/^    int (*activate)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
active_thread_type	libavcodec/avcodec.h	/^    int active_thread_type;$/;"	m	struct:AVCodecContext
age_index	libavfilter/avfilter.h	/^    int age_index;$/;"	m	struct:AVFilterLink
album_gain	libavutil/replaygain.h	/^    int32_t album_gain;$/;"	m	struct:AVReplayGain
album_peak	libavutil/replaygain.h	/^    uint32_t album_peak;$/;"	m	struct:AVReplayGain
alias	libavutil/pixdesc.h	/^    const char *alias;$/;"	m	struct:AVPixFmtDescriptor
all_channel_counts	libavfilter/buffersink.h	/^    int all_channel_counts;                 \/\/\/< if not 0, accept any channel count or layout$/;"	m	struct:AVABufferSinkParams
alloc_frame	libavcodec/avcodec.h	/^    int (*alloc_frame)(AVCodecContext *avctx, AVFrame *frame);$/;"	m	struct:AVHWAccel
allocated_data_blocks	libavcodec/xvmc.h	/^    int             allocated_data_blocks;$/;"	m	struct:xvmc_pix_fmt
allocated_mv_blocks	libavcodec/xvmc.h	/^    int             allocated_mv_blocks;$/;"	m	struct:xvmc_pix_fmt
apply_cropping	libavcodec/avcodec.h	/^    int apply_cropping;$/;"	m	struct:AVCodecContext
aresample_swr_opts	libavfilter/avfilter.h	/^    char *aresample_swr_opts; \/\/\/< swr options to use for the auto-inserted aresample filters, Access ONLY through AVOptions$/;"	m	struct:AVFilterGraph
args	libavcodec/avcodec.h	/^    char *args;$/;"	m	struct:AVBitStreamFilterContext
aspect_ratio_index	libavcodec/dirac.h	/^    uint8_t aspect_ratio_index;     \/\/\/< index into dirac_aspect_ratio[]$/;"	m	struct:AVDiracSeqHeader
ass	libavcodec/avcodec.h	/^    char *ass;$/;"	m	struct:AVSubtitleRect
attached_pic	libavformat/avformat.h	/^    AVPacket attached_pic;$/;"	m	struct:AVStream
attribute_deprecated	libavutil/attributes.h	94;"	d
attribute_deprecated	libavutil/attributes.h	96;"	d
attribute_deprecated	libavutil/attributes.h	98;"	d
attributes	libavutil/hwcontext_vaapi.h	/^    VASurfaceAttrib *attributes;$/;"	m	struct:AVVAAPIFramesContext
audio_codec	libavformat/avformat.h	/^    AVCodec *audio_codec;$/;"	m	struct:AVFormatContext
audio_codec	libavformat/avformat.h	/^    enum AVCodecID audio_codec;    \/**< default audio codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
audio_codec_id	libavformat/avformat.h	/^    enum AVCodecID audio_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
audio_min_samples	libavcodec/dv_profile.h	/^    int              audio_min_samples[3];  \/* min amount of audio samples *\/$/;"	m	struct:AVDVProfile
audio_preload	libavformat/avformat.h	/^    int audio_preload;$/;"	m	struct:AVFormatContext
audio_samples_dist	libavcodec/dv_profile.h	/^    int              audio_samples_dist[5]; \/* how many samples are supposed to be *\/$/;"	m	struct:AVDVProfile
audio_service_type	libavcodec/avcodec.h	/^    enum AVAudioServiceType audio_service_type;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVAudioServiceType
audio_shuffle	libavcodec/dv_profile.h	/^    const uint8_t  (*audio_shuffle)[9];     \/* PCM shuffling table *\/$/;"	m	struct:AVDVProfile
audio_stride	libavcodec/dv_profile.h	/^    int              audio_stride;          \/* size of audio_shuffle table *\/$/;"	m	struct:AVDVProfile
av_alias	libavutil/attributes.h	142;"	d
av_alias	libavutil/attributes.h	144;"	d
av_alias	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_16
av_alias	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_32
av_alias	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_64
av_alias16	libavutil/intreadwrite.h	/^} av_alias av_alias16;$/;"	t	typeref:union:__anon13
av_alias32	libavutil/intreadwrite.h	/^} av_alias av_alias32;$/;"	t	typeref:union:__anon12
av_alias64	libavutil/intreadwrite.h	/^} av_alias av_alias64;$/;"	t	typeref:union:__anon11
av_alloc_size	libavutil/mem.h	156;"	d
av_alloc_size	libavutil/mem.h	158;"	d
av_always_inline	libavutil/attributes.h	39;"	d
av_always_inline	libavutil/attributes.h	41;"	d
av_always_inline	libavutil/attributes.h	43;"	d
av_assert0	libavutil/avassert.h	37;"	d
av_assert1	libavutil/avassert.h	51;"	d
av_assert1	libavutil/avassert.h	53;"	d
av_assert2	libavutil/avassert.h	61;"	d
av_assert2	libavutil/avassert.h	64;"	d
av_assert2_fpu	libavutil/avassert.h	62;"	d
av_assert2_fpu	libavutil/avassert.h	65;"	d
av_be2ne16	libavutil/bswap.h	83;"	d
av_be2ne16	libavutil/bswap.h	92;"	d
av_be2ne32	libavutil/bswap.h	84;"	d
av_be2ne32	libavutil/bswap.h	93;"	d
av_be2ne64	libavutil/bswap.h	85;"	d
av_be2ne64	libavutil/bswap.h	94;"	d
av_bprint_is_complete	libavutil/bprint.h	/^static inline int av_bprint_is_complete(const AVBPrint *buf)$/;"	f
av_bswap16	libavutil/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap32	libavutil/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap64	libavutil/bswap.h	/^static inline uint64_t av_const av_bswap64(uint64_t x)$/;"	f
av_builtin_constant_p	libavutil/attributes.h	154;"	d
av_builtin_constant_p	libavutil/attributes.h	157;"	d
av_ceil_log2	libavutil/common.h	478;"	d
av_ceil_log2_c	libavutil/common.h	/^static av_always_inline av_const int av_ceil_log2_c(int x)$/;"	f
av_class	libavcodec/avcodec.h	/^    const AVClass *av_class;$/;"	m	struct:AVBSFContext
av_class	libavcodec/avcodec.h	/^    const AVClass *av_class;$/;"	m	struct:AVCodecContext
av_class	libavcodec/avdct.h	/^    const AVClass *av_class;$/;"	m	struct:AVDCT
av_class	libavdevice/avdevice.h	/^    const AVClass *av_class;$/;"	m	struct:AVDeviceCapabilitiesQuery
av_class	libavfilter/avfilter.h	/^    const AVClass *av_class;        \/\/\/< needed for av_log() and filters common options$/;"	m	struct:AVFilterContext
av_class	libavfilter/avfilter.h	/^    const AVClass *av_class;$/;"	m	struct:AVFilterGraph
av_class	libavformat/avformat.h	/^    const AVClass *av_class;$/;"	m	struct:AVFormatContext
av_class	libavformat/avio.h	/^    const AVClass *av_class;$/;"	m	struct:AVIOContext
av_class	libavutil/hwcontext.h	/^    const AVClass *av_class;$/;"	m	struct:AVHWDeviceContext
av_class	libavutil/hwcontext.h	/^    const AVClass *av_class;$/;"	m	struct:AVHWFramesContext
av_clip	libavutil/common.h	481;"	d
av_clip64	libavutil/common.h	484;"	d
av_clip64_c	libavutil/common.h	/^static av_always_inline av_const int64_t av_clip64_c(int64_t a, int64_t amin, int64_t amax)$/;"	f
av_clip_c	libavutil/common.h	/^static av_always_inline av_const int av_clip_c(int a, int amin, int amax)$/;"	f
av_clip_int16	libavutil/common.h	496;"	d
av_clip_int16_c	libavutil/common.h	/^static av_always_inline av_const int16_t av_clip_int16_c(int a)$/;"	f
av_clip_int8	libavutil/common.h	490;"	d
av_clip_int8_c	libavutil/common.h	/^static av_always_inline av_const int8_t av_clip_int8_c(int a)$/;"	f
av_clip_intp2	libavutil/common.h	502;"	d
av_clip_intp2_c	libavutil/common.h	/^static av_always_inline av_const int av_clip_intp2_c(int a, int p)$/;"	f
av_clip_uint16	libavutil/common.h	493;"	d
av_clip_uint16_c	libavutil/common.h	/^static av_always_inline av_const uint16_t av_clip_uint16_c(int a)$/;"	f
av_clip_uint8	libavutil/common.h	487;"	d
av_clip_uint8_c	libavutil/common.h	/^static av_always_inline av_const uint8_t av_clip_uint8_c(int a)$/;"	f
av_clip_uintp2	libavutil/common.h	505;"	d
av_clip_uintp2_c	libavutil/common.h	/^static av_always_inline av_const unsigned av_clip_uintp2_c(int a, int p)$/;"	f
av_clipd	libavutil/common.h	520;"	d
av_clipd_c	libavutil/common.h	/^static av_always_inline av_const double av_clipd_c(double a, double amin, double amax)$/;"	f
av_clipf	libavutil/common.h	517;"	d
av_clipf_c	libavutil/common.h	/^static av_always_inline av_const float av_clipf_c(float a, float amin, float amax)$/;"	f
av_clipl_int32	libavutil/common.h	499;"	d
av_clipl_int32_c	libavutil/common.h	/^static av_always_inline av_const int32_t av_clipl_int32_c(int64_t a)$/;"	f
av_cmp_q	libavutil/rational.h	/^static inline int av_cmp_q(AVRational a, AVRational b){$/;"	f
av_cold	libavutil/attributes.h	82;"	d
av_cold	libavutil/attributes.h	84;"	d
av_const	libavutil/attributes.h	76;"	d
av_const	libavutil/attributes.h	78;"	d
av_dlog	libavutil/log.h	345;"	d
av_dlog	libavutil/log.h	347;"	d
av_double2int	libavutil/intfloat.h	/^static av_always_inline uint64_t av_double2int(double f)$/;"	f
av_err2str	libavutil/error.h	119;"	d
av_extern_inline	libavutil/attributes.h	49;"	d
av_extern_inline	libavutil/attributes.h	51;"	d
av_fifo_peek2	libavutil/fifo.h	/^static inline uint8_t *av_fifo_peek2(const AVFifoBuffer *f, int offs)$/;"	f
av_flatten	libavutil/attributes.h	88;"	d
av_flatten	libavutil/attributes.h	90;"	d
av_float2int	libavutil/intfloat.h	/^static av_always_inline uint32_t av_float2int(float f)$/;"	f
av_format_control_message	libavformat/avformat.h	/^typedef int (*av_format_control_message)(struct AVFormatContext *s, int type,$/;"	t
av_fourcc2str	libavutil/avutil.h	348;"	d
av_int2double	libavutil/intfloat.h	/^static av_always_inline double av_int2double(uint64_t i)$/;"	f
av_int2float	libavutil/intfloat.h	/^static av_always_inline float av_int2float(uint32_t i)$/;"	f
av_int_list_length	libavutil/avutil.h	331;"	d
av_intfloat32	libavutil/intfloat.h	/^union av_intfloat32 {$/;"	u
av_intfloat64	libavutil/intfloat.h	/^union av_intfloat64 {$/;"	u
av_inv_q	libavutil/rational.h	/^static av_always_inline AVRational av_inv_q(AVRational q)$/;"	f
av_isdigit	libavutil/avstring.h	/^static inline av_const int av_isdigit(int c)$/;"	f
av_isgraph	libavutil/avstring.h	/^static inline av_const int av_isgraph(int c)$/;"	f
av_isspace	libavutil/avstring.h	/^static inline av_const int av_isspace(int c)$/;"	f
av_isxdigit	libavutil/avstring.h	/^static inline av_const int av_isxdigit(int c)$/;"	f
av_le2ne16	libavutil/bswap.h	86;"	d
av_le2ne16	libavutil/bswap.h	95;"	d
av_le2ne32	libavutil/bswap.h	87;"	d
av_le2ne32	libavutil/bswap.h	96;"	d
av_le2ne64	libavutil/bswap.h	88;"	d
av_le2ne64	libavutil/bswap.h	97;"	d
av_lfg_get	libavutil/lfg.h	/^static inline unsigned int av_lfg_get(AVLFG *c){$/;"	f
av_make_error_string	libavutil/error.h	/^static inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)$/;"	f
av_make_q	libavutil/rational.h	/^static inline AVRational av_make_q(int num, int den)$/;"	f
av_malloc_array	libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_malloc_array(size_t nmemb, size_t size)$/;"	f
av_malloc_attrib	libavutil/mem.h	135;"	d
av_malloc_attrib	libavutil/mem.h	137;"	d
av_mallocz_array	libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_mallocz_array(size_t nmemb, size_t size)$/;"	f
av_mlfg_get	libavutil/lfg.h	/^static inline unsigned int av_mlfg_get(AVLFG *c){$/;"	f
av_mod_uintp2	libavutil/common.h	508;"	d
av_mod_uintp2_c	libavutil/common.h	/^static av_always_inline av_const unsigned av_mod_uintp2_c(unsigned a, unsigned p)$/;"	f
av_noinline	libavutil/attributes.h	62;"	d
av_noinline	libavutil/attributes.h	64;"	d
av_noinline	libavutil/attributes.h	66;"	d
av_noreturn	libavutil/attributes.h	162;"	d
av_noreturn	libavutil/attributes.h	164;"	d
av_opt_set_int_list	libavutil/opt.h	708;"	d
av_parity	libavutil/common.h	529;"	d
av_parity_c	libavutil/common.h	/^static av_always_inline av_const int av_parity_c(uint32_t v)$/;"	f
av_parse_ratio_quiet	libavutil/parseutils.h	52;"	d
av_pixelutils_sad_fn	libavutil/pixelutils.h	/^typedef int (*av_pixelutils_sad_fn)(const uint8_t *src1, ptrdiff_t stride1,$/;"	t
av_popcount	libavutil/common.h	523;"	d
av_popcount64	libavutil/common.h	526;"	d
av_popcount64_c	libavutil/common.h	/^static av_always_inline av_const int av_popcount64_c(uint64_t x)$/;"	f
av_popcount_c	libavutil/common.h	/^static av_always_inline av_const int av_popcount_c(uint32_t x)$/;"	f
av_printf_format	libavutil/attributes.h	155;"	d
av_printf_format	libavutil/attributes.h	158;"	d
av_pure	libavutil/attributes.h	70;"	d
av_pure	libavutil/attributes.h	72;"	d
av_q2d	libavutil/rational.h	/^static inline double av_q2d(AVRational a){$/;"	f
av_sat_add32	libavutil/common.h	511;"	d
av_sat_add32_c	libavutil/common.h	/^static av_always_inline int av_sat_add32_c(int a, int b)$/;"	f
av_sat_dadd32	libavutil/common.h	514;"	d
av_sat_dadd32_c	libavutil/common.h	/^static av_always_inline int av_sat_dadd32_c(int a, int b)$/;"	f
av_size_mult	libavutil/mem.h	/^static inline int av_size_mult(size_t a, size_t b, size_t *r)$/;"	f
av_strnlen	libavutil/avstring.h	/^static inline size_t av_strnlen(const char *s, size_t len)$/;"	f
av_tolower	libavutil/avstring.h	/^static inline av_const int av_tolower(int c)$/;"	f
av_toupper	libavutil/avstring.h	/^static inline av_const int av_toupper(int c)$/;"	f
av_ts2str	libavutil/timestamp.h	54;"	d
av_ts2timestr	libavutil/timestamp.h	76;"	d
av_ts_make_string	libavutil/timestamp.h	/^static inline char *av_ts_make_string(char *buf, int64_t ts)$/;"	f
av_ts_make_time_string	libavutil/timestamp.h	/^static inline char *av_ts_make_time_string(char *buf, int64_t ts, AVRational *tb)$/;"	f
av_uninit	libavutil/attributes.h	148;"	d
av_uninit	libavutil/attributes.h	150;"	d
av_unused	libavutil/attributes.h	125;"	d
av_unused	libavutil/attributes.h	127;"	d
av_used	libavutil/attributes.h	136;"	d
av_used	libavutil/attributes.h	138;"	d
av_warn_unused_result	libavutil/attributes.h	56;"	d
av_warn_unused_result	libavutil/attributes.h	58;"	d
av_x_if_null	libavutil/avutil.h	/^static inline void *av_x_if_null(const void *p, const void *x)$/;"	f
avfilter_action_func	libavfilter/avfilter.h	/^typedef int (avfilter_action_func)(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs);$/;"	t
avfilter_execute_func	libavfilter/avfilter.h	/^typedef int (avfilter_execute_func)(AVFilterContext *ctx, avfilter_action_func *func,$/;"	t
avg_bitrate	libavcodec/avcodec.h	/^    int avg_bitrate;$/;"	m	struct:AVCPBProperties
avg_frame_rate	libavformat/avformat.h	/^    AVRational avg_frame_rate;$/;"	m	struct:AVStream
avio_flags	libavformat/avformat.h	/^    int avio_flags;$/;"	m	struct:AVFormatContext
avio_tell	libavformat/avio.h	/^static av_always_inline int64_t avio_tell(AVIOContext *s)$/;"	f
avoid_negative_ts	libavformat/avformat.h	/^    int avoid_negative_ts;$/;"	m	struct:AVFormatContext
b_frame_strategy	libavcodec/avcodec.h	/^    int b_frame_strategy;$/;"	m	struct:AVCodecContext
b_quant_factor	libavcodec/avcodec.h	/^    float b_quant_factor;$/;"	m	struct:AVCodecContext
b_quant_offset	libavcodec/avcodec.h	/^    float b_quant_offset;$/;"	m	struct:AVCodecContext
b_sensitivity	libavcodec/avcodec.h	/^    int b_sensitivity;$/;"	m	struct:AVCodecContext
best_effort_timestamp	libavutil/frame.h	/^    int64_t best_effort_timestamp;$/;"	m	struct:AVFrame
bidir_refine	libavcodec/avcodec.h	/^    int bidir_refine;$/;"	m	struct:AVCodecContext
bit_depth	libavcodec/dirac.h	/^    int bit_depth;$/;"	m	struct:AVDiracSeqHeader
bit_rate	libavcodec/avcodec.h	/^    int64_t bit_rate;$/;"	m	struct:AVCodecContext
bit_rate	libavcodec/avcodec.h	/^    int64_t bit_rate;$/;"	m	struct:AVCodecParameters
bit_rate	libavformat/avformat.h	/^    int64_t bit_rate;$/;"	m	struct:AVFormatContext
bit_rate_tolerance	libavcodec/avcodec.h	/^    int bit_rate_tolerance;$/;"	m	struct:AVCodecContext
bitplane_buf_id	libavcodec/vaapi.h	/^    uint32_t bitplane_buf_id;$/;"	m	struct:vaapi_context
bits_per_coded_sample	libavcodec/avcodec.h	/^     int bits_per_coded_sample;$/;"	m	struct:AVCodecContext
bits_per_coded_sample	libavcodec/avcodec.h	/^    int bits_per_coded_sample;$/;"	m	struct:AVCodecParameters
bits_per_raw_sample	libavcodec/avcodec.h	/^    int bits_per_raw_sample;$/;"	m	struct:AVCodecContext
bits_per_raw_sample	libavcodec/avcodec.h	/^    int bits_per_raw_sample;$/;"	m	struct:AVCodecParameters
bits_per_sample	libavcodec/avdct.h	/^    int bits_per_sample;$/;"	m	struct:AVDCT
bitstream_buffers	libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:AVVDPAUContext
bitstream_buffers	libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:vdpau_render_state
bitstream_buffers_allocated	libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_allocated	libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:vdpau_render_state
bitstream_buffers_used	libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_used	libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:vdpau_render_state
block_align	libavcodec/avcodec.h	/^    int      block_align;$/;"	m	struct:AVCodecParameters
block_align	libavcodec/avcodec.h	/^    int block_align;$/;"	m	struct:AVCodecContext
block_sizes	libavcodec/dv_profile.h	/^    const uint8_t   *block_sizes;           \/* AC block sizes, in bits *\/$/;"	m	struct:AVDVProfile
border_masking	libavcodec/avcodec.h	/^    float border_masking;$/;"	m	struct:AVCodecContext
bound_bottom	libavutil/spherical.h	/^    uint32_t bound_bottom; \/\/\/< Distance from the bottom edge$/;"	m	struct:AVSphericalMapping
bound_left	libavutil/spherical.h	/^    uint32_t bound_left;   \/\/\/< Distance from the left edge$/;"	m	struct:AVSphericalMapping
bound_right	libavutil/spherical.h	/^    uint32_t bound_right;  \/\/\/< Distance from the right edge$/;"	m	struct:AVSphericalMapping
bound_top	libavutil/spherical.h	/^    uint32_t bound_top;    \/\/\/< Distance from the top edge$/;"	m	struct:AVSphericalMapping
bpm	libavcodec/dv_profile.h	/^    int              bpm;                   \/* blocks per macroblock *\/$/;"	m	struct:AVDVProfile
brd_scale	libavcodec/avcodec.h	/^    int brd_scale;$/;"	m	struct:AVCodecContext
bsfs	libavcodec/avcodec.h	/^    const char *bsfs;$/;"	m	struct:AVCodec
buf	libavcodec/avcodec.h	/^    AVBufferRef *buf;$/;"	m	struct:AVPacket
buf	libavformat/avformat.h	/^    unsigned char *buf; \/**< Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero. *\/$/;"	m	struct:AVProbeData
buf	libavutil/frame.h	/^    AVBufferRef *buf;$/;"	m	struct:AVFrameSideData
buf	libavutil/frame.h	/^    AVBufferRef *buf[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
buf_end	libavformat/avio.h	/^    unsigned char *buf_end; \/**< End of the data, may be less than$/;"	m	struct:AVIOContext
buf_ptr	libavformat/avio.h	/^    unsigned char *buf_ptr; \/**< Current position in the buffer *\/$/;"	m	struct:AVIOContext
buf_ptr_max	libavformat/avio.h	/^    unsigned char *buf_ptr_max;$/;"	m	struct:AVIOContext
buf_size	libavformat/avformat.h	/^    int buf_size;       \/**< Size of buf except extra allocated bytes *\/$/;"	m	struct:AVProbeData
buffer	libavformat/avio.h	/^    unsigned char *buffer;  \/**< Start of the buffer. *\/$/;"	m	struct:AVIOContext
buffer	libavutil/buffer.h	/^    AVBuffer *buffer;$/;"	m	struct:AVBufferRef
buffer	libavutil/fifo.h	/^    uint8_t *buffer;$/;"	m	struct:AVFifoBuffer
buffer_size	libavcodec/avcodec.h	/^    int buffer_size;$/;"	m	struct:AVCPBProperties
buffer_size	libavformat/avio.h	/^    int buffer_size;        \/**< Maximum buffer size *\/$/;"	m	struct:AVIOContext
bytes_read	libavformat/avio.h	/^    int64_t bytes_read;$/;"	m	struct:AVIOContext
callback	libavformat/avio.h	/^    int (*callback)(void*);$/;"	m	struct:AVIOInterruptCB
capabilities	libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVCodec
capabilities	libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVHWAccel
caps_internal	libavcodec/avcodec.h	/^    int caps_internal;$/;"	m	struct:AVCodec
caps_internal	libavcodec/avcodec.h	/^    int caps_internal;$/;"	m	struct:AVHWAccel
category	libavutil/log.h	/^    AVClassCategory category;$/;"	m	struct:AVClass
center_mix_level	libavutil/downmix_info.h	/^    double center_mix_level;$/;"	m	struct:AVDownmixInfo
center_mix_level_ltrt	libavutil/downmix_info.h	/^    double center_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
cfg	libavcodec/d3d11va.h	/^    D3D11_VIDEO_DECODER_CONFIG *cfg;$/;"	m	struct:AVD3D11VAContext
cfg	libavcodec/dxva2.h	/^    const DXVA2_ConfigPictureDecode *cfg;$/;"	m	struct:dxva_context
channel_counts	libavfilter/buffersink.h	/^    const int *channel_counts;              \/\/\/< list of allowed channel counts, terminated by -1$/;"	m	struct:AVABufferSinkParams
channel_layout	libavcodec/avcodec.h	/^    uint64_t channel_layout;$/;"	m	struct:AVCodecContext
channel_layout	libavcodec/avcodec.h	/^    uint64_t channel_layout;$/;"	m	struct:AVCodecParameters
channel_layout	libavdevice/avdevice.h	/^    int64_t channel_layout;$/;"	m	struct:AVDeviceCapabilitiesQuery
channel_layout	libavfilter/avfilter.h	/^    uint64_t channel_layout;    \/\/\/< channel layout of current buffer (see libavutil\/channel_layout.h)$/;"	m	struct:AVFilterLink
channel_layout	libavfilter/buffersrc.h	/^    uint64_t channel_layout;$/;"	m	struct:AVBufferSrcParameters
channel_layout	libavutil/frame.h	/^    uint64_t channel_layout;$/;"	m	struct:AVFrame
channel_layouts	libavcodec/avcodec.h	/^    const uint64_t *channel_layouts;         \/\/\/< array of support channel layouts, or NULL if unknown. array is terminated by 0$/;"	m	struct:AVCodec
channel_layouts	libavfilter/buffersink.h	/^    const int64_t *channel_layouts;         \/\/\/< list of allowed channel layouts, terminated by -1$/;"	m	struct:AVABufferSinkParams
channels	libavcodec/avcodec.h	/^    int      channels;$/;"	m	struct:AVCodecParameters
channels	libavcodec/avcodec.h	/^    int channels;    \/\/\/< number of audio channels$/;"	m	struct:AVCodecContext
channels	libavdevice/avdevice.h	/^    int channels;$/;"	m	struct:AVDeviceCapabilitiesQuery
channels	libavfilter/avfilter.h	/^    int channels;$/;"	m	struct:AVFilterLink
channels	libavutil/frame.h	/^    int channels;$/;"	m	struct:AVFrame
chapters	libavformat/avformat.h	/^    AVChapter **chapters;$/;"	m	struct:AVFormatContext
check_bitstream	libavformat/avformat.h	/^    int (*check_bitstream)(struct AVFormatContext *, const AVPacket *pkt);$/;"	m	struct:AVOutputFormat
checksum	libavformat/avio.h	/^    unsigned long checksum;$/;"	m	struct:AVIOContext
checksum_ptr	libavformat/avio.h	/^    unsigned char *checksum_ptr;$/;"	m	struct:AVIOContext
child_class_next	libavutil/log.h	/^    const struct AVClass* (*child_class_next)(const struct AVClass *prev);$/;"	m	struct:AVClass	typeref:struct:AVClass::child_class_next
child_next	libavutil/log.h	/^    void* (*child_next)(void *obj, void *prev);$/;"	m	struct:AVClass
chrH	libswscale/swscale.h	/^    SwsVector *chrH;$/;"	m	struct:SwsFilter
chrV	libswscale/swscale.h	/^    SwsVector *chrV;$/;"	m	struct:SwsFilter
chroma_format	libavcodec/dirac.h	/^    uint8_t chroma_format;          \/\/\/< 0: 444  1: 422  2: 420$/;"	m	struct:AVDiracSeqHeader
chroma_intra_matrix	libavcodec/avcodec.h	/^    uint16_t *chroma_intra_matrix;$/;"	m	struct:AVCodecContext
chroma_location	libavcodec/avcodec.h	/^    enum AVChromaLocation              chroma_location;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVChromaLocation
chroma_location	libavutil/frame.h	/^    enum AVChromaLocation chroma_location;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVChromaLocation
chroma_sample_location	libavcodec/avcodec.h	/^    enum AVChromaLocation chroma_sample_location;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVChromaLocation
chromaoffset	libavcodec/avcodec.h	/^    int chromaoffset;$/;"	m	struct:AVCodecContext
class_name	libavutil/log.h	/^    const char* class_name;$/;"	m	struct:AVClass
clean_height	libavcodec/dirac.h	/^    uint16_t clean_height;$/;"	m	struct:AVDiracSeqHeader
clean_left_offset	libavcodec/dirac.h	/^    uint16_t clean_left_offset;$/;"	m	struct:AVDiracSeqHeader
clean_right_offset	libavcodec/dirac.h	/^    uint16_t clean_right_offset;$/;"	m	struct:AVDiracSeqHeader
clean_width	libavcodec/dirac.h	/^    uint16_t clean_width;$/;"	m	struct:AVDiracSeqHeader
close	libavcodec/avcodec.h	/^    int (*close)(AVCodecContext *);$/;"	m	struct:AVCodec
close	libavcodec/avcodec.h	/^    void (*close)(AVBSFContext *ctx);$/;"	m	struct:AVBitStreamFilter
cm_codec_type	libavcodec/videotoolbox.h	/^    int cm_codec_type;$/;"	m	struct:AVVideotoolboxContext
cm_fmt_desc	libavcodec/videotoolbox.h	/^    CMVideoFormatDescriptionRef cm_fmt_desc;$/;"	m	struct:AVVideotoolboxContext
codec	libavcodec/avcodec.h	/^    const struct AVCodec  *codec;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodec
codec	libavdevice/avdevice.h	/^    enum AVCodecID codec;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVCodecID
codec	libavformat/avformat.h	/^    AVCodecContext *codec;$/;"	m	struct:AVStream
codec_descriptor	libavcodec/avcodec.h	/^    const AVCodecDescriptor *codec_descriptor;$/;"	m	struct:AVCodecContext
codec_id	libavcodec/avcodec.h	/^    enum AVCodecID     codec_id; \/* see AV_CODEC_ID_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVCodecID
codec_id	libavcodec/avcodec.h	/^    enum AVCodecID   codec_id;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVCodecID
codec_ids	libavcodec/avcodec.h	/^    const enum AVCodecID *codec_ids;$/;"	m	struct:AVBitStreamFilter	typeref:enum:AVBitStreamFilter::AVCodecID
codec_ids	libavcodec/avcodec.h	/^    int codec_ids[5]; \/* several codec IDs are permitted *\/$/;"	m	struct:AVCodecParser
codec_info_duration	libavformat/avformat.h	/^        int64_t codec_info_duration;$/;"	m	struct:AVStream::__anon5
codec_info_duration_fields	libavformat/avformat.h	/^        int64_t codec_info_duration_fields;$/;"	m	struct:AVStream::__anon5
codec_info_nb_frames	libavformat/avformat.h	/^    int codec_info_nb_frames;$/;"	m	struct:AVStream
codec_name	libavcodec/avcodec.h	/^    char             codec_name[32];$/;"	m	struct:AVCodecContext
codec_tag	libavcodec/avcodec.h	/^    uint32_t         codec_tag;$/;"	m	struct:AVCodecParameters
codec_tag	libavcodec/avcodec.h	/^    unsigned int codec_tag;$/;"	m	struct:AVCodecContext
codec_tag	libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVInputFormat
codec_tag	libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVOutputFormat
codec_type	libavcodec/avcodec.h	/^    enum AVMediaType codec_type; \/* see AVMEDIA_TYPE_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVMediaType
codec_type	libavcodec/avcodec.h	/^    enum AVMediaType codec_type;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVMediaType
codec_whitelist	libavcodec/avcodec.h	/^    char *codec_whitelist;$/;"	m	struct:AVCodecContext
codec_whitelist	libavformat/avformat.h	/^    char *codec_whitelist;$/;"	m	struct:AVFormatContext
codecpar	libavformat/avformat.h	/^    AVCodecParameters *codecpar;$/;"	m	struct:AVStream
coded_frame	libavcodec/avcodec.h	/^    attribute_deprecated AVFrame *coded_frame;$/;"	m	struct:AVCodecContext
coded_height	libavcodec/avcodec.h	/^    int coded_height;$/;"	m	struct:AVCodecParserContext
coded_height	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_picture_number	libavutil/frame.h	/^    int coded_picture_number;$/;"	m	struct:AVFrame
coded_side_data	libavcodec/avcodec.h	/^    AVPacketSideData *coded_side_data;$/;"	m	struct:AVCodecContext
coded_width	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_width	libavcodec/avcodec.h	/^    int coded_width;$/;"	m	struct:AVCodecParserContext
coder_type	libavcodec/avcodec.h	/^    int coder_type;$/;"	m	struct:AVCodecContext
coeff	libswscale/swscale.h	/^    double *coeff;              \/\/\/< pointer to the list of coefficients$/;"	m	struct:SwsVector
color_primaries	libavcodec/avcodec.h	/^    enum AVColorPrimaries              color_primaries;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVColorPrimaries
color_primaries	libavcodec/avcodec.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorPrimaries
color_primaries	libavcodec/dirac.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVDiracSeqHeader	typeref:enum:AVDiracSeqHeader::AVColorPrimaries
color_primaries	libavutil/frame.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorPrimaries
color_range	libavcodec/avcodec.h	/^    enum AVColorRange                  color_range;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVColorRange
color_range	libavcodec/avcodec.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorRange
color_range	libavcodec/dirac.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVDiracSeqHeader	typeref:enum:AVDiracSeqHeader::AVColorRange
color_range	libavutil/frame.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorRange
color_space	libavcodec/avcodec.h	/^    enum AVColorSpace                  color_space;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVColorSpace
color_spec_index	libavcodec/dirac.h	/^    uint8_t color_spec_index;       \/\/\/< index into dirac_color_spec_presets[]$/;"	m	struct:AVDiracSeqHeader
color_trc	libavcodec/avcodec.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorTransferCharacteristic
color_trc	libavcodec/avcodec.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVColorTransferCharacteristic
color_trc	libavcodec/dirac.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVDiracSeqHeader	typeref:enum:AVDiracSeqHeader::AVColorTransferCharacteristic
color_trc	libavutil/frame.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorTransferCharacteristic
colorspace	libavcodec/avcodec.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorSpace
colorspace	libavcodec/dirac.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVDiracSeqHeader	typeref:enum:AVDiracSeqHeader::AVColorSpace
colorspace	libavutil/frame.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorSpace
command_queue	libavfilter/avfilter.h	/^    struct AVFilterCommand *command_queue;$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterCommand
comp	libavutil/pixdesc.h	/^    AVComponentDescriptor comp[4];$/;"	m	struct:AVPixFmtDescriptor
component_max	libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
component_min	libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
compression_level	libavcodec/avcodec.h	/^    int compression_level;$/;"	m	struct:AVCodecContext
config_id	libavcodec/vaapi.h	/^    uint32_t config_id;$/;"	m	struct:vaapi_context
config_id	libavutil/hwcontext_vaapi.h	/^    VAConfigID config_id;$/;"	m	struct:AVVAAPIHWConfig
context_id	libavcodec/vaapi.h	/^    uint32_t context_id;$/;"	m	struct:vaapi_context
context_model	libavcodec/avcodec.h	/^    int context_model;$/;"	m	struct:AVCodecContext
context_mutex	libavcodec/d3d11va.h	/^    HANDLE  context_mutex;$/;"	m	struct:AVD3D11VAContext
control_message	libavformat/avformat.h	/^    int (*control_message)(struct AVFormatContext *s, int type,$/;"	m	struct:AVOutputFormat
control_message_cb	libavformat/avformat.h	/^    av_format_control_message control_message_cb;$/;"	m	struct:AVFormatContext
convergence_duration	libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVCodecParserContext
convergence_duration	libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVPacket
correct_ts_overflow	libavformat/avformat.h	/^    unsigned int correct_ts_overflow;$/;"	m	struct:AVFormatContext
create_device_capabilities	libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
create_device_capabilities	libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
crop_bottom	libavutil/frame.h	/^    size_t crop_bottom;$/;"	m	struct:AVFrame
crop_left	libavutil/frame.h	/^    size_t crop_left;$/;"	m	struct:AVFrame
crop_right	libavutil/frame.h	/^    size_t crop_right;$/;"	m	struct:AVFrame
crop_top	libavutil/frame.h	/^    size_t crop_top;$/;"	m	struct:AVFrame
ctx_flags	libavformat/avformat.h	/^    int ctx_flags;$/;"	m	struct:AVFormatContext
cuda_ctx	libavutil/hwcontext_cuda.h	/^    CUcontext cuda_ctx;$/;"	m	struct:AVCUDADeviceContext
cur_dts	libavformat/avformat.h	/^    int64_t cur_dts;$/;"	m	struct:AVStream
cur_frame_dts	libavcodec/avcodec.h	/^    int64_t cur_frame_dts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_end	libavcodec/avcodec.h	/^    int64_t cur_frame_end[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_offset	libavcodec/avcodec.h	/^    int64_t cur_frame_offset[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pos	libavcodec/avcodec.h	/^    int64_t cur_frame_pos[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pts	libavcodec/avcodec.h	/^    int64_t cur_frame_pts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_start_index	libavcodec/avcodec.h	/^    int cur_frame_start_index;$/;"	m	struct:AVCodecParserContext
cur_offset	libavcodec/avcodec.h	/^    int64_t cur_offset; \/* current offset$/;"	m	struct:AVCodecParserContext
current_pts	libavfilter/avfilter.h	/^    int64_t current_pts;$/;"	m	struct:AVFilterLink
current_pts_us	libavfilter/avfilter.h	/^    int64_t current_pts_us;$/;"	m	struct:AVFilterLink
current_type	libavformat/avio.h	/^    enum AVIODataMarkerType current_type;$/;"	m	struct:AVIOContext	typeref:enum:AVIOContext::AVIODataMarkerType
cutoff	libavcodec/avcodec.h	/^    int cutoff;$/;"	m	struct:AVCodecContext
cv_buffer	libavcodec/vda.h	/^    CVPixelBufferRef    cv_buffer;$/;"	m	struct:vda_context
cv_pix_fmt_type	libavcodec/vda.h	/^    OSType              cv_pix_fmt_type;$/;"	m	struct:vda_context
cv_pix_fmt_type	libavcodec/vda.h	/^    OSType cv_pix_fmt_type;$/;"	m	struct:AVVDAContext
cv_pix_fmt_type	libavcodec/videotoolbox.h	/^    OSType cv_pix_fmt_type;$/;"	m	struct:AVVideotoolboxContext
dark_masking	libavcodec/avcodec.h	/^    float dark_masking;$/;"	m	struct:AVCodecContext
data	libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacket
data	libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacketSideData
data	libavcodec/avcodec.h	/^    uint8_t *data[4];$/;"	m	struct:AVSubtitleRect
data	libavcodec/avcodec.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];    \/\/\/< pointers to the image data planes$/;"	m	struct:AVPicture
data	libavutil/buffer.h	/^    uint8_t *data;$/;"	m	struct:AVBufferRef
data	libavutil/frame.h	/^    uint8_t *data;$/;"	m	struct:AVFrameSideData
data	libavutil/frame.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
data_blocks	libavcodec/xvmc.h	/^    short*          data_blocks;$/;"	m	struct:xvmc_pix_fmt
data_codec	libavformat/avformat.h	/^    AVCodec *data_codec;$/;"	m	struct:AVFormatContext
data_codec	libavformat/avformat.h	/^    enum AVCodecID data_codec; \/**< default data codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
data_codec_id	libavformat/avformat.h	/^    enum AVCodecID data_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
dbl	libavutil/opt.h	/^        double dbl;$/;"	m	union:AVOption::__anon15
dct_algo	libavcodec/avcodec.h	/^    int dct_algo;$/;"	m	struct:AVCodecContext
dct_algo	libavcodec/avdct.h	/^    int dct_algo;$/;"	m	struct:AVDCT
debug	libavcodec/avcodec.h	/^    int debug;$/;"	m	struct:AVCodecContext
debug	libavformat/avformat.h	/^    int debug;$/;"	m	struct:AVFormatContext
debug_mv	libavcodec/avcodec.h	/^    int debug_mv;$/;"	m	struct:AVCodecContext
decode	libavcodec/avcodec.h	/^    int (*decode)(AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt);$/;"	m	struct:AVCodec
decode_error_flags	libavutil/frame.h	/^    int decode_error_flags;$/;"	m	struct:AVFrame
decode_mb	libavcodec/avcodec.h	/^    void (*decode_mb)(struct MpegEncContext *s);$/;"	m	struct:AVHWAccel
decode_slice	libavcodec/avcodec.h	/^    int (*decode_slice)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
decoder	libavcodec/d3d11va.h	/^    ID3D11VideoDecoder *decoder;$/;"	m	struct:AVD3D11VAContext
decoder	libavcodec/dxva2.h	/^    IDirectXVideoDecoder *decoder;$/;"	m	struct:dxva_context
decoder	libavcodec/vda.h	/^    VDADecoder          decoder;$/;"	m	struct:vda_context
decoder	libavcodec/vda.h	/^    VDADecoder decoder;$/;"	m	struct:AVVDAContext
decoder	libavcodec/vdpau.h	/^    VdpDecoder decoder;$/;"	m	struct:AVVDPAUContext
decoder_to_release	libavutil/hwcontext_dxva2.h	/^    IDirectXVideoDecoder *decoder_to_release;$/;"	m	struct:AVDXVA2FramesContext
default_device	libavdevice/avdevice.h	/^    int default_device;                  \/**< index of default device or -1 if no default *\/$/;"	m	struct:AVDeviceInfoList
default_val	libavutil/opt.h	/^    } default_val;$/;"	m	struct:AVOption	typeref:union:AVOption::__anon15
defaults	libavcodec/avcodec.h	/^    const AVCodecDefault *defaults;$/;"	m	struct:AVCodec
deinit	libavformat/avformat.h	/^    void (*deinit)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
delay	libavcodec/avcodec.h	/^    int delay;$/;"	m	struct:AVCodecContext
den	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
den	libavutil/rational.h	/^    int den; \/\/\/< Denominator$/;"	m	struct:AVRational
depth	libavutil/pixdesc.h	/^    int depth;$/;"	m	struct:AVComponentDescriptor
depth_minus1	libavutil/pixdesc.h	/^    attribute_deprecated int depth_minus1;$/;"	m	struct:AVComponentDescriptor
description	libavfilter/avfilter.h	/^    const char *description;$/;"	m	struct:AVFilter
device	libavutil/hwcontext_d3d11va.h	/^    ID3D11Device        *device;$/;"	m	struct:AVD3D11VADeviceContext
device	libavutil/hwcontext_vdpau.h	/^    VdpDevice          device;$/;"	m	struct:AVVDPAUDeviceContext
device_context	libavdevice/avdevice.h	/^    AVFormatContext *device_context;$/;"	m	struct:AVDeviceCapabilitiesQuery
device_context	libavutil/hwcontext_d3d11va.h	/^    ID3D11DeviceContext *device_context;$/;"	m	struct:AVD3D11VADeviceContext
device_ctx	libavutil/hwcontext.h	/^    AVHWDeviceContext *device_ctx;$/;"	m	struct:AVHWFramesContext
device_description	libavdevice/avdevice.h	/^    char *device_description;            \/**< human friendly name *\/$/;"	m	struct:AVDeviceInfo
device_name	libavdevice/avdevice.h	/^    char *device_name;                   \/**< device name, format depends on device *\/$/;"	m	struct:AVDeviceInfo
device_ref	libavutil/hwcontext.h	/^    AVBufferRef *device_ref;$/;"	m	struct:AVHWFramesContext
devices	libavdevice/avdevice.h	/^    AVDeviceInfo **devices;              \/**< list of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
devmgr	libavutil/hwcontext_dxva2.h	/^    IDirect3DDeviceManager9 *devmgr;$/;"	m	struct:AVDXVA2DeviceContext
dia_size	libavcodec/avcodec.h	/^    int dia_size;$/;"	m	struct:AVCodecContext
difseg_size	libavcodec/dv_profile.h	/^    int              difseg_size;           \/* number of DIF segments per DIF channel *\/$/;"	m	struct:AVDVProfile
direct	libavformat/avio.h	/^    int direct;$/;"	m	struct:AVIOContext
disable_auto_convert	libavfilter/avfilter.h	/^    unsigned disable_auto_convert;$/;"	m	struct:AVFilterGraph
discard	libavformat/avformat.h	/^    enum AVDiscard discard;        \/\/\/< selects which program to discard and which to feed to the caller$/;"	m	struct:AVProgram	typeref:enum:AVProgram::AVDiscard
discard	libavformat/avformat.h	/^    enum AVDiscard discard; \/\/\/< Selects which packets can be discarded at will and do not need to be demuxed.$/;"	m	struct:AVStream	typeref:enum:AVStream::AVDiscard
display	libavcodec/vaapi.h	/^    void *display;$/;"	m	struct:vaapi_context
display	libavutil/hwcontext_vaapi.h	/^    VADisplay display;$/;"	m	struct:AVVAAPIDeviceContext
display_aspect_ratio	libavformat/avformat.h	/^    AVRational display_aspect_ratio;$/;"	m	struct:AVStream
display_picture_number	libavutil/frame.h	/^    int display_picture_number;$/;"	m	struct:AVFrame
display_primaries	libavutil/mastering_display_metadata.h	/^    AVRational display_primaries[3][2];$/;"	m	struct:AVMasteringDisplayMetadata
disposition	libavformat/avformat.h	/^    int disposition; \/**< AV_DISPOSITION_* bit field *\/$/;"	m	struct:AVStream
draw_horiz_band	libavcodec/avcodec.h	/^    void (*draw_horiz_band)(struct AVCodecContext *s,$/;"	m	struct:AVCodecContext
driver_quirks	libavutil/hwcontext_vaapi.h	/^    unsigned int driver_quirks;$/;"	m	struct:AVVAAPIDeviceContext
dsf	libavcodec/dv_profile.h	/^    int              dsf;                   \/* value of the dsf in the DV header *\/$/;"	m	struct:AVDVProfile
dst	libavfilter/avfilter.h	/^    AVFilterContext *dst;       \/\/\/< dest filter$/;"	m	struct:AVFilterLink
dst_x	libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dst_y	libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dstpad	libavfilter/avfilter.h	/^    AVFilterPad *dstpad;        \/\/\/< input pad on the dest filter$/;"	m	struct:AVFilterLink
dtg_active_format	libavcodec/avcodec.h	/^    attribute_deprecated int dtg_active_format;$/;"	m	struct:AVCodecContext
dts	libavcodec/avcodec.h	/^    int64_t dts;     \/* dts of the current frame *\/$/;"	m	struct:AVCodecParserContext
dts	libavcodec/avcodec.h	/^    int64_t dts;$/;"	m	struct:AVPacket
dts_misordered	libavformat/avformat.h	/^    uint8_t dts_misordered;$/;"	m	struct:AVStream
dts_ordered	libavformat/avformat.h	/^    uint8_t dts_ordered;$/;"	m	struct:AVStream
dts_ref_dts_delta	libavcodec/avcodec.h	/^    int dts_ref_dts_delta;$/;"	m	struct:AVCodecParserContext
dts_sync_point	libavcodec/avcodec.h	/^    int dts_sync_point;$/;"	m	struct:AVCodecParserContext
dump_separator	libavcodec/avcodec.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVCodecContext
dump_separator	libavformat/avformat.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVFormatContext
duration	libavcodec/avcodec.h	/^    int duration;$/;"	m	struct:AVCodecParserContext
duration	libavcodec/avcodec.h	/^    int64_t duration;$/;"	m	struct:AVPacket
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVFormatContext
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVStream
duration_count	libavformat/avformat.h	/^        int duration_count;$/;"	m	struct:AVStream::__anon5
duration_error	libavformat/avformat.h	/^        double (*duration_error)[2][MAX_STD_TIMEBASES];$/;"	m	struct:AVStream::__anon5
duration_estimation_method	libavformat/avformat.h	/^    enum AVDurationEstimationMethod duration_estimation_method;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVDurationEstimationMethod
duration_gcd	libavformat/avformat.h	/^        int64_t duration_gcd;$/;"	m	struct:AVStream::__anon5
dxva_context	libavcodec/dxva2.h	/^struct dxva_context {$/;"	s
enable	libavfilter/avfilter.h	/^    void *enable;                   \/\/\/< parsed expression (AVExpr*)$/;"	m	struct:AVFilterContext
enable_str	libavfilter/avfilter.h	/^    char *enable_str;               \/\/\/< enable expression string$/;"	m	struct:AVFilterContext
encode2	libavcodec/avcodec.h	/^    int (*encode2)(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,$/;"	m	struct:AVCodec
encode_sub	libavcodec/avcodec.h	/^    int (*encode_sub)(AVCodecContext *, uint8_t *buf, int buf_size,$/;"	m	struct:AVCodec
end	libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
end	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
end_display_time	libavcodec/avcodec.h	/^    uint32_t end_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
end_frame	libavcodec/avcodec.h	/^    int (*end_frame)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
end_frame	libavcodec/avcodec.h	/^    int end_frame;$/;"	m	struct:RcOverride
end_time	libavformat/avformat.h	/^    int64_t end_time;$/;"	m	struct:AVProgram
eof_reached	libavformat/avio.h	/^    int eof_reached;        \/**< true if eof reached *\/$/;"	m	struct:AVIOContext
err_recognition	libavcodec/avcodec.h	/^    int err_recognition;$/;"	m	struct:AVCodecContext
error	libavcodec/avcodec.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVCodecContext
error	libavformat/avio.h	/^    int error;              \/**< contains the error code or 0 if no error happened *\/$/;"	m	struct:AVIOContext
error	libavutil/frame.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
error_concealment	libavcodec/avcodec.h	/^    int error_concealment;$/;"	m	struct:AVCodecContext
error_rate	libavcodec/avcodec.h	/^    int error_rate;$/;"	m	struct:AVCodecContext
error_recognition	libavformat/avformat.h	/^    int error_recognition;$/;"	m	struct:AVFormatContext
event_flags	libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVFormatContext
event_flags	libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVStream
execute	libavcodec/avcodec.h	/^    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void *arg2, int *ret, int count, int size);$/;"	m	struct:AVCodecContext
execute	libavfilter/avfilter.h	/^    avfilter_execute_func *execute;$/;"	m	struct:AVFilterGraph
execute2	libavcodec/avcodec.h	/^    int (*execute2)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg, int jobnr, int threadnr), void *arg2, int *ret, int count);$/;"	m	struct:AVCodecContext
ext_buffers	libavcodec/qsv.h	/^    mfxExtBuffer **ext_buffers;$/;"	m	struct:AVQSVContext
extended_buf	libavutil/frame.h	/^    AVBufferRef **extended_buf;$/;"	m	struct:AVFrame
extended_data	libavutil/frame.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFrame
extensions	libavformat/avformat.h	/^    const char *extensions; \/**< comma-separated filename extensions *\/$/;"	m	struct:AVOutputFormat
extensions	libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVInputFormat
extradata	libavcodec/avcodec.h	/^    uint8_t *extradata;$/;"	m	struct:AVCodecContext
extradata	libavcodec/avcodec.h	/^    uint8_t *extradata;$/;"	m	struct:AVCodecParameters
extradata_size	libavcodec/avcodec.h	/^    int      extradata_size;$/;"	m	struct:AVCodecParameters
extradata_size	libavcodec/avcodec.h	/^    int extradata_size;$/;"	m	struct:AVCodecContext
f	libavutil/intfloat.h	/^    double   f;$/;"	m	union:av_intfloat64
f	libavutil/intfloat.h	/^    float    f;$/;"	m	union:av_intfloat32
f32	libavutil/intreadwrite.h	/^    float    f32;$/;"	m	union:__anon12
f32	libavutil/intreadwrite.h	/^    float    f32[2];$/;"	m	union:__anon11
f64	libavutil/intreadwrite.h	/^    double   f64;$/;"	m	union:__anon11
fd	libavutil/hwcontext_drm.h	/^    int fd;$/;"	m	struct:AVDRMDeviceContext
fd	libavutil/hwcontext_drm.h	/^    int fd;$/;"	m	struct:AVDRMObjectDescriptor
fdct	libavcodec/avdct.h	/^    void (*fdct)(int16_t *block \/* align 16 *\/);$/;"	m	struct:AVDCT
fetch_timestamp	libavcodec/avcodec.h	/^    int fetch_timestamp;$/;"	m	struct:AVCodecParserContext
field_order	libavcodec/avcodec.h	/^    enum AVFieldOrder                  field_order;$/;"	m	struct:AVCodecParameters	typeref:enum:AVCodecParameters::AVFieldOrder
field_order	libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVFieldOrder
field_order	libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVFieldOrder
fifo	libavfilter/avfilter.h	/^    FFFrameQueue fifo;$/;"	m	struct:AVFilterLink
filemode	libavformat/avio.h	/^    int64_t filemode;                     \/**< Unix file mode, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
filename	libavformat/avformat.h	/^    char filename[1024];$/;"	m	struct:AVFormatContext
filename	libavformat/avformat.h	/^    const char *filename;$/;"	m	struct:AVProbeData
filled_mv_blocks_num	libavcodec/xvmc.h	/^    int             filled_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
filter	libavcodec/avcodec.h	/^    const struct AVBitStreamFilter *filter;$/;"	m	struct:AVBSFContext	typeref:struct:AVBSFContext::AVBitStreamFilter
filter	libavcodec/avcodec.h	/^    const struct AVBitStreamFilter *filter;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilter
filter	libavcodec/avcodec.h	/^    int (*filter)(AVBSFContext *ctx, AVPacket *pkt);$/;"	m	struct:AVBitStreamFilter
filter	libavfilter/avfilter.h	/^    const AVFilter *filter;         \/\/\/< the AVFilter of which this is an instance$/;"	m	struct:AVFilterContext
filter_ctx	libavfilter/avfilter.h	/^    AVFilterContext *filter_ctx;$/;"	m	struct:AVFilterInOut
filters	libavfilter/avfilter.h	/^    AVFilterContext **filters;$/;"	m	struct:AVFilterGraph
first_discard_sample	libavformat/avformat.h	/^    int64_t first_discard_sample;$/;"	m	struct:AVStream
first_dts	libavformat/avformat.h	/^    int64_t first_dts;$/;"	m	struct:AVStream
flags	libavcodec/avcodec.h	/^    int   flags;$/;"	m	struct:AVPacket
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecContext
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecParserContext
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVSubtitleRect
flags	libavcodec/xvmc.h	/^    unsigned int    flags;$/;"	m	struct:xvmc_pix_fmt
flags	libavfilter/avfilter.h	/^    int flags;$/;"	m	struct:AVFilter
flags	libavfilter/avfilter.h	/^    unsigned flags;$/;"	m	struct:AVFilterLink
flags	libavformat/avformat.h	/^    int            flags;$/;"	m	struct:AVProgram
flags	libavformat/avformat.h	/^    int flags:2;$/;"	m	struct:AVIndexEntry
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVFormatContext
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVInputFormat
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVOutputFormat
flags	libavutil/frame.h	/^    int flags;$/;"	m	struct:AVFrame
flags	libavutil/motion_vector.h	/^    uint64_t flags;$/;"	m	struct:AVMotionVector
flags	libavutil/opt.h	/^    int flags;$/;"	m	struct:AVOption
flags	libavutil/pixdesc.h	/^    uint64_t flags;$/;"	m	struct:AVPixFmtDescriptor
flags	libavutil/stereo3d.h	/^    int flags;$/;"	m	struct:AVStereo3D
flags	libavutil/timecode.h	/^    uint32_t flags;     \/\/\/< flags such as drop frame, +24 hours support, ...$/;"	m	struct:__anon17
flags2	libavcodec/avcodec.h	/^    int flags2;$/;"	m	struct:AVCodecContext
flags_internal	libavfilter/avfilter.h	/^    int flags_internal; \/\/\/< Additional flags for avfilter internal use only.$/;"	m	struct:AVFilter
flush	libavcodec/avcodec.h	/^    void (*flush)(AVCodecContext *);$/;"	m	struct:AVCodec
flush_packets	libavformat/avformat.h	/^    int flush_packets;$/;"	m	struct:AVFormatContext
format	libavcodec/avcodec.h	/^    int format;$/;"	m	struct:AVCodecParameters
format	libavcodec/avcodec.h	/^    int format;$/;"	m	struct:AVCodecParserContext
format	libavcodec/avcodec.h	/^    uint16_t format; \/* 0 = graphics *\/$/;"	m	struct:AVSubtitle
format	libavcodec/vda.h	/^    int                 format;$/;"	m	struct:vda_context
format	libavfilter/avfilter.h	/^    int format;                 \/\/\/< agreed upon media format$/;"	m	struct:AVFilterLink
format	libavfilter/buffersrc.h	/^    int format;$/;"	m	struct:AVBufferSrcParameters
format	libavutil/frame.h	/^    int format;$/;"	m	struct:AVFrame
format	libavutil/hwcontext.h	/^    enum AVPixelFormat format;$/;"	m	struct:AVHWFramesContext	typeref:enum:AVHWFramesContext::AVPixelFormat
format	libavutil/hwcontext_drm.h	/^    uint32_t format;$/;"	m	struct:AVDRMLayerDescriptor
format_modifier	libavutil/hwcontext_drm.h	/^    uint64_t format_modifier;$/;"	m	struct:AVDRMObjectDescriptor
format_probesize	libavformat/avformat.h	/^    int format_probesize;$/;"	m	struct:AVFormatContext
format_whitelist	libavformat/avformat.h	/^    char *format_whitelist;$/;"	m	struct:AVFormatContext
found_decoder	libavformat/avformat.h	/^        int found_decoder;$/;"	m	struct:AVStream::__anon5
fps	libavdevice/avdevice.h	/^    AVRational fps;$/;"	m	struct:AVDeviceCapabilitiesQuery
fps	libavutil/timecode.h	/^    unsigned fps;       \/\/\/< frame per second; must be consistent with the rate field$/;"	m	struct:__anon17
fps_first_dts	libavformat/avformat.h	/^        int64_t fps_first_dts;$/;"	m	struct:AVStream::__anon5
fps_first_dts_idx	libavformat/avformat.h	/^        int     fps_first_dts_idx;$/;"	m	struct:AVStream::__anon5
fps_last_dts	libavformat/avformat.h	/^        int64_t fps_last_dts;$/;"	m	struct:AVStream::__anon5
fps_last_dts_idx	libavformat/avformat.h	/^        int     fps_last_dts_idx;$/;"	m	struct:AVStream::__anon5
fps_probe_size	libavformat/avformat.h	/^    int fps_probe_size;$/;"	m	struct:AVFormatContext
frame_bits	libavcodec/avcodec.h	/^    int frame_bits;$/;"	m	struct:AVCodecContext
frame_blocked_in	libavfilter/avfilter.h	/^    int frame_blocked_in;$/;"	m	struct:AVFilterLink
frame_count_in	libavfilter/avfilter.h	/^    int64_t frame_count_in, frame_count_out;$/;"	m	struct:AVFilterLink
frame_count_out	libavfilter/avfilter.h	/^    int64_t frame_count_in, frame_count_out;$/;"	m	struct:AVFilterLink
frame_height	libavdevice/avdevice.h	/^    int frame_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
frame_number	libavcodec/avcodec.h	/^    int frame_number;$/;"	m	struct:AVCodecContext
frame_offset	libavcodec/avcodec.h	/^    int64_t frame_offset; \/* offset of the current frame *\/$/;"	m	struct:AVCodecParserContext
frame_pool	libavfilter/avfilter.h	/^    void *frame_pool;$/;"	m	struct:AVFilterLink
frame_priv_data_size	libavcodec/avcodec.h	/^    int frame_priv_data_size;$/;"	m	struct:AVHWAccel
frame_rate	libavfilter/avfilter.h	/^    AVRational frame_rate;$/;"	m	struct:AVFilterLink
frame_rate	libavfilter/buffersrc.h	/^    AVRational frame_rate;$/;"	m	struct:AVBufferSrcParameters
frame_rate_index	libavcodec/dirac.h	/^    uint8_t frame_rate_index;       \/\/\/< index into dirac_frame_rate[]$/;"	m	struct:AVDiracSeqHeader
frame_size	libavcodec/avcodec.h	/^    int      frame_size;$/;"	m	struct:AVCodecParameters
frame_size	libavcodec/avcodec.h	/^    int frame_size;$/;"	m	struct:AVCodecContext
frame_size	libavcodec/dv_profile.h	/^    int              frame_size;            \/* total size of one frame in bytes *\/$/;"	m	struct:AVDVProfile
frame_skip_cmp	libavcodec/avcodec.h	/^    int frame_skip_cmp;$/;"	m	struct:AVCodecContext
frame_skip_exp	libavcodec/avcodec.h	/^    int frame_skip_exp;$/;"	m	struct:AVCodecContext
frame_skip_factor	libavcodec/avcodec.h	/^    int frame_skip_factor;$/;"	m	struct:AVCodecContext
frame_skip_threshold	libavcodec/avcodec.h	/^    int frame_skip_threshold;$/;"	m	struct:AVCodecContext
frame_type	libavutil/hwcontext_qsv.h	/^    int frame_type;$/;"	m	struct:AVQSVFramesContext
frame_wanted_out	libavfilter/avfilter.h	/^    int frame_wanted_out;$/;"	m	struct:AVFilterLink
frame_width	libavdevice/avdevice.h	/^    int frame_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
framerate	libavcodec/avcodec.h	/^    AVRational framerate;$/;"	m	struct:AVCodecContext
framerate	libavcodec/dirac.h	/^    AVRational framerate;$/;"	m	struct:AVDiracSeqHeader
free	libavutil/hwcontext.h	/^    void (*free)(struct AVHWDeviceContext *ctx);$/;"	m	struct:AVHWDeviceContext
free	libavutil/hwcontext.h	/^    void (*free)(struct AVHWFramesContext *ctx);$/;"	m	struct:AVHWFramesContext
free_device_capabilities	libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
free_device_capabilities	libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
get_buffer2	libavcodec/avcodec.h	/^    int (*get_buffer2)(struct AVCodecContext *s, AVFrame *frame, int flags);$/;"	m	struct:AVCodecContext
get_category	libavutil/log.h	/^    AVClassCategory (*get_category)(void* ctx);$/;"	m	struct:AVClass
get_device_list	libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVInputFormat
get_device_list	libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVOutputFormat
get_format	libavcodec/avcodec.h	/^    enum AVPixelFormat (*get_format)(struct AVCodecContext *s, const enum AVPixelFormat * fmt);$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::get_format
get_output_timestamp	libavformat/avformat.h	/^    void (*get_output_timestamp)(struct AVFormatContext *s, int stream,$/;"	m	struct:AVOutputFormat
get_pixels	libavcodec/avdct.h	/^    void (*get_pixels)(int16_t *block \/* align 16 *\/,$/;"	m	struct:AVDCT
get_proc_address	libavutil/hwcontext_vdpau.h	/^    VdpGetProcAddress *get_proc_address;$/;"	m	struct:AVVDPAUDeviceContext
global_quality	libavcodec/avcodec.h	/^    int global_quality;$/;"	m	struct:AVCodecContext
gop_size	libavcodec/avcodec.h	/^    int gop_size;$/;"	m	struct:AVCodecContext
graph	libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;    \/\/\/< filtergraph this filter belongs to$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterGraph
graph	libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterGraph
group_id	libavformat/avio.h	/^    int64_t group_id;                     \/**< Group ID of owner, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
h	libavcodec/avcodec.h	/^    int h;         \/\/\/< height           of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
h	libavfilter/avfilter.h	/^    int h;                      \/\/\/< agreed upon image height$/;"	m	struct:AVFilterLink
h	libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
h264	libavcodec/vdpau.h	/^    VdpPictureInfoH264        h264;$/;"	m	union:AVVDPAUPictureInfo
has_b_frames	libavcodec/avcodec.h	/^    int has_b_frames;$/;"	m	struct:AVCodecContext
has_luminance	libavutil/mastering_display_metadata.h	/^    int has_luminance;$/;"	m	struct:AVMasteringDisplayMetadata
has_primaries	libavutil/mastering_display_metadata.h	/^    int has_primaries;$/;"	m	struct:AVMasteringDisplayMetadata
header_bits	libavcodec/avcodec.h	/^    int header_bits;$/;"	m	struct:AVCodecContext
height	libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVCodecParameters
height	libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVCodecParserContext
height	libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVPanScan
height	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
height	libavcodec/dirac.h	/^    unsigned height;$/;"	m	struct:AVDiracSeqHeader
height	libavcodec/dv_profile.h	/^    int              height;                \/* picture height in pixels *\/$/;"	m	struct:AVDVProfile
height	libavcodec/vda.h	/^    int                 height;$/;"	m	struct:vda_context
height	libavdevice/avdevice.h	/^    int height; \/**< height *\/$/;"	m	struct:AVDeviceRect
height	libavfilter/buffersrc.h	/^    int width, height;$/;"	m	struct:AVBufferSrcParameters
height	libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
height	libavutil/hwcontext.h	/^    int width, height;$/;"	m	struct:AVHWFramesContext
help	libavutil/opt.h	/^    const char *help;$/;"	m	struct:AVOption
hw_device_ctx	libavcodec/avcodec.h	/^    AVBufferRef *hw_device_ctx;$/;"	m	struct:AVCodecContext
hw_device_ctx	libavfilter/avfilter.h	/^    AVBufferRef *hw_device_ctx;$/;"	m	struct:AVFilterContext
hw_frames_ctx	libavcodec/avcodec.h	/^    AVBufferRef *hw_frames_ctx;$/;"	m	struct:AVCodecContext
hw_frames_ctx	libavfilter/avfilter.h	/^    AVBufferRef *hw_frames_ctx;$/;"	m	struct:AVFilterLink
hw_frames_ctx	libavfilter/buffersrc.h	/^    AVBufferRef *hw_frames_ctx;$/;"	m	struct:AVBufferSrcParameters
hw_frames_ctx	libavutil/frame.h	/^    AVBufferRef *hw_frames_ctx;$/;"	m	struct:AVFrame
hwaccel	libavcodec/avcodec.h	/^    struct AVHWAccel *hwaccel;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVHWAccel
hwaccel_context	libavcodec/avcodec.h	/^    void *hwaccel_context;$/;"	m	struct:AVCodecContext
hwaccel_flags	libavcodec/avcodec.h	/^    int hwaccel_flags;$/;"	m	struct:AVCodecContext
hwctx	libavutil/hwcontext.h	/^    void *hwctx;$/;"	m	struct:AVHWDeviceContext
hwctx	libavutil/hwcontext.h	/^    void *hwctx;$/;"	m	struct:AVHWFramesContext
i	libavutil/intfloat.h	/^    uint32_t i;$/;"	m	union:av_intfloat32
i	libavutil/intfloat.h	/^    uint64_t i;$/;"	m	union:av_intfloat64
i64	libavutil/opt.h	/^        int64_t i64;$/;"	m	union:AVOption::__anon15
i_count	libavcodec/avcodec.h	/^    int i_count;$/;"	m	struct:AVCodecContext
i_quant_factor	libavcodec/avcodec.h	/^    float i_quant_factor;$/;"	m	struct:AVCodecContext
i_quant_offset	libavcodec/avcodec.h	/^    float i_quant_offset;$/;"	m	struct:AVCodecContext
i_tex_bits	libavcodec/avcodec.h	/^    int i_tex_bits;$/;"	m	struct:AVCodecContext
id	libavcodec/avcodec.h	/^    enum AVCodecID     id;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVCodecID
id	libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVCodecID
id	libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVCodecID
id	libavcodec/avcodec.h	/^    int id;$/;"	m	struct:AVPanScan
id	libavformat/avformat.h	/^    int            id;$/;"	m	struct:AVProgram
id	libavformat/avformat.h	/^    int id;                 \/\/\/< unique ID to identify the chapter$/;"	m	struct:AVChapter
id	libavformat/avformat.h	/^    int id;$/;"	m	struct:AVStream
idct	libavcodec/avdct.h	/^    void (*idct)(int16_t *block \/* align 16 *\/);$/;"	m	struct:AVDCT
idct	libavcodec/xvmc.h	/^    int             idct;$/;"	m	struct:xvmc_pix_fmt
idct_algo	libavcodec/avcodec.h	/^    int idct_algo;$/;"	m	struct:AVCodecContext
idct_algo	libavcodec/avdct.h	/^    int idct_algo;$/;"	m	struct:AVDCT
idct_permutation	libavcodec/avdct.h	/^    uint8_t idct_permutation[64];$/;"	m	struct:AVDCT
iformat	libavformat/avformat.h	/^    struct AVInputFormat *iformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVInputFormat
ignore_boundary_point	libavformat/avio.h	/^    int ignore_boundary_point;$/;"	m	struct:AVIOContext
ildct_cmp	libavcodec/avcodec.h	/^    int ildct_cmp;$/;"	m	struct:AVCodecContext
im	libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
in_channel_layouts	libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts  *in_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
in_formats	libavfilter/avfilter.h	/^    AVFilterFormats *in_formats;$/;"	m	struct:AVFilterLink
in_samplerates	libavfilter/avfilter.h	/^    AVFilterFormats  *in_samplerates;$/;"	m	struct:AVFilterLink
index	libavformat/avformat.h	/^    int index;    \/**< stream index in AVFormatContext *\/$/;"	m	struct:AVStream
index	libavutil/hwcontext_d3d11va.h	/^    intptr_t index;$/;"	m	struct:AVD3D11FrameDescriptor
index	libavutil/lfg.h	/^    int index;$/;"	m	struct:AVLFG
index_entries	libavformat/avformat.h	/^    AVIndexEntry *index_entries; \/**< Only used if the format does not$/;"	m	struct:AVStream
index_entries_allocated_size	libavformat/avformat.h	/^    unsigned int index_entries_allocated_size;$/;"	m	struct:AVStream
info	libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:AVVDPAUContext	typeref:union:AVVDPAUContext::AVVDPAUPictureInfo
info	libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:vdpau_render_state	typeref:union:vdpau_render_state::AVVDPAUPictureInfo
info	libavformat/avformat.h	/^    } *info;$/;"	m	struct:AVStream	typeref:struct:AVStream::__anon5
init	libavcodec/avcodec.h	/^    int (*init)(AVBSFContext *ctx);$/;"	m	struct:AVBitStreamFilter
init	libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *);$/;"	m	struct:AVCodec
init	libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
init	libavfilter/avfilter.h	/^    int (*init)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
init	libavformat/avformat.h	/^    int (*init)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
init_dict	libavfilter/avfilter.h	/^    int (*init_dict)(AVFilterContext *ctx, AVDictionary **options);$/;"	m	struct:AVFilter
init_opaque	libavfilter/avfilter.h	/^    int (*init_opaque)(AVFilterContext *ctx, void *opaque);$/;"	m	struct:AVFilter
init_state	libavfilter/avfilter.h	/^    } init_state;$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::__anon2
init_static_data	libavcodec/avcodec.h	/^    void (*init_static_data)(struct AVCodec *codec);$/;"	m	struct:AVCodec
init_thread_copy	libavcodec/avcodec.h	/^    int (*init_thread_copy)(AVCodecContext *);$/;"	m	struct:AVCodec
initial_padding	libavcodec/avcodec.h	/^    int initial_padding;$/;"	m	struct:AVCodecContext
initial_padding	libavcodec/avcodec.h	/^    int initial_padding;$/;"	m	struct:AVCodecParameters
initial_pool_size	libavutil/hwcontext.h	/^    int initial_pool_size;$/;"	m	struct:AVHWFramesContext
inject_global_side_data	libavformat/avformat.h	/^    int inject_global_side_data;$/;"	m	struct:AVStream
input_pads	libavfilter/avfilter.h	/^    AVFilterPad   *input_pads;      \/\/\/< array of input pads$/;"	m	struct:AVFilterContext
inputs	libavfilter/avfilter.h	/^    AVFilterLink **inputs;          \/\/\/< array of pointers to input links$/;"	m	struct:AVFilterContext
inputs	libavfilter/avfilter.h	/^    const AVFilterPad *inputs;$/;"	m	struct:AVFilter
inter_matrix	libavcodec/avcodec.h	/^    uint16_t *inter_matrix;$/;"	m	struct:AVCodecContext
inter_quant_bias	libavcodec/avcodec.h	/^    attribute_deprecated int inter_quant_bias;$/;"	m	struct:AVCodecContext
interlaced	libavcodec/dirac.h	/^    uint8_t interlaced;$/;"	m	struct:AVDiracSeqHeader
interlaced_frame	libavutil/frame.h	/^    int interlaced_frame;$/;"	m	struct:AVFrame
interleave_packet	libavformat/avformat.h	/^    int (*interleave_packet)(struct AVFormatContext *, AVPacket *out,$/;"	m	struct:AVOutputFormat
interleaver_chunk_duration	libavformat/avformat.h	/^    int64_t interleaver_chunk_duration;$/;"	m	struct:AVStream
interleaver_chunk_size	libavformat/avformat.h	/^    int64_t interleaver_chunk_size;$/;"	m	struct:AVStream
internal	libavcodec/avcodec.h	/^    AVBSFInternal *internal;$/;"	m	struct:AVBSFContext
internal	libavcodec/avcodec.h	/^    struct AVCodecInternal *internal;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodecInternal
internal	libavfilter/avfilter.h	/^    AVFilterGraphInternal *internal;$/;"	m	struct:AVFilterGraph
internal	libavfilter/avfilter.h	/^    AVFilterInternal *internal;$/;"	m	struct:AVFilterContext
internal	libavformat/avformat.h	/^    AVFormatInternal *internal;$/;"	m	struct:AVFormatContext
internal	libavformat/avformat.h	/^    AVStreamInternal *internal;$/;"	m	struct:AVStream
internal	libavutil/hwcontext.h	/^    AVHWDeviceInternal *internal;$/;"	m	struct:AVHWDeviceContext
internal	libavutil/hwcontext.h	/^    AVHWFramesInternal *internal;$/;"	m	struct:AVHWFramesContext
internal	libavutil/hwcontext_cuda.h	/^    AVCUDADeviceContextInternal *internal;$/;"	m	struct:AVCUDADeviceContext
interrupt_callback	libavformat/avformat.h	/^    AVIOInterruptCB interrupt_callback;$/;"	m	struct:AVFormatContext
intra_dc_precision	libavcodec/avcodec.h	/^    int intra_dc_precision;$/;"	m	struct:AVCodecContext
intra_matrix	libavcodec/avcodec.h	/^    uint16_t *intra_matrix;$/;"	m	struct:AVCodecContext
intra_quant_bias	libavcodec/avcodec.h	/^    attribute_deprecated int intra_quant_bias;$/;"	m	struct:AVCodecContext
io_close	libavformat/avformat.h	/^    void (*io_close)(struct AVFormatContext *s, AVIOContext *pb);$/;"	m	struct:AVFormatContext
io_open	libavformat/avformat.h	/^    int (*io_open)(struct AVFormatContext *s, AVIOContext **pb, const char *url,$/;"	m	struct:AVFormatContext
io_repositioned	libavformat/avformat.h	/^    int io_repositioned;$/;"	m	struct:AVFormatContext
iopattern	libavcodec/qsv.h	/^    int iopattern;$/;"	m	struct:AVQSVContext
iq_matrix_buf_id	libavcodec/vaapi.h	/^    uint32_t iq_matrix_buf_id;$/;"	m	struct:vaapi_context
is_disabled	libavfilter/avfilter.h	/^    int is_disabled;                \/\/\/< the enabled state from the last expression evaluation$/;"	m	struct:AVFilterContext
is_range	libavutil/opt.h	/^    int is_range;$/;"	m	struct:AVOptionRange
item_name	libavutil/log.h	/^    const char* (*item_name)(void* ctx);$/;"	m	struct:AVClass
kVDADecodeInfo_Asynchronous	libavcodec/vda.h	/^    kVDADecodeInfo_Asynchronous = 1UL << 0,$/;"	e	enum:__anon1
kVDADecodeInfo_FrameDropped	libavcodec/vda.h	/^    kVDADecodeInfo_FrameDropped = 1UL << 1$/;"	e	enum:__anon1
key	libavformat/avformat.h	/^    const uint8_t *key;$/;"	m	struct:AVFormatContext
key	libavutil/dict.h	/^    char *key;$/;"	m	struct:AVDictionaryEntry
key	libavutil/xtea.h	/^    uint32_t key[16];$/;"	m	struct:AVXTEA
key_frame	libavcodec/avcodec.h	/^    int key_frame;$/;"	m	struct:AVCodecParserContext
key_frame	libavutil/frame.h	/^    int key_frame;$/;"	m	struct:AVFrame
keyint_min	libavcodec/avcodec.h	/^    int keyint_min;$/;"	m	struct:AVCodecContext
keylen	libavformat/avformat.h	/^    int keylen;$/;"	m	struct:AVFormatContext
l	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_16
l	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_32
l	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_64
last_IP_duration	libavformat/avformat.h	/^    int last_IP_duration;$/;"	m	struct:AVStream
last_IP_pts	libavformat/avformat.h	/^    int64_t last_IP_pts;$/;"	m	struct:AVStream
last_discard_sample	libavformat/avformat.h	/^    int64_t last_discard_sample;$/;"	m	struct:AVStream
last_dts	libavcodec/avcodec.h	/^    int64_t last_dts;$/;"	m	struct:AVCodecParserContext
last_dts	libavformat/avformat.h	/^        int64_t last_dts;$/;"	m	struct:AVStream::__anon5
last_dts_for_order_check	libavformat/avformat.h	/^    int64_t last_dts_for_order_check;$/;"	m	struct:AVStream
last_duration	libavformat/avformat.h	/^        int64_t last_duration;$/;"	m	struct:AVStream::__anon5
last_in_packet_buffer	libavformat/avformat.h	/^    struct AVPacketList *last_in_packet_buffer;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVPacketList
last_pos	libavcodec/avcodec.h	/^    int64_t last_pos;$/;"	m	struct:AVCodecParserContext
last_predictor_count	libavcodec/avcodec.h	/^    int last_predictor_count;$/;"	m	struct:AVCodecContext
last_pts	libavcodec/avcodec.h	/^    int64_t last_pts;$/;"	m	struct:AVCodecParserContext
last_time	libavformat/avio.h	/^    int64_t last_time;$/;"	m	struct:AVIOContext
layers	libavutil/hwcontext_drm.h	/^    AVDRMLayerDescriptor layers[AV_DRM_MAX_PLANES];$/;"	m	struct:AVDRMFrameDescriptor
length	libswscale/swscale.h	/^    int length;                 \/\/\/< number of coefficients in the vector$/;"	m	struct:SwsVector
level	libavcodec/avcodec.h	/^     int level;$/;"	m	struct:AVCodecContext
level	libavcodec/avcodec.h	/^    int level;$/;"	m	struct:AVCodecParameters
level	libavcodec/dirac.h	/^    int level;$/;"	m	struct:AVDiracSeqHeader
lfe_mix_level	libavutil/downmix_info.h	/^    double lfe_mix_level;$/;"	m	struct:AVDownmixInfo
linesize	libavcodec/avcodec.h	/^    int linesize[4];$/;"	m	struct:AVSubtitleRect
linesize	libavcodec/avcodec.h	/^    int linesize[AV_NUM_DATA_POINTERS];     \/\/\/< number of bytes per line$/;"	m	struct:AVPicture
linesize	libavutil/frame.h	/^    int linesize[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
lmax	libavcodec/avcodec.h	/^    int lmax;$/;"	m	struct:AVCodecContext
lmin	libavcodec/avcodec.h	/^    int lmin;$/;"	m	struct:AVCodecContext
lock	libavutil/hwcontext_d3d11va.h	/^    void (*lock)(void *lock_ctx);$/;"	m	struct:AVD3D11VADeviceContext
lock_ctx	libavutil/hwcontext_d3d11va.h	/^    void *lock_ctx;$/;"	m	struct:AVD3D11VADeviceContext
log2_chroma_h	libavutil/pixdesc.h	/^    uint8_t log2_chroma_h;$/;"	m	struct:AVPixFmtDescriptor
log2_chroma_w	libavutil/pixdesc.h	/^    uint8_t log2_chroma_w;$/;"	m	struct:AVPixFmtDescriptor
log_level_offset	libavcodec/avcodec.h	/^    int log_level_offset;$/;"	m	struct:AVCodecContext
log_level_offset_offset	libavutil/log.h	/^    int log_level_offset_offset;$/;"	m	struct:AVClass
long_name	libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodec
long_name	libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodecDescriptor
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVInputFormat
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVOutputFormat
lowres	libavcodec/avcodec.h	/^     int lowres;$/;"	m	struct:AVCodecContext
ltc_divisor	libavcodec/dv_profile.h	/^    int              ltc_divisor;           \/* FPS from the LTS standpoint *\/$/;"	m	struct:AVDVProfile
lumH	libswscale/swscale.h	/^    SwsVector *lumH;$/;"	m	struct:SwsFilter
lumV	libswscale/swscale.h	/^    SwsVector *lumV;$/;"	m	struct:SwsFilter
lumi_masking	libavcodec/avcodec.h	/^    float lumi_masking;$/;"	m	struct:AVCodecContext
major	libavcodec/dirac.h	/^    int major;$/;"	m	struct:DiracVersionInfo
max	libavutil/opt.h	/^    double max;                 \/\/\/< maximum valid value for the option$/;"	m	struct:AVOption
max_analyze_duration	libavformat/avformat.h	/^    int64_t max_analyze_duration;$/;"	m	struct:AVFormatContext
max_b_frames	libavcodec/avcodec.h	/^    int max_b_frames;$/;"	m	struct:AVCodecContext
max_bitrate	libavcodec/avcodec.h	/^    int max_bitrate;$/;"	m	struct:AVCPBProperties
max_chunk_duration	libavformat/avformat.h	/^    int max_chunk_duration;$/;"	m	struct:AVFormatContext
max_chunk_size	libavformat/avformat.h	/^    int max_chunk_size;$/;"	m	struct:AVFormatContext
max_delay	libavformat/avformat.h	/^    int max_delay;$/;"	m	struct:AVFormatContext
max_height	libavutil/hwcontext.h	/^    int max_height;$/;"	m	struct:AVHWFramesConstraints
max_index_size	libavformat/avformat.h	/^    unsigned int max_index_size;$/;"	m	struct:AVFormatContext
max_interleave_delta	libavformat/avformat.h	/^    int64_t max_interleave_delta;$/;"	m	struct:AVFormatContext
max_lowres	libavcodec/avcodec.h	/^    uint8_t max_lowres;                     \/\/\/< maximum value for lowres supported by the decoder$/;"	m	struct:AVCodec
max_luminance	libavutil/mastering_display_metadata.h	/^    AVRational max_luminance;$/;"	m	struct:AVMasteringDisplayMetadata
max_packet_size	libavformat/avio.h	/^    int max_packet_size;$/;"	m	struct:AVIOContext
max_picture_buffer	libavformat/avformat.h	/^    unsigned int max_picture_buffer;$/;"	m	struct:AVFormatContext
max_pixels	libavcodec/avcodec.h	/^    int64_t max_pixels;$/;"	m	struct:AVCodecContext
max_prediction_order	libavcodec/avcodec.h	/^    int max_prediction_order;$/;"	m	struct:AVCodecContext
max_qdiff	libavcodec/avcodec.h	/^    int max_qdiff;$/;"	m	struct:AVCodecContext
max_samples	libavfilter/avfilter.h	/^    int max_samples;$/;"	m	struct:AVFilterLink
max_streams	libavformat/avformat.h	/^    int max_streams;$/;"	m	struct:AVFormatContext
max_ts_probe	libavformat/avformat.h	/^    int max_ts_probe;$/;"	m	struct:AVFormatContext
max_width	libavutil/hwcontext.h	/^    int max_width;$/;"	m	struct:AVHWFramesConstraints
maxsize	libavformat/avio.h	/^    int64_t maxsize;$/;"	m	struct:AVIOContext
mb_cmp	libavcodec/avcodec.h	/^    int mb_cmp;$/;"	m	struct:AVCodecContext
mb_decision	libavcodec/avcodec.h	/^    int mb_decision;$/;"	m	struct:AVCodecContext
mb_lmax	libavcodec/avcodec.h	/^    int mb_lmax;$/;"	m	struct:AVCodecContext
mb_lmin	libavcodec/avcodec.h	/^    int mb_lmin;$/;"	m	struct:AVCodecContext
mb_threshold	libavcodec/avcodec.h	/^    int mb_threshold;$/;"	m	struct:AVCodecContext
me_cmp	libavcodec/avcodec.h	/^    int me_cmp;$/;"	m	struct:AVCodecContext
me_method	libavcodec/avcodec.h	/^    attribute_deprecated int me_method;$/;"	m	struct:AVCodecContext
me_penalty_compensation	libavcodec/avcodec.h	/^    int me_penalty_compensation;$/;"	m	struct:AVCodecContext
me_pre_cmp	libavcodec/avcodec.h	/^    int me_pre_cmp;$/;"	m	struct:AVCodecContext
me_range	libavcodec/avcodec.h	/^    int me_range;$/;"	m	struct:AVCodecContext
me_sub_cmp	libavcodec/avcodec.h	/^    int me_sub_cmp;$/;"	m	struct:AVCodecContext
me_subpel_quality	libavcodec/avcodec.h	/^    int me_subpel_quality;$/;"	m	struct:AVCodecContext
me_threshold	libavcodec/avcodec.h	/^    int me_threshold;$/;"	m	struct:AVCodecContext
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVChapter
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFormatContext
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVProgram
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVStream
metadata	libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrame
metadata	libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrameSideData
metadata_header_padding	libavformat/avformat.h	/^    int metadata_header_padding;$/;"	m	struct:AVFormatContext
mime_type	libavformat/avformat.h	/^    const char *mime_type; \/**< mime_type, when known. *\/$/;"	m	struct:AVProbeData
mime_type	libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVInputFormat
mime_type	libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVOutputFormat
mime_types	libavcodec/avcodec.h	/^    const char *const *mime_types;$/;"	m	struct:AVCodecDescriptor
min	libavutil/opt.h	/^    double min;                 \/\/\/< minimum valid value for the option$/;"	m	struct:AVOption
min_bitrate	libavcodec/avcodec.h	/^    int min_bitrate;$/;"	m	struct:AVCPBProperties
min_distance	libavformat/avformat.h	/^    int min_distance;         \/**< Minimum distance between this and the previous keyframe, used to avoid unneeded searching. *\/$/;"	m	struct:AVIndexEntry
min_height	libavutil/hwcontext.h	/^    int min_height;$/;"	m	struct:AVHWFramesConstraints
min_luminance	libavutil/mastering_display_metadata.h	/^    AVRational min_luminance;$/;"	m	struct:AVMasteringDisplayMetadata
min_packet_size	libavformat/avio.h	/^    int min_packet_size;$/;"	m	struct:AVIOContext
min_prediction_order	libavcodec/avcodec.h	/^    int min_prediction_order;$/;"	m	struct:AVCodecContext
min_samples	libavfilter/avfilter.h	/^    int min_samples;$/;"	m	struct:AVFilterLink
min_width	libavutil/hwcontext.h	/^    int min_width;$/;"	m	struct:AVHWFramesConstraints
minor	libavcodec/dirac.h	/^    int minor;$/;"	m	struct:DiracVersionInfo
misc_bits	libavcodec/avcodec.h	/^    int misc_bits;$/;"	m	struct:AVCodecContext
modification_timestamp	libavformat/avio.h	/^    int64_t modification_timestamp;       \/**< Time of last modification in microseconds since unix$/;"	m	struct:AVIODirEntry
motion_scale	libavutil/motion_vector.h	/^    uint16_t motion_scale;$/;"	m	struct:AVMotionVector
motion_x	libavutil/motion_vector.h	/^    int32_t motion_x, motion_y;$/;"	m	struct:AVMotionVector
motion_y	libavutil/motion_vector.h	/^    int32_t motion_x, motion_y;$/;"	m	struct:AVMotionVector
mpeg	libavcodec/vdpau.h	/^    VdpPictureInfoMPEG1Or2    mpeg;$/;"	m	union:AVVDPAUPictureInfo
mpeg4	libavcodec/vdpau.h	/^    VdpPictureInfoMPEG4Part2 mpeg4;$/;"	m	union:AVVDPAUPictureInfo
mpeg_quant	libavcodec/avcodec.h	/^    int mpeg_quant;$/;"	m	struct:AVCodecContext
must_flush	libavformat/avio.h	/^    int must_flush;         \/**< unused *\/$/;"	m	struct:AVIOContext
mux_ts_offset	libavformat/avformat.h	/^    int64_t mux_ts_offset;$/;"	m	struct:AVStream
mv0_threshold	libavcodec/avcodec.h	/^    int mv0_threshold;$/;"	m	struct:AVCodecContext
mv_bits	libavcodec/avcodec.h	/^    int mv_bits;$/;"	m	struct:AVCodecContext
mv_blocks	libavcodec/xvmc.h	/^    XvMCMacroBlock* mv_blocks;$/;"	m	struct:xvmc_pix_fmt
n_difchan	libavcodec/dv_profile.h	/^    int              n_difchan;             \/* number of DIF channels per frame *\/$/;"	m	struct:AVDVProfile
n_slice_buf_ids	libavcodec/vaapi.h	/^    unsigned int n_slice_buf_ids;$/;"	m	struct:vaapi_context
name	libavcodec/avcodec.h	/^    const char      *name;$/;"	m	struct:AVCodecDescriptor
name	libavcodec/avcodec.h	/^    const char *name; \/\/\/< short name for the profile$/;"	m	struct:AVProfile
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVBitStreamFilter
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVCodec
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVHWAccel
name	libavfilter/avfilter.h	/^    char *name;                     \/\/\/< name of this filter instance$/;"	m	struct:AVFilterContext
name	libavfilter/avfilter.h	/^    char *name;$/;"	m	struct:AVFilterInOut
name	libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilter
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVInputFormat
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVOutputFormat
name	libavformat/avio.h	/^    char *name;                           \/**< Filename *\/$/;"	m	struct:AVIODirEntry
name	libavutil/opt.h	/^    const char *name;$/;"	m	struct:AVOption
name	libavutil/pixdesc.h	/^    const char *name;$/;"	m	struct:AVPixFmtDescriptor
nb_attributes	libavutil/hwcontext_vaapi.h	/^    int           nb_attributes;$/;"	m	struct:AVVAAPIFramesContext
nb_chapters	libavformat/avformat.h	/^    unsigned int nb_chapters;$/;"	m	struct:AVFormatContext
nb_coded_side_data	libavcodec/avcodec.h	/^    int            nb_coded_side_data;$/;"	m	struct:AVCodecContext
nb_colors	libavcodec/avcodec.h	/^    int nb_colors; \/\/\/< number of colors in pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
nb_components	libavutil/opt.h	/^    int nb_components;$/;"	m	struct:AVOptionRanges
nb_components	libavutil/pixdesc.h	/^    uint8_t nb_components;  \/\/\/< The number of components each pixel has, (1-4)$/;"	m	struct:AVPixFmtDescriptor
nb_decoded_frames	libavformat/avformat.h	/^    int nb_decoded_frames;$/;"	m	struct:AVStream
nb_devices	libavdevice/avdevice.h	/^    int nb_devices;                      \/**< number of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
nb_ext_buffers	libavcodec/qsv.h	/^    int         nb_ext_buffers;$/;"	m	struct:AVQSVContext
nb_extended_buf	libavutil/frame.h	/^    int        nb_extended_buf;$/;"	m	struct:AVFrame
nb_filters	libavfilter/avfilter.h	/^    unsigned nb_filters;$/;"	m	struct:AVFilterGraph
nb_frames	libavformat/avformat.h	/^    int64_t nb_frames;                 \/\/\/< number of frames in this stream if known or 0$/;"	m	struct:AVStream
nb_index_entries	libavformat/avformat.h	/^    int nb_index_entries;$/;"	m	struct:AVStream
nb_inputs	libavfilter/avfilter.h	/^    unsigned    nb_inputs;          \/\/\/< number of input pads$/;"	m	struct:AVFilterContext
nb_layers	libavutil/hwcontext_drm.h	/^    int nb_layers;$/;"	m	struct:AVDRMFrameDescriptor
nb_objects	libavutil/hwcontext_drm.h	/^    int nb_objects;$/;"	m	struct:AVDRMFrameDescriptor
nb_opaque_surfaces	libavcodec/qsv.h	/^    int nb_opaque_surfaces;$/;"	m	struct:AVQSVContext
nb_outputs	libavfilter/avfilter.h	/^    unsigned    nb_outputs;         \/\/\/< number of output pads$/;"	m	struct:AVFilterContext
nb_planes	libavutil/hwcontext_drm.h	/^    int nb_planes;$/;"	m	struct:AVDRMLayerDescriptor
nb_programs	libavformat/avformat.h	/^    unsigned int nb_programs;$/;"	m	struct:AVFormatContext
nb_ranges	libavutil/opt.h	/^    int nb_ranges;$/;"	m	struct:AVOptionRanges
nb_samples	libavutil/frame.h	/^    int nb_samples;$/;"	m	struct:AVFrame
nb_side_data	libavformat/avformat.h	/^    int            nb_side_data;$/;"	m	struct:AVStream
nb_side_data	libavutil/frame.h	/^    int            nb_side_data;$/;"	m	struct:AVFrame
nb_stream_indexes	libavformat/avformat.h	/^    unsigned int   nb_stream_indexes;$/;"	m	struct:AVProgram
nb_streams	libavformat/avformat.h	/^    unsigned int nb_streams;$/;"	m	struct:AVFormatContext
nb_surfaces	libavutil/hwcontext_dxva2.h	/^    int              nb_surfaces;$/;"	m	struct:AVDXVA2FramesContext
nb_surfaces	libavutil/hwcontext_qsv.h	/^    int            nb_surfaces;$/;"	m	struct:AVQSVFramesContext
nb_surfaces	libavutil/hwcontext_vaapi.h	/^    int           nb_surfaces;$/;"	m	struct:AVVAAPIFramesContext
nb_threads	libavfilter/avfilter.h	/^    int nb_threads;$/;"	m	struct:AVFilterContext
nb_threads	libavfilter/avfilter.h	/^    int nb_threads;$/;"	m	struct:AVFilterGraph
need_parsing	libavformat/avformat.h	/^    enum AVStreamParseType need_parsing;$/;"	m	struct:AVStream	typeref:enum:AVStream::AVStreamParseType
next	libavcodec/avcodec.h	/^    struct AVBitStreamFilterContext *next;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilterContext
next	libavcodec/avcodec.h	/^    struct AVCodec *next;$/;"	m	struct:AVCodec	typeref:struct:AVCodec::AVCodec
next	libavcodec/avcodec.h	/^    struct AVCodecParser *next;$/;"	m	struct:AVCodecParser	typeref:struct:AVCodecParser::AVCodecParser
next	libavcodec/avcodec.h	/^    struct AVHWAccel *next;$/;"	m	struct:AVHWAccel	typeref:struct:AVHWAccel::AVHWAccel
next	libavfilter/avfilter.h	/^    struct AVFilter *next;$/;"	m	struct:AVFilter	typeref:struct:AVFilter::AVFilter
next	libavfilter/avfilter.h	/^    struct AVFilterInOut *next;$/;"	m	struct:AVFilterInOut	typeref:struct:AVFilterInOut::AVFilterInOut
next	libavformat/avformat.h	/^    struct AVInputFormat *next;$/;"	m	struct:AVInputFormat	typeref:struct:AVInputFormat::AVInputFormat
next	libavformat/avformat.h	/^    struct AVOutputFormat *next;$/;"	m	struct:AVOutputFormat	typeref:struct:AVOutputFormat::AVOutputFormat
next	libavformat/avformat.h	/^    struct AVPacketList *next;$/;"	m	struct:AVPacketList	typeref:struct:AVPacketList::AVPacketList
next_frame_offset	libavcodec/avcodec.h	/^    int64_t next_frame_offset; \/* offset of the next frame *\/$/;"	m	struct:AVCodecParserContext
next_free_data_block_num	libavcodec/xvmc.h	/^    int             next_free_data_block_num;$/;"	m	struct:xvmc_pix_fmt
noise_reduction	libavcodec/avcodec.h	/^    int noise_reduction;$/;"	m	struct:AVCodecContext
nsse_weight	libavcodec/avcodec.h	/^     int nsse_weight;$/;"	m	struct:AVCodecContext
num	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
num	libavutil/rational.h	/^    int num; \/\/\/< Numerator$/;"	m	struct:AVRational
num_rects	libavcodec/avcodec.h	/^    unsigned num_rects;$/;"	m	struct:AVSubtitle
object_index	libavutil/hwcontext_drm.h	/^    int object_index;$/;"	m	struct:AVDRMPlaneDescriptor
objects	libavutil/hwcontext_drm.h	/^    AVDRMObjectDescriptor objects[AV_DRM_MAX_PLANES];$/;"	m	struct:AVDRMFrameDescriptor
offset	libavcodec/avcodec.h	/^    int64_t offset;      \/\/\/< byte offset from starting packet start$/;"	m	struct:AVCodecParserContext
offset	libavutil/hwcontext_drm.h	/^    ptrdiff_t offset;$/;"	m	struct:AVDRMPlaneDescriptor
offset	libavutil/opt.h	/^    int offset;$/;"	m	struct:AVOption
offset	libavutil/pixdesc.h	/^    int offset;$/;"	m	struct:AVComponentDescriptor
offset_plus1	libavutil/pixdesc.h	/^    attribute_deprecated int offset_plus1;$/;"	m	struct:AVComponentDescriptor
oformat	libavformat/avformat.h	/^    struct AVOutputFormat *oformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVOutputFormat
opaque	libavcodec/avcodec.h	/^    void *opaque;$/;"	m	struct:AVCodecContext
opaque	libavfilter/avfilter.h	/^    void *opaque;$/;"	m	struct:AVFilterGraph
opaque	libavformat/avformat.h	/^    void *opaque;$/;"	m	struct:AVFormatContext
opaque	libavformat/avio.h	/^    void *opaque;           \/**< A private pointer, passed to the read\/write\/seek\/...$/;"	m	struct:AVIOContext
opaque	libavformat/avio.h	/^    void *opaque;$/;"	m	struct:AVIOInterruptCB
opaque	libavutil/frame.h	/^    void *opaque;$/;"	m	struct:AVFrame
opaque_alloc	libavcodec/qsv.h	/^    int opaque_alloc;$/;"	m	struct:AVQSVContext
opaque_alloc_type	libavcodec/qsv.h	/^    int opaque_alloc_type;$/;"	m	struct:AVQSVContext
opaque_ref	libavutil/frame.h	/^    AVBufferRef *opaque_ref;$/;"	m	struct:AVFrame
opaque_surfaces	libavcodec/qsv.h	/^    AVBufferRef *opaque_surfaces;$/;"	m	struct:AVQSVContext
open_cb	libavformat/avformat.h	/^    int (*open_cb)(struct AVFormatContext *s, AVIOContext **p, const char *url, int flags, const AVIOInterruptCB *int_cb, AVDictionary **options);$/;"	m	struct:AVFormatContext
option	libavutil/log.h	/^    const struct AVOption *option;$/;"	m	struct:AVClass	typeref:struct:AVClass::AVOption
orig_buffer_size	libavformat/avio.h	/^    int orig_buffer_size;$/;"	m	struct:AVIOContext
out_channel_layouts	libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts *out_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
out_formats	libavfilter/avfilter.h	/^    AVFilterFormats *out_formats;$/;"	m	struct:AVFilterLink
out_samplerates	libavfilter/avfilter.h	/^    AVFilterFormats *out_samplerates;$/;"	m	struct:AVFilterLink
output_callback	libavcodec/vda.h	/^    VDADecoderOutputCallback output_callback;$/;"	m	struct:AVVDAContext
output_callback	libavcodec/videotoolbox.h	/^    VTDecompressionOutputCallback output_callback;$/;"	m	struct:AVVideotoolboxContext
output_pads	libavfilter/avfilter.h	/^    AVFilterPad   *output_pads;     \/\/\/< array of output pads$/;"	m	struct:AVFilterContext
output_picture_number	libavcodec/avcodec.h	/^    int output_picture_number;$/;"	m	struct:AVCodecParserContext
output_ts_offset	libavformat/avformat.h	/^    int64_t output_ts_offset;$/;"	m	struct:AVFormatContext
outputs	libavfilter/avfilter.h	/^    AVFilterLink **outputs;         \/\/\/< array of pointers to output links$/;"	m	struct:AVFilterContext
outputs	libavfilter/avfilter.h	/^    const AVFilterPad *outputs;$/;"	m	struct:AVFilter
p	libavutil/blowfish.h	/^    uint32_t p[AV_BF_ROUNDS + 2];$/;"	m	struct:AVBlowfish
p_count	libavcodec/avcodec.h	/^    int p_count;$/;"	m	struct:AVCodecContext
p_future_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_future_surface;$/;"	m	struct:xvmc_pix_fmt
p_masking	libavcodec/avcodec.h	/^    float p_masking;$/;"	m	struct:AVCodecContext
p_past_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_past_surface;$/;"	m	struct:xvmc_pix_fmt
p_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_surface;$/;"	m	struct:xvmc_pix_fmt
p_tex_bits	libavcodec/avcodec.h	/^    int p_tex_bits;$/;"	m	struct:AVCodecContext
packet_size	libavformat/avformat.h	/^    unsigned int packet_size;$/;"	m	struct:AVFormatContext
pad_idx	libavfilter/avfilter.h	/^    int pad_idx;$/;"	m	struct:AVFilterInOut
padding	libavutil/spherical.h	/^    uint32_t padding;$/;"	m	struct:AVSphericalMapping
palette_has_changed	libavutil/frame.h	/^    int palette_has_changed;$/;"	m	struct:AVFrame
par_in	libavcodec/avcodec.h	/^    AVCodecParameters *par_in;$/;"	m	struct:AVBSFContext
par_out	libavcodec/avcodec.h	/^    AVCodecParameters *par_out;$/;"	m	struct:AVBSFContext
parent_log_context_offset	libavutil/log.h	/^    int parent_log_context_offset;$/;"	m	struct:AVClass
parser	libavcodec/avcodec.h	/^    AVCodecParserContext *parser;$/;"	m	struct:AVBitStreamFilterContext
parser	libavcodec/avcodec.h	/^    struct AVCodecParser *parser;$/;"	m	struct:AVCodecParserContext	typeref:struct:AVCodecParserContext::AVCodecParser
parser	libavformat/avformat.h	/^    struct AVCodecParserContext *parser;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVCodecParserContext
parser_close	libavcodec/avcodec.h	/^    void (*parser_close)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_init	libavcodec/avcodec.h	/^    int (*parser_init)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_parse	libavcodec/avcodec.h	/^    int (*parser_parse)(AVCodecParserContext *s,$/;"	m	struct:AVCodecParser
partial_buf	libavfilter/avfilter.h	/^    AVFrame *partial_buf;$/;"	m	struct:AVFilterLink
partial_buf_size	libavfilter/avfilter.h	/^    int partial_buf_size;$/;"	m	struct:AVFilterLink
pb	libavformat/avformat.h	/^    AVIOContext *pb;$/;"	m	struct:AVFormatContext
pcr_pid	libavformat/avformat.h	/^    int pcr_pid;$/;"	m	struct:AVProgram
pic_param_buf_id	libavcodec/vaapi.h	/^    uint32_t pic_param_buf_id;$/;"	m	struct:vaapi_context
pict	libavcodec/avcodec.h	/^    AVPicture pict;$/;"	m	struct:AVSubtitleRect
pict_type	libavcodec/avcodec.h	/^    int pict_type; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
pict_type	libavutil/frame.h	/^    enum AVPictureType pict_type;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVPictureType
picture_structure	libavcodec/avcodec.h	/^    enum AVPictureStructure picture_structure;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVPictureStructure
picture_structure	libavcodec/xvmc.h	/^    unsigned int    picture_structure;$/;"	m	struct:xvmc_pix_fmt
pitch	libavutil/hwcontext_drm.h	/^    ptrdiff_t pitch;$/;"	m	struct:AVDRMPlaneDescriptor
pitch	libavutil/spherical.h	/^    int32_t pitch; \/\/\/< Rotation around the right vector [-90, 90].$/;"	m	struct:AVSphericalMapping
pix_fmt	libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVPixelFormat
pix_fmt	libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVPixelFormat
pix_fmt	libavcodec/dirac.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVDiracSeqHeader	typeref:enum:AVDiracSeqHeader::AVPixelFormat
pix_fmt	libavcodec/dv_profile.h	/^    enum AVPixelFormat pix_fmt;             \/* picture pixel format *\/$/;"	m	struct:AVDVProfile	typeref:enum:AVDVProfile::AVPixelFormat
pix_fmts	libavcodec/avcodec.h	/^    const enum AVPixelFormat *pix_fmts;     \/\/\/< array of supported pixel formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVPixelFormat
pixel_fmts	libavfilter/buffersink.h	/^    const enum AVPixelFormat *pixel_fmts; \/\/\/< list of allowed pixel formats, terminated by AV_PIX_FMT_NONE$/;"	m	struct:AVBufferSinkParams	typeref:enum:AVBufferSinkParams::AVPixelFormat
pixel_format	libavdevice/avdevice.h	/^    enum AVPixelFormat pixel_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVPixelFormat
pixel_range_index	libavcodec/dirac.h	/^    uint8_t pixel_range_index;      \/\/\/< index into dirac_pixel_range_presets[]$/;"	m	struct:AVDiracSeqHeader
pkt	libavformat/avformat.h	/^    AVPacket pkt;$/;"	m	struct:AVPacketList
pkt_dts	libavutil/frame.h	/^    int64_t pkt_dts;$/;"	m	struct:AVFrame
pkt_duration	libavutil/frame.h	/^    int64_t pkt_duration;$/;"	m	struct:AVFrame
pkt_pos	libavutil/frame.h	/^    int64_t pkt_pos;$/;"	m	struct:AVFrame
pkt_pts	libavutil/frame.h	/^    int64_t pkt_pts;$/;"	m	struct:AVFrame
pkt_size	libavutil/frame.h	/^    int pkt_size;$/;"	m	struct:AVFrame
pkt_timebase	libavcodec/avcodec.h	/^    AVRational pkt_timebase;$/;"	m	struct:AVCodecContext
plane	libavutil/pixdesc.h	/^    int plane;$/;"	m	struct:AVComponentDescriptor
planes	libavutil/hwcontext_drm.h	/^    AVDRMPlaneDescriptor planes[AV_DRM_MAX_PLANES];$/;"	m	struct:AVDRMLayerDescriptor
pmt_pid	libavformat/avformat.h	/^    int pmt_pid;$/;"	m	struct:AVProgram
pool	libavutil/hwcontext.h	/^    AVBufferPool *pool;$/;"	m	struct:AVHWFramesContext
pos	libavcodec/avcodec.h	/^    int64_t pos;                            \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVPacket
pos	libavcodec/avcodec.h	/^    int64_t pos;$/;"	m	struct:AVCodecParserContext
pos	libavformat/avformat.h	/^    int64_t pos;$/;"	m	struct:AVIndexEntry
pos	libavformat/avio.h	/^    int64_t pos;            \/**< position in the file of the current buffer *\/$/;"	m	struct:AVIOContext
position	libavcodec/avcodec.h	/^    int16_t position[3][2];$/;"	m	struct:AVPanScan
pp_context	libpostproc/postprocess.h	/^typedef void pp_context;$/;"	t
pp_context_t	libpostproc/postprocess.h	/^typedef pp_context pp_context_t;$/;"	t
pp_mode	libpostproc/postprocess.h	/^typedef void pp_mode;$/;"	t
pp_mode_t	libpostproc/postprocess.h	/^typedef pp_mode pp_mode_t;$/;"	t
pre_dia_size	libavcodec/avcodec.h	/^    int pre_dia_size;$/;"	m	struct:AVCodecContext
pre_me	libavcodec/avcodec.h	/^    int pre_me;$/;"	m	struct:AVCodecContext
prediction_method	libavcodec/avcodec.h	/^     int prediction_method;$/;"	m	struct:AVCodecContext
preferred_downmix_type	libavutil/downmix_info.h	/^    enum AVDownmixType preferred_downmix_type;$/;"	m	struct:AVDownmixInfo	typeref:enum:AVDownmixInfo::AVDownmixType
preinit	libavfilter/avfilter.h	/^    int (*preinit)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
priv	libavfilter/avfilter.h	/^    void *priv;                     \/\/\/< private data for use by the filter$/;"	m	struct:AVFilterContext
priv_allocated_size	libavcodec/vda.h	/^    int                 priv_allocated_size;$/;"	m	struct:vda_context
priv_bitstream	libavcodec/vda.h	/^    uint8_t             *priv_bitstream;$/;"	m	struct:vda_context
priv_bitstream_size	libavcodec/vda.h	/^    int                 priv_bitstream_size;$/;"	m	struct:vda_context
priv_class	libavcodec/avcodec.h	/^    const AVClass *priv_class;              \/\/\/< AVClass for the private context$/;"	m	struct:AVCodec
priv_class	libavcodec/avcodec.h	/^    const AVClass *priv_class;$/;"	m	struct:AVBitStreamFilter
priv_class	libavfilter/avfilter.h	/^    const AVClass *priv_class;$/;"	m	struct:AVFilter
priv_class	libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVInputFormat
priv_class	libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVOutputFormat
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVBSFContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVBitStreamFilterContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecParserContext
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVFormatContext
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVStream
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVBitStreamFilter
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodec
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodecParser
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVHWAccel
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVInputFormat
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVOutputFormat
priv_pts	libavformat/avformat.h	/^    struct FFFrac *priv_pts;$/;"	m	struct:AVStream	typeref:struct:AVStream::FFFrac
priv_size	libavfilter/avfilter.h	/^    int priv_size;      \/\/\/< size of private data to allocate for the filter$/;"	m	struct:AVFilter
probe_data	libavformat/avformat.h	/^    AVProbeData probe_data;$/;"	m	struct:AVStream
probe_packets	libavformat/avformat.h	/^    int probe_packets;$/;"	m	struct:AVStream
probe_score	libavformat/avformat.h	/^    int probe_score;$/;"	m	struct:AVFormatContext
probesize	libavformat/avformat.h	/^    int64_t probesize;$/;"	m	struct:AVFormatContext
process_command	libavfilter/avfilter.h	/^    int (*process_command)(AVFilterContext *, const char *cmd, const char *arg, char *res, int res_len, int flags);$/;"	m	struct:AVFilter
profile	libavcodec/avcodec.h	/^     int profile;$/;"	m	struct:AVCodecContext
profile	libavcodec/avcodec.h	/^    int profile;$/;"	m	struct:AVCodecParameters
profile	libavcodec/avcodec.h	/^    int profile;$/;"	m	struct:AVProfile
profile	libavcodec/dirac.h	/^    int profile;$/;"	m	struct:AVDiracSeqHeader
profiles	libavcodec/avcodec.h	/^    const AVProfile *profiles;              \/\/\/< array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}$/;"	m	struct:AVCodec
profiles	libavcodec/avcodec.h	/^    const struct AVProfile *profiles;$/;"	m	struct:AVCodecDescriptor	typeref:struct:AVCodecDescriptor::AVProfile
program_num	libavformat/avformat.h	/^    int program_num;$/;"	m	struct:AVProgram
programs	libavformat/avformat.h	/^    AVProgram **programs;$/;"	m	struct:AVFormatContext
projection	libavutil/spherical.h	/^    enum AVSphericalProjection projection;$/;"	m	struct:AVSphericalMapping	typeref:enum:AVSphericalMapping::AVSphericalProjection
properties	libavcodec/avcodec.h	/^    unsigned properties;$/;"	m	struct:AVCodecContext
props	libavcodec/avcodec.h	/^    int             props;$/;"	m	struct:AVCodecDescriptor
protocol_blacklist	libavformat/avformat.h	/^    char *protocol_blacklist;$/;"	m	struct:AVFormatContext
protocol_blacklist	libavformat/avio.h	/^    const char *protocol_blacklist;$/;"	m	struct:AVIOContext
protocol_whitelist	libavformat/avformat.h	/^    char *protocol_whitelist;$/;"	m	struct:AVFormatContext
protocol_whitelist	libavformat/avio.h	/^    const char *protocol_whitelist;$/;"	m	struct:AVIOContext
pts	libavcodec/avcodec.h	/^    int64_t pts;     \/* pts of the current frame *\/$/;"	m	struct:AVCodecParserContext
pts	libavcodec/avcodec.h	/^    int64_t pts;    \/\/\/< Same as packet pts, in AV_TIME_BASE$/;"	m	struct:AVSubtitle
pts	libavcodec/avcodec.h	/^    int64_t pts;$/;"	m	struct:AVPacket
pts	libavformat/avformat.h	/^    struct AVFrac pts;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVFrac
pts	libavutil/frame.h	/^    int64_t pts;$/;"	m	struct:AVFrame
pts_buffer	libavformat/avformat.h	/^    int64_t pts_buffer[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_correction_last_dts	libavcodec/avcodec.h	/^    int64_t pts_correction_last_dts;       \/\/\/ DTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_last_pts	libavcodec/avcodec.h	/^    int64_t pts_correction_last_pts;       \/\/\/ PTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_dts	libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_dts; \/\/\/ Number of incorrect DTS values so far$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_pts	libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_pts; \/\/\/ Number of incorrect PTS values so far$/;"	m	struct:AVCodecContext
pts_dts_delta	libavcodec/avcodec.h	/^    int pts_dts_delta;$/;"	m	struct:AVCodecParserContext
pts_reorder_error	libavformat/avformat.h	/^    int64_t pts_reorder_error[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_reorder_error_count	libavformat/avformat.h	/^    uint8_t pts_reorder_error_count[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_wrap_behavior	libavformat/avformat.h	/^    int pts_wrap_behavior;         \/\/\/< behavior on wrap detection$/;"	m	struct:AVProgram
pts_wrap_behavior	libavformat/avformat.h	/^    int pts_wrap_behavior;$/;"	m	struct:AVStream
pts_wrap_bits	libavformat/avformat.h	/^    int pts_wrap_bits; \/**< number of bits in pts (used for wrapping control) *\/$/;"	m	struct:AVStream
pts_wrap_reference	libavformat/avformat.h	/^    int64_t pts_wrap_reference;    \/\/\/< reference dts for wrap detection$/;"	m	struct:AVProgram
pts_wrap_reference	libavformat/avformat.h	/^    int64_t pts_wrap_reference;$/;"	m	struct:AVStream
q	libavutil/opt.h	/^        AVRational q;$/;"	m	union:AVOption::__anon15
qblur	libavcodec/avcodec.h	/^    float qblur;      \/\/\/< amount of qscale smoothing over time (0.0-1.0)$/;"	m	struct:AVCodecContext
qcompress	libavcodec/avcodec.h	/^    float qcompress;  \/\/\/< amount of qscale change between easy & hard scenes (0.0-1.0)$/;"	m	struct:AVCodecContext
qmax	libavcodec/avcodec.h	/^    int qmax;$/;"	m	struct:AVCodecContext
qmin	libavcodec/avcodec.h	/^    int qmin;$/;"	m	struct:AVCodecContext
qp_table_buf	libavutil/frame.h	/^    AVBufferRef *qp_table_buf;$/;"	m	struct:AVFrame
qscale	libavcodec/avcodec.h	/^    int qscale; \/\/ If this is 0 then quality_factor will be used instead.$/;"	m	struct:RcOverride
qscale_table	libavutil/frame.h	/^    int8_t *qscale_table;$/;"	m	struct:AVFrame
qscale_type	libavutil/frame.h	/^    int qscale_type;$/;"	m	struct:AVFrame
qstride	libavutil/frame.h	/^    int qstride;$/;"	m	struct:AVFrame
quality	libavutil/frame.h	/^    int quality;$/;"	m	struct:AVFrame
quality_factor	libavcodec/avcodec.h	/^    float quality_factor;$/;"	m	struct:RcOverride
query_codec	libavformat/avformat.h	/^    int (*query_codec)(enum AVCodecID id, int std_compliance);$/;"	m	struct:AVOutputFormat
query_formats	libavfilter/avfilter.h	/^    int (*query_formats)(AVFilterContext *);$/;"	m	struct:AVFilter
query_ranges	libavutil/log.h	/^    int (*query_ranges)(struct AVOptionRanges **, void *obj, const char *key, int flags);$/;"	m	struct:AVClass
r_frame_rate	libavformat/avformat.h	/^    AVRational r_frame_rate;$/;"	m	struct:AVStream
range	libavutil/opt.h	/^    AVOptionRange **range;$/;"	m	struct:AVOptionRanges
rate	libavutil/timecode.h	/^    AVRational rate;    \/\/\/< frame rate in rational form$/;"	m	struct:__anon17
raw_codec_id	libavformat/avformat.h	/^    int raw_codec_id;$/;"	m	struct:AVInputFormat
rc_buffer_aggressivity	libavcodec/avcodec.h	/^    float rc_buffer_aggressivity;$/;"	m	struct:AVCodecContext
rc_buffer_size	libavcodec/avcodec.h	/^    int rc_buffer_size;$/;"	m	struct:AVCodecContext
rc_eq	libavcodec/avcodec.h	/^    const char *rc_eq;$/;"	m	struct:AVCodecContext
rc_initial_buffer_occupancy	libavcodec/avcodec.h	/^    int rc_initial_buffer_occupancy;$/;"	m	struct:AVCodecContext
rc_initial_cplx	libavcodec/avcodec.h	/^    float rc_initial_cplx;$/;"	m	struct:AVCodecContext
rc_max_available_vbv_use	libavcodec/avcodec.h	/^    float rc_max_available_vbv_use;$/;"	m	struct:AVCodecContext
rc_max_rate	libavcodec/avcodec.h	/^    int64_t rc_max_rate;$/;"	m	struct:AVCodecContext
rc_min_rate	libavcodec/avcodec.h	/^    int64_t rc_min_rate;$/;"	m	struct:AVCodecContext
rc_min_vbv_overflow_use	libavcodec/avcodec.h	/^    float rc_min_vbv_overflow_use;$/;"	m	struct:AVCodecContext
rc_override	libavcodec/avcodec.h	/^    RcOverride *rc_override;$/;"	m	struct:AVCodecContext
rc_override_count	libavcodec/avcodec.h	/^    int rc_override_count;$/;"	m	struct:AVCodecContext
rc_qmod_amp	libavcodec/avcodec.h	/^    float rc_qmod_amp;$/;"	m	struct:AVCodecContext
rc_qmod_freq	libavcodec/avcodec.h	/^    int rc_qmod_freq;$/;"	m	struct:AVCodecContext
rc_qsquish	libavcodec/avcodec.h	/^    float rc_qsquish;$/;"	m	struct:AVCodecContext
rc_strategy	libavcodec/avcodec.h	/^    attribute_deprecated int rc_strategy;$/;"	m	struct:AVCodecContext
re	libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
read_close	libavformat/avformat.h	/^    int (*read_close)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_header	libavformat/avformat.h	/^    int (*read_header)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_packet	libavformat/avformat.h	/^    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVInputFormat
read_packet	libavformat/avio.h	/^    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
read_pause	libavformat/avformat.h	/^    int (*read_pause)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_pause	libavformat/avio.h	/^    int (*read_pause)(void *opaque, int pause);$/;"	m	struct:AVIOContext
read_play	libavformat/avformat.h	/^    int (*read_play)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_probe	libavformat/avformat.h	/^    int (*read_probe)(AVProbeData *);$/;"	m	struct:AVInputFormat
read_seek	libavformat/avformat.h	/^    int (*read_seek)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_seek	libavformat/avio.h	/^    int64_t (*read_seek)(void *opaque, int stream_index,$/;"	m	struct:AVIOContext
read_seek2	libavformat/avformat.h	/^    int (*read_seek2)(struct AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);$/;"	m	struct:AVInputFormat
read_timestamp	libavformat/avformat.h	/^    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,$/;"	m	struct:AVInputFormat
ready	libavfilter/avfilter.h	/^    unsigned ready;$/;"	m	struct:AVFilterContext
receive_frame	libavcodec/avcodec.h	/^    int (*receive_frame)(AVCodecContext *avctx, AVFrame *frame);$/;"	m	struct:AVCodec
receive_packet	libavcodec/avcodec.h	/^    int (*receive_packet)(AVCodecContext *avctx, AVPacket *avpkt);$/;"	m	struct:AVCodec
recommended_encoder_configuration	libavformat/avformat.h	/^    char *recommended_encoder_configuration;$/;"	m	struct:AVStream
rects	libavcodec/avcodec.h	/^    AVSubtitleRect **rects;$/;"	m	struct:AVSubtitle
refcounted_frames	libavcodec/avcodec.h	/^    int refcounted_frames;$/;"	m	struct:AVCodecContext
refs	libavcodec/avcodec.h	/^    int refs;$/;"	m	struct:AVCodecContext
render	libavcodec/vdpau.h	/^    VdpDecoderRender *render;$/;"	m	struct:AVVDPAUContext
render2	libavcodec/vdpau.h	/^    AVVDPAU_Render2 render2;$/;"	m	struct:AVVDPAUContext
reordered_opaque	libavcodec/avcodec.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVCodecContext
reordered_opaque	libavutil/frame.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVFrame
repeat_pict	libavcodec/avcodec.h	/^    int repeat_pict; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
repeat_pict	libavutil/frame.h	/^    int repeat_pict;$/;"	m	struct:AVFrame
report_id	libavcodec/d3d11va.h	/^    unsigned report_id;$/;"	m	struct:AVD3D11VAContext
report_id	libavcodec/dxva2.h	/^    unsigned report_id;$/;"	m	struct:dxva_context
request_channel_layout	libavcodec/avcodec.h	/^    uint64_t request_channel_layout;$/;"	m	struct:AVCodecContext
request_probe	libavformat/avformat.h	/^    int request_probe;$/;"	m	struct:AVStream
request_sample_fmt	libavcodec/avcodec.h	/^    enum AVSampleFormat request_sample_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
request_samples	libavfilter/avfilter.h	/^    int request_samples;$/;"	m	struct:AVFilterLink
resample_lavr_opts	libavfilter/avfilter.h	/^    attribute_deprecated char *resample_lavr_opts;   \/\/\/< libavresample options to use for the auto-inserted resample filters$/;"	m	struct:AVFilterGraph
reserved	libavfilter/avfilter.h	/^    char reserved[0xF000];$/;"	m	struct:AVFilterLink
rfps_duration_sum	libavformat/avformat.h	/^        int64_t rfps_duration_sum;$/;"	m	struct:AVStream::__anon5
rndx	libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
roll	libavutil/spherical.h	/^    int32_t roll;  \/\/\/< Rotation around the forward vector [-180, 180].$/;"	m	struct:AVSphericalMapping
round_keys	libavutil/des.h	/^    uint64_t round_keys[3][16];$/;"	m	struct:AVDES
rptr	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
rtp_callback	libavcodec/avcodec.h	/^    void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);$/;"	m	struct:AVCodecContext
rtp_payload_size	libavcodec/avcodec.h	/^    int rtp_payload_size;   \/* The size of the RTP payload: the coder will  *\/$/;"	m	struct:AVCodecContext
s	libavutil/blowfish.h	/^    uint32_t s[4][256];$/;"	m	struct:AVBlowfish
sample_aspect_ratio	libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecContext
sample_aspect_ratio	libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecParameters
sample_aspect_ratio	libavcodec/dirac.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVDiracSeqHeader
sample_aspect_ratio	libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< agreed upon sample aspect ratio$/;"	m	struct:AVFilterLink
sample_aspect_ratio	libavfilter/buffersrc.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVBufferSrcParameters
sample_aspect_ratio	libavformat/avformat.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVStream
sample_aspect_ratio	libavutil/frame.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVFrame
sample_fmt	libavcodec/avcodec.h	/^    enum AVSampleFormat sample_fmt;  \/\/\/< sample format$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
sample_fmts	libavcodec/avcodec.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< array of supported sample formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVSampleFormat
sample_fmts	libavfilter/buffersink.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< list of allowed sample formats, terminated by AV_SAMPLE_FMT_NONE$/;"	m	struct:AVABufferSinkParams	typeref:enum:AVABufferSinkParams::AVSampleFormat
sample_format	libavdevice/avdevice.h	/^    enum AVSampleFormat sample_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVSampleFormat
sample_rate	libavcodec/avcodec.h	/^    int      sample_rate;$/;"	m	struct:AVCodecParameters
sample_rate	libavcodec/avcodec.h	/^    int sample_rate; \/\/\/< samples per second$/;"	m	struct:AVCodecContext
sample_rate	libavdevice/avdevice.h	/^    int sample_rate;$/;"	m	struct:AVDeviceCapabilitiesQuery
sample_rate	libavfilter/avfilter.h	/^    int sample_rate;            \/\/\/< samples per second$/;"	m	struct:AVFilterLink
sample_rate	libavfilter/buffersrc.h	/^    int sample_rate;$/;"	m	struct:AVBufferSrcParameters
sample_rate	libavutil/frame.h	/^    int sample_rate;$/;"	m	struct:AVFrame
sample_rates	libavfilter/buffersink.h	/^    int *sample_rates;                      \/\/\/< list of allowed sample rates, terminated by -1$/;"	m	struct:AVABufferSinkParams
sar	libavcodec/dv_profile.h	/^    AVRational       sar[2];                \/* sample aspect ratios for 4:3 and 16:9 *\/$/;"	m	struct:AVDVProfile
scale_sws_opts	libavfilter/avfilter.h	/^    char *scale_sws_opts; \/\/\/< sws options to use for the auto-inserted scale filters$/;"	m	struct:AVFilterGraph
scenechange_factor	libavcodec/avcodec.h	/^    attribute_deprecated int scenechange_factor;$/;"	m	struct:AVCodecContext
scenechange_threshold	libavcodec/avcodec.h	/^    int scenechange_threshold;$/;"	m	struct:AVCodecContext
seek	libavformat/avio.h	/^    int64_t (*seek)(void *opaque, int64_t offset, int whence);$/;"	m	struct:AVIOContext
seek2any	libavformat/avformat.h	/^    int seek2any;$/;"	m	struct:AVFormatContext
seek_count	libavformat/avio.h	/^    int seek_count;$/;"	m	struct:AVIOContext
seek_preroll	libavcodec/avcodec.h	/^    int seek_preroll;$/;"	m	struct:AVCodecContext
seek_preroll	libavcodec/avcodec.h	/^    int seek_preroll;$/;"	m	struct:AVCodecParameters
seekable	libavformat/avio.h	/^    int seekable;$/;"	m	struct:AVIOContext
send_frame	libavcodec/avcodec.h	/^    int (*send_frame)(AVCodecContext *avctx, const AVFrame *frame);$/;"	m	struct:AVCodec
session	libavcodec/qsv.h	/^    mfxSession session;$/;"	m	struct:AVQSVContext
session	libavcodec/videotoolbox.h	/^    VTDecompressionSessionRef session;$/;"	m	struct:AVVideotoolboxContext
session	libavutil/hwcontext_qsv.h	/^    mfxSession session;$/;"	m	struct:AVQSVDeviceContext
shift	libavutil/pixdesc.h	/^    int shift;$/;"	m	struct:AVComponentDescriptor
short_seek_get	libavformat/avio.h	/^    int (*short_seek_get)(void *opaque);$/;"	m	struct:AVIOContext
short_seek_threshold	libavformat/avio.h	/^    int short_seek_threshold;$/;"	m	struct:AVIOContext
side_data	libavcodec/avcodec.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVPacket
side_data	libavformat/avformat.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVStream
side_data	libavutil/frame.h	/^    AVFrameSideData **side_data;$/;"	m	struct:AVFrame
side_data_elems	libavcodec/avcodec.h	/^    int side_data_elems;$/;"	m	struct:AVPacket
side_data_only_packets	libavcodec/avcodec.h	/^    int side_data_only_packets;$/;"	m	struct:AVCodecContext
sink_links	libavfilter/avfilter.h	/^    AVFilterLink **sink_links;$/;"	m	struct:AVFilterGraph
sink_links_count	libavfilter/avfilter.h	/^    int sink_links_count;$/;"	m	struct:AVFilterGraph
size	libavcodec/avcodec.h	/^    int      size;$/;"	m	struct:AVPacketSideData
size	libavcodec/avcodec.h	/^    int   size;$/;"	m	struct:AVPacket
size	libavformat/avformat.h	/^    int size:30; \/\/Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment).$/;"	m	struct:AVIndexEntry
size	libavformat/avio.h	/^    int64_t size;                         \/**< File size in bytes, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
size	libavutil/buffer.h	/^    int      size;$/;"	m	struct:AVBufferRef
size	libavutil/frame.h	/^    int      size;$/;"	m	struct:AVFrameSideData
size	libavutil/hwcontext_drm.h	/^    size_t size;$/;"	m	struct:AVDRMObjectDescriptor
skip_alpha	libavcodec/avcodec.h	/^    int skip_alpha;$/;"	m	struct:AVCodecContext
skip_bottom	libavcodec/avcodec.h	/^    int skip_bottom;$/;"	m	struct:AVCodecContext
skip_count	libavcodec/avcodec.h	/^    int skip_count;$/;"	m	struct:AVCodecContext
skip_frame	libavcodec/avcodec.h	/^    enum AVDiscard skip_frame;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_idct	libavcodec/avcodec.h	/^    enum AVDiscard skip_idct;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_initial_bytes	libavformat/avformat.h	/^    int64_t skip_initial_bytes;$/;"	m	struct:AVFormatContext
skip_loop_filter	libavcodec/avcodec.h	/^    enum AVDiscard skip_loop_filter;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_samples	libavformat/avformat.h	/^    int skip_samples;$/;"	m	struct:AVStream
skip_to_keyframe	libavformat/avformat.h	/^    int skip_to_keyframe;$/;"	m	struct:AVStream
skip_top	libavcodec/avcodec.h	/^    int skip_top;$/;"	m	struct:AVCodecContext
slice_buf_ids	libavcodec/vaapi.h	/^    uint32_t *slice_buf_ids;$/;"	m	struct:vaapi_context
slice_buf_ids_alloc	libavcodec/vaapi.h	/^    unsigned int slice_buf_ids_alloc;$/;"	m	struct:vaapi_context
slice_count	libavcodec/avcodec.h	/^    int slice_count;$/;"	m	struct:AVCodecContext
slice_count	libavcodec/vaapi.h	/^    unsigned int slice_count;$/;"	m	struct:vaapi_context
slice_data	libavcodec/vaapi.h	/^    const uint8_t *slice_data;$/;"	m	struct:vaapi_context
slice_data_size	libavcodec/vaapi.h	/^    uint32_t slice_data_size;$/;"	m	struct:vaapi_context
slice_flags	libavcodec/avcodec.h	/^    int slice_flags;$/;"	m	struct:AVCodecContext
slice_offset	libavcodec/avcodec.h	/^    int *slice_offset;$/;"	m	struct:AVCodecContext
slice_param_size	libavcodec/vaapi.h	/^    unsigned int slice_param_size;$/;"	m	struct:vaapi_context
slice_params	libavcodec/vaapi.h	/^    void *slice_params;$/;"	m	struct:vaapi_context
slice_params_alloc	libavcodec/vaapi.h	/^    unsigned int slice_params_alloc;$/;"	m	struct:vaapi_context
slices	libavcodec/avcodec.h	/^    int slices;$/;"	m	struct:AVCodecContext
source	libavutil/motion_vector.h	/^    int32_t source;$/;"	m	struct:AVMotionVector
spatial_cplx_masking	libavcodec/avcodec.h	/^    float spatial_cplx_masking;$/;"	m	struct:AVCodecContext
split	libavcodec/avcodec.h	/^    int (*split)(AVCodecContext *avctx, const uint8_t *buf, int buf_size);$/;"	m	struct:AVCodecParser
src	libavfilter/avfilter.h	/^    AVFilterContext *src;       \/\/\/< source filter$/;"	m	struct:AVFilterLink
src_x	libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
src_y	libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
srcpad	libavfilter/avfilter.h	/^    AVFilterPad *srcpad;        \/\/\/< output pad on the source filter$/;"	m	struct:AVFilterLink
start	libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
start	libavutil/timecode.h	/^    int start;          \/\/\/< timecode frame start (first base frame number)$/;"	m	struct:__anon17
start_display_time	libavcodec/avcodec.h	/^    uint32_t start_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
start_frame	libavcodec/avcodec.h	/^    int (*start_frame)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
start_frame	libavcodec/avcodec.h	/^    int start_frame;$/;"	m	struct:RcOverride
start_mv_blocks_num	libavcodec/xvmc.h	/^    int             start_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
start_skip_samples	libavformat/avformat.h	/^    int64_t start_skip_samples;$/;"	m	struct:AVStream
start_time	libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVFormatContext
start_time	libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVProgram
start_time	libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVStream
start_time_realtime	libavformat/avformat.h	/^    int64_t start_time_realtime;$/;"	m	struct:AVFormatContext
state	libavcodec/vdpau.h	/^    int state; \/\/\/< Holds FF_VDPAU_STATE_* values.$/;"	m	struct:vdpau_render_state
state	libavutil/lfg.h	/^    unsigned int state[64];$/;"	m	struct:AVLFG
state	libavutil/rc4.h	/^    uint8_t state[256];$/;"	m	struct:AVRC4
stats_in	libavcodec/avcodec.h	/^    char *stats_in;$/;"	m	struct:AVCodecContext
stats_out	libavcodec/avcodec.h	/^    char *stats_out;$/;"	m	struct:AVCodecContext
status_change_timestamp	libavformat/avio.h	/^    int64_t status_change_timestamp;      \/**< Time of last status change in microseconds since unix$/;"	m	struct:AVIODirEntry
status_in	libavfilter/avfilter.h	/^    int status_in;$/;"	m	struct:AVFilterLink
status_in_pts	libavfilter/avfilter.h	/^    int64_t status_in_pts;$/;"	m	struct:AVFilterLink
status_out	libavfilter/avfilter.h	/^    int status_out;$/;"	m	struct:AVFilterLink
step	libavutil/pixdesc.h	/^    int step;$/;"	m	struct:AVComponentDescriptor
step_minus1	libavutil/pixdesc.h	/^    attribute_deprecated int step_minus1;$/;"	m	struct:AVComponentDescriptor
str	libavutil/opt.h	/^        const char *str;$/;"	m	union:AVOption::__anon15
str	libavutil/opt.h	/^    const char *str;$/;"	m	struct:AVOptionRange
stream_codec_tag	libavcodec/avcodec.h	/^    unsigned int stream_codec_tag;$/;"	m	struct:AVCodecContext
stream_identifier	libavformat/avformat.h	/^    int stream_identifier;$/;"	m	struct:AVStream
stream_index	libavcodec/avcodec.h	/^    int   stream_index;$/;"	m	struct:AVPacket
stream_index	libavformat/avformat.h	/^    unsigned int   *stream_index;$/;"	m	struct:AVProgram
streams	libavformat/avformat.h	/^    AVStream **streams;$/;"	m	struct:AVFormatContext
strict_std_compliance	libavcodec/avcodec.h	/^    int strict_std_compliance;$/;"	m	struct:AVCodecContext
strict_std_compliance	libavformat/avformat.h	/^    int strict_std_compliance;$/;"	m	struct:AVFormatContext
sub_charenc	libavcodec/avcodec.h	/^    char *sub_charenc;$/;"	m	struct:AVCodecContext
sub_charenc_mode	libavcodec/avcodec.h	/^    int sub_charenc_mode;$/;"	m	struct:AVCodecContext
sub_text_format	libavcodec/avcodec.h	/^    int sub_text_format;$/;"	m	struct:AVCodecContext
subtitle_codec	libavformat/avformat.h	/^    AVCodec *subtitle_codec;$/;"	m	struct:AVFormatContext
subtitle_codec	libavformat/avformat.h	/^    enum AVCodecID subtitle_codec; \/**< default subtitle codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
subtitle_codec_id	libavformat/avformat.h	/^    enum AVCodecID subtitle_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
subtitle_header	libavcodec/avcodec.h	/^    uint8_t *subtitle_header;$/;"	m	struct:AVCodecContext
subtitle_header_size	libavcodec/avcodec.h	/^    int subtitle_header_size;$/;"	m	struct:AVCodecContext
supported_framerates	libavcodec/avcodec.h	/^    const AVRational *supported_framerates; \/\/\/< array of supported framerates, or NULL if any, array is terminated by {0,0}$/;"	m	struct:AVCodec
supported_samplerates	libavcodec/avcodec.h	/^    const int *supported_samplerates;       \/\/\/< array of supported audio samplerates, or NULL if unknown, array is terminated by 0$/;"	m	struct:AVCodec
surface	libavcodec/d3d11va.h	/^    ID3D11VideoDecoderOutputView **surface;$/;"	m	struct:AVD3D11VAContext
surface	libavcodec/dxva2.h	/^    LPDIRECT3DSURFACE9 *surface;$/;"	m	struct:dxva_context
surface	libavcodec/mediacodec.h	/^    void *surface;$/;"	m	struct:AVMediaCodecContext
surface	libavcodec/vdpau.h	/^    VdpVideoSurface surface; \/\/\/< Used as rendered surface, never changed.$/;"	m	struct:vdpau_render_state
surface_count	libavcodec/d3d11va.h	/^    unsigned surface_count;$/;"	m	struct:AVD3D11VAContext
surface_count	libavcodec/dxva2.h	/^    unsigned surface_count;$/;"	m	struct:dxva_context
surface_ids	libavutil/hwcontext_vaapi.h	/^    VASurfaceID     *surface_ids;$/;"	m	struct:AVVAAPIFramesContext
surface_type	libavutil/hwcontext_dxva2.h	/^    DWORD               surface_type;$/;"	m	struct:AVDXVA2FramesContext
surfaces	libavutil/hwcontext_dxva2.h	/^    IDirect3DSurface9 **surfaces;$/;"	m	struct:AVDXVA2FramesContext
surfaces	libavutil/hwcontext_qsv.h	/^    mfxFrameSurface1 *surfaces;$/;"	m	struct:AVQSVFramesContext
surround_mix_level	libavutil/downmix_info.h	/^    double surround_mix_level;$/;"	m	struct:AVDownmixInfo
surround_mix_level_ltrt	libavutil/downmix_info.h	/^    double surround_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
sw_format	libavutil/hwcontext.h	/^    enum AVPixelFormat sw_format;$/;"	m	struct:AVHWFramesContext	typeref:enum:AVHWFramesContext::AVPixelFormat
sw_pix_fmt	libavcodec/avcodec.h	/^    enum AVPixelFormat sw_pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVPixelFormat
temporal_cplx_masking	libavcodec/avcodec.h	/^    float temporal_cplx_masking;$/;"	m	struct:AVCodecContext
text	libavcodec/avcodec.h	/^    char *text;                     \/\/\/< 0 terminated plain UTF-8 text$/;"	m	struct:AVSubtitleRect
texture	libavutil/hwcontext_d3d11va.h	/^    ID3D11Texture2D *texture;$/;"	m	struct:AVD3D11FrameDescriptor
texture	libavutil/hwcontext_d3d11va.h	/^    ID3D11Texture2D *texture;$/;"	m	struct:AVD3D11VAFramesContext
thread_count	libavcodec/avcodec.h	/^    int thread_count;$/;"	m	struct:AVCodecContext
thread_safe_callbacks	libavcodec/avcodec.h	/^    int thread_safe_callbacks;$/;"	m	struct:AVCodecContext
thread_type	libavcodec/avcodec.h	/^    int thread_type;$/;"	m	struct:AVCodecContext
thread_type	libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterContext
thread_type	libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterGraph
ticks_per_frame	libavcodec/avcodec.h	/^    int ticks_per_frame;$/;"	m	struct:AVCodecContext
time_base	libavcodec/avcodec.h	/^    AVRational time_base;$/;"	m	struct:AVCodecContext
time_base	libavcodec/dv_profile.h	/^    AVRational       time_base;             \/* 1\/framerate *\/$/;"	m	struct:AVDVProfile
time_base	libavfilter/avfilter.h	/^    AVRational time_base;$/;"	m	struct:AVFilterLink
time_base	libavfilter/buffersrc.h	/^    AVRational time_base;$/;"	m	struct:AVBufferSrcParameters
time_base	libavformat/avformat.h	/^    AVRational time_base;   \/\/\/< time base in which the start\/end timestamps are specified$/;"	m	struct:AVChapter
time_base	libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVStream
time_base_in	libavcodec/avcodec.h	/^    AVRational time_base_in;$/;"	m	struct:AVBSFContext
time_base_out	libavcodec/avcodec.h	/^    AVRational time_base_out;$/;"	m	struct:AVBSFContext
timecode_frame_start	libavcodec/avcodec.h	/^    int64_t timecode_frame_start;$/;"	m	struct:AVCodecContext
timestamp	libavformat/avformat.h	/^    int64_t timestamp;        \/**<$/;"	m	struct:AVIndexEntry
top_field_first	libavcodec/dirac.h	/^    uint8_t top_field_first;$/;"	m	struct:AVDiracSeqHeader
top_field_first	libavutil/frame.h	/^    int top_field_first;$/;"	m	struct:AVFrame
track_gain	libavutil/replaygain.h	/^    int32_t track_gain;$/;"	m	struct:AVReplayGain
track_peak	libavutil/replaygain.h	/^    uint32_t track_peak;$/;"	m	struct:AVReplayGain
trailing_padding	libavcodec/avcodec.h	/^    int trailing_padding;$/;"	m	struct:AVCodecContext
trailing_padding	libavcodec/avcodec.h	/^    int trailing_padding;$/;"	m	struct:AVCodecParameters
trellis	libavcodec/avcodec.h	/^    int trellis;$/;"	m	struct:AVCodecContext
triple_des	libavutil/des.h	/^    int triple_des;$/;"	m	struct:AVDES
ts_id	libavformat/avformat.h	/^    int ts_id;$/;"	m	struct:AVFormatContext
type	libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVMediaType
type	libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVMediaType
type	libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVMediaType
type	libavcodec/avcodec.h	/^    enum AVPacketSideDataType type;$/;"	m	struct:AVPacketSideData	typeref:enum:AVPacketSideData::AVPacketSideDataType
type	libavcodec/avcodec.h	/^    enum AVSubtitleType type;$/;"	m	struct:AVSubtitleRect	typeref:enum:AVSubtitleRect::AVSubtitleType
type	libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< filter media type$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::AVMediaType
type	libavformat/avio.h	/^    int type;                             \/**< Type of the entry *\/$/;"	m	struct:AVIODirEntry
type	libavutil/frame.h	/^    enum AVFrameSideDataType type;$/;"	m	struct:AVFrameSideData	typeref:enum:AVFrameSideData::AVFrameSideDataType
type	libavutil/hwcontext.h	/^    enum AVHWDeviceType type;$/;"	m	struct:AVHWDeviceContext	typeref:enum:AVHWDeviceContext::AVHWDeviceType
type	libavutil/opt.h	/^    enum AVOptionType type;$/;"	m	struct:AVOption	typeref:enum:AVOption::AVOptionType
type	libavutil/stereo3d.h	/^    enum AVStereo3DType type;$/;"	m	struct:AVStereo3D	typeref:enum:AVStereo3D::AVStereo3DType
u16	libavutil/intreadwrite.h	/^    uint16_t u16;$/;"	m	union:__anon13
u16	libavutil/intreadwrite.h	/^    uint16_t u16[2];$/;"	m	union:__anon12
u16	libavutil/intreadwrite.h	/^    uint16_t u16[4];$/;"	m	union:__anon11
u32	libavutil/intreadwrite.h	/^    uint32_t u32;$/;"	m	union:__anon12
u32	libavutil/intreadwrite.h	/^    uint32_t u32[2];$/;"	m	union:__anon11
u64	libavutil/intreadwrite.h	/^    uint64_t u64;$/;"	m	union:__anon11
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [2];$/;"	m	union:__anon13
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [4];$/;"	m	union:__anon12
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [8];$/;"	m	union:__anon11
unaligned_16	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_32	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_64	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	u
uninit	libavcodec/avcodec.h	/^    int (*uninit)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
uninit	libavfilter/avfilter.h	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
unit	libavutil/opt.h	/^    const char *unit;$/;"	m	struct:AVOption
unlock	libavutil/hwcontext_d3d11va.h	/^    void (*unlock)(void *lock_ctx);$/;"	m	struct:AVD3D11VADeviceContext
unsigned_intra	libavcodec/xvmc.h	/^    int             unsigned_intra;$/;"	m	struct:xvmc_pix_fmt
update_checksum	libavformat/avio.h	/^    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);$/;"	m	struct:AVIOContext
update_initial_durations_done	libavformat/avformat.h	/^    int update_initial_durations_done;$/;"	m	struct:AVStream
update_thread_context	libavcodec/avcodec.h	/^    int (*update_thread_context)(AVCodecContext *dst, const AVCodecContext *src);$/;"	m	struct:AVCodec
url_context	libavformat/avio.h	/^    struct URLContext *url_context;$/;"	m	struct:AVIODirContext	typeref:struct:AVIODirContext::URLContext
use_ref_buffer	libavcodec/vda.h	/^    int                 use_ref_buffer;$/;"	m	struct:vda_context
use_sync_decoding	libavcodec/vda.h	/^    int                 use_sync_decoding;$/;"	m	struct:vda_context
use_wallclock_as_timestamps	libavformat/avformat.h	/^    int use_wallclock_as_timestamps;$/;"	m	struct:AVFormatContext
user_id	libavformat/avio.h	/^    int64_t user_id;                      \/**< User ID of owner, -1 if unknown. *\/$/;"	m	struct:AVIODirEntry
user_opaque	libavutil/hwcontext.h	/^    void *user_opaque;$/;"	m	struct:AVHWDeviceContext
user_opaque	libavutil/hwcontext.h	/^    void *user_opaque;$/;"	m	struct:AVHWFramesContext
utf8	libavformat/avio.h	/^    int utf8;                             \/**< Set to 1 when name is encoded with UTF-8, 0 otherwise.$/;"	m	struct:AVIODirEntry
vaapi_context	libavcodec/vaapi.h	/^struct attribute_deprecated vaapi_context {$/;"	s
val	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
valid_hw_formats	libavutil/hwcontext.h	/^    enum AVPixelFormat *valid_hw_formats;$/;"	m	struct:AVHWFramesConstraints	typeref:enum:AVHWFramesConstraints::AVPixelFormat
valid_sw_formats	libavutil/hwcontext.h	/^    enum AVPixelFormat *valid_sw_formats;$/;"	m	struct:AVHWFramesConstraints	typeref:enum:AVHWFramesConstraints::AVPixelFormat
value	libavutil/dict.h	/^    char *value;$/;"	m	struct:AVDictionaryEntry
value_max	libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
value_min	libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
var_values	libavfilter/avfilter.h	/^    double *var_values;             \/\/\/< variable values for the enable expression$/;"	m	struct:AVFilterContext
vbv_delay	libavcodec/avcodec.h	/^    uint64_t vbv_delay;$/;"	m	struct:AVCPBProperties
vbv_delay	libavcodec/avcodec.h	/^    uint64_t vbv_delay;$/;"	m	struct:AVCodecContext
vc1	libavcodec/vdpau.h	/^    VdpPictureInfoVC1          vc1;$/;"	m	union:AVVDPAUPictureInfo
vda_context	libavcodec/vda.h	/^struct vda_context {$/;"	s
vdpau_render_state	libavcodec/vdpau.h	/^struct vdpau_render_state {$/;"	s
version	libavcodec/dirac.h	/^    DiracVersionInfo version;$/;"	m	struct:AVDiracSeqHeader
version	libavutil/log.h	/^    int version;$/;"	m	struct:AVClass
video_codec	libavformat/avformat.h	/^    AVCodec *video_codec;$/;"	m	struct:AVFormatContext
video_codec	libavformat/avformat.h	/^    enum AVCodecID video_codec;    \/**< default video codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
video_codec_id	libavformat/avformat.h	/^    enum AVCodecID video_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
video_context	libavcodec/d3d11va.h	/^    ID3D11VideoContext *video_context;$/;"	m	struct:AVD3D11VAContext
video_context	libavutil/hwcontext_d3d11va.h	/^    ID3D11VideoContext  *video_context;$/;"	m	struct:AVD3D11VADeviceContext
video_delay	libavcodec/avcodec.h	/^    int video_delay;$/;"	m	struct:AVCodecParameters
video_device	libavutil/hwcontext_d3d11va.h	/^    ID3D11VideoDevice   *video_device;$/;"	m	struct:AVD3D11VADeviceContext
video_stype	libavcodec/dv_profile.h	/^    int              video_stype;           \/* stype for VAUX source pack *\/$/;"	m	struct:AVDVProfile
w	libavcodec/avcodec.h	/^    int w;         \/\/\/< width            of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
w	libavfilter/avfilter.h	/^    int w;                      \/\/\/< agreed upon image width$/;"	m	struct:AVFilterLink
w	libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
white_point	libavutil/mastering_display_metadata.h	/^    AVRational white_point[2];$/;"	m	struct:AVMasteringDisplayMetadata
width	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
width	libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVCodecParameters
width	libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVCodecParserContext
width	libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVPanScan
width	libavcodec/dirac.h	/^    unsigned width;$/;"	m	struct:AVDiracSeqHeader
width	libavcodec/dv_profile.h	/^    int              width;                 \/* picture width in pixels *\/$/;"	m	struct:AVDVProfile
width	libavcodec/vda.h	/^    int                 width;$/;"	m	struct:vda_context
width	libavdevice/avdevice.h	/^    int width;  \/**< width *\/$/;"	m	struct:AVDeviceRect
width	libavfilter/buffersrc.h	/^    int width, height;$/;"	m	struct:AVBufferSrcParameters
width	libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
width	libavutil/hwcontext.h	/^    int width, height;$/;"	m	struct:AVHWFramesContext
window_height	libavdevice/avdevice.h	/^    int window_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
window_width	libavdevice/avdevice.h	/^    int window_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
wndx	libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
workaround	libavcodec/d3d11va.h	/^    uint64_t workaround;$/;"	m	struct:AVD3D11VAContext
workaround	libavcodec/dxva2.h	/^    uint64_t workaround;$/;"	m	struct:dxva_context
workaround_bugs	libavcodec/avcodec.h	/^    int workaround_bugs;$/;"	m	struct:AVCodecContext
wptr	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
write_data_type	libavformat/avio.h	/^    int (*write_data_type)(void *opaque, uint8_t *buf, int buf_size,$/;"	m	struct:AVIOContext
write_flag	libavformat/avio.h	/^    int write_flag;         \/**< true if open for writing *\/$/;"	m	struct:AVIOContext
write_header	libavformat/avformat.h	/^    int (*write_header)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_packet	libavformat/avformat.h	/^    int (*write_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVOutputFormat
write_packet	libavformat/avio.h	/^    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
write_trailer	libavformat/avformat.h	/^    int (*write_trailer)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_uncoded_frame	libavformat/avformat.h	/^    int (*write_uncoded_frame)(struct AVFormatContext *, int stream_index,$/;"	m	struct:AVOutputFormat
writeout_count	libavformat/avio.h	/^    int writeout_count;$/;"	m	struct:AVIOContext
written	libavformat/avio.h	/^    int64_t written;$/;"	m	struct:AVIOContext
x	libavcodec/avcodec.h	/^    int x;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
x	libavdevice/avdevice.h	/^    int x;      \/**< x coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
x	libavutil/rc4.h	/^    int x, y;$/;"	m	struct:AVRC4
xvmc_acceleration	libavcodec/avcodec.h	/^    attribute_deprecated int xvmc_acceleration;$/;"	m	struct:AVCodecContext
xvmc_id	libavcodec/xvmc.h	/^    int             xvmc_id;$/;"	m	struct:xvmc_pix_fmt
xvmc_pix_fmt	libavcodec/xvmc.h	/^struct attribute_deprecated xvmc_pix_fmt {$/;"	s
y	libavcodec/avcodec.h	/^    int y;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
y	libavdevice/avdevice.h	/^    int y;      \/**< y coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
y	libavutil/rc4.h	/^    int x, y;$/;"	m	struct:AVRC4
yaw	libavutil/spherical.h	/^    int32_t yaw;   \/\/\/< Rotation around the up vector [-180, 180].$/;"	m	struct:AVSphericalMapping
